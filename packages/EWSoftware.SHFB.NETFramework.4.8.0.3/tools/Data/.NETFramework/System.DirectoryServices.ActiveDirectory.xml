<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.DirectoryServices">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Net.DnsPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.DirectoryServices.ActiveDirectory">
      <topicdata group="api" />
      <apidata name="System.DirectoryServices.ActiveDirectory" group="namespace" />
      <elements>
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
        <element api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" />
        <element api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainMode" />
        <element api="T:System.DirectoryServices.ActiveDirectory.Domain" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainController" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestMode" />
        <element api="T:System.DirectoryServices.ActiveDirectory.Forest" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
        <element api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AdamRole" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TrustType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" />
        <element api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" />
        <element api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" />
      </elements>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryInterSiteTransport" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <topicdata name="ActiveDirectoryInterSiteTransport" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
      <apidata name="ActiveDirectoryInterSiteTransport" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <topicdata name="ActiveDirectoryInterSiteTransport" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
      <apidata name="ActiveDirectoryInterSiteTransport" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks">
      <topicdata group="api" />
      <apidata name="BridgeAllSiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BridgeAllSiteLinks" />
      <setter name="set_BridgeAllSiteLinks" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name="FindByTransportType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule">
      <topicdata group="api" />
      <apidata name="IgnoreReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreReplicationSchedule" />
      <setter name="set_IgnoreReplicationSchedule" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges">
      <topicdata group="api" />
      <apidata name="SiteLinkBridges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SiteLinkBridges" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks">
      <topicdata group="api" />
      <apidata name="SiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SiteLinks" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryObjectExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">
      <topicdata name="ActiveDirectoryObjectExistsException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
      <apidata name="ActiveDirectoryObjectExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">
      <topicdata name="ActiveDirectoryObjectExistsException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
      <apidata name="ActiveDirectoryObjectExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
      </containers>
    </api>
    <api id="Events.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">
      <topicdata name="ActiveDirectoryObjectExistsException" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
      <apidata name="ActiveDirectoryObjectExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <topicdata name="ActiveDirectoryObjectNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      <apidata name="ActiveDirectoryObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <topicdata name="ActiveDirectoryObjectNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      <apidata name="ActiveDirectoryObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      </containers>
    </api>
    <api id="Events.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <topicdata name="ActiveDirectoryObjectNotFoundException" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      <apidata name="ActiveDirectoryObjectNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <topicdata name="ActiveDirectoryOperationException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      <apidata name="ActiveDirectoryOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <topicdata name="ActiveDirectoryOperationException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      <apidata name="ActiveDirectoryOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      </containers>
    </api>
    <api id="Events.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <topicdata name="ActiveDirectoryOperationException" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      <apidata name="ActiveDirectoryOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryPartition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <topicdata name="ActiveDirectoryPartition" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
      <apidata name="ActiveDirectoryPartition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <topicdata name="ActiveDirectoryPartition" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
      <apidata name="ActiveDirectoryPartition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryReplicationMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.DictionaryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <topicdata name="ActiveDirectoryReplicationMetadata" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      <apidata name="ActiveDirectoryReplicationMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <topicdata name="ActiveDirectoryReplicationMetadata" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      <apidata name="ActiveDirectoryReplicationMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames">
      <topicdata group="api" />
      <apidata name="AttributeNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeNames" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRole" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.SchemaRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.NamingRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.PdcRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.RidRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.InfrastructureRole" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.InfrastructureRole">
      <topicdata group="api" notopic="" />
      <apidata name="InfrastructureRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.NamingRole">
      <topicdata group="api" notopic="" />
      <apidata name="NamingRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.PdcRole">
      <topicdata group="api" notopic="" />
      <apidata name="PdcRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.RidRole">
      <topicdata group="api" notopic="" />
      <apidata name="RidRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.SchemaRole">
      <topicdata group="api" notopic="" />
      <apidata name="SchemaRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <topicdata name="ActiveDirectoryRoleCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
      <apidata name="ActiveDirectoryRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <topicdata name="ActiveDirectoryRoleCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
      <apidata name="ActiveDirectoryRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="roles">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySchedule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <topicdata name="ActiveDirectorySchedule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      <apidata name="ActiveDirectorySchedule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <topicdata name="ActiveDirectorySchedule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      <apidata name="ActiveDirectorySchedule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule">
      <topicdata name="SetSchedule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetSchedule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor" />
      <parameters>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule">
      <topicdata group="api" />
      <apidata name="RawSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RawSchedule" />
      <setter name="set_RawSchedule" />
      <returns>
        <arrayOf rank="3">
          <type api="T:System.Boolean" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule">
      <topicdata group="api" />
      <apidata name="ResetSchedule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <topicdata group="api" />
      <apidata name="SetDailySchedule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="fromMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
        <parameter name="toHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="toMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <topicdata group="api" />
      <apidata name="SetSchedule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="day">
          <type api="T:System.DayOfWeek" ref="false" />
        </parameter>
        <parameter name="fromHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="fromMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
        <parameter name="toHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="toMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <topicdata group="api" />
      <apidata name="SetSchedule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="days">
          <arrayOf rank="1">
            <type api="T:System.DayOfWeek" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="fromHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="fromMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
        <parameter name="toHour">
          <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
        </parameter>
        <parameter name="toMinute">
          <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySchema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <topicdata name="ActiveDirectorySchema" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      <apidata name="ActiveDirectorySchema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <topicdata name="ActiveDirectorySchema" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      <apidata name="ActiveDirectorySchema" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
      <topicdata name="FindAllClasses" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAllClasses" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
      <topicdata name="FindAllProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
      <topicdata group="api" />
      <apidata name="FindAllClasses" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)">
      <topicdata group="api" />
      <apidata name="FindAllClasses" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses">
      <topicdata group="api" />
      <apidata name="FindAllDefunctClasses" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties">
      <topicdata group="api" />
      <apidata name="FindAllDefunctProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
      <topicdata group="api" />
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)">
      <topicdata group="api" />
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)">
      <topicdata group="api" />
      <apidata name="FindClass" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)">
      <topicdata group="api" />
      <apidata name="FindDefunctClass" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commonName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)">
      <topicdata group="api" />
      <apidata name="FindDefunctProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commonName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)">
      <topicdata group="api" />
      <apidata name="FindProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema">
      <topicdata group="api" />
      <apidata name="GetCurrentSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema">
      <topicdata group="api" />
      <apidata name="RefreshSchema" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner">
      <topicdata group="api" />
      <apidata name="SchemaRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemaRoleOwner" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySchemaClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <topicdata name="ActiveDirectorySchemaClass" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
      <apidata name="ActiveDirectorySchemaClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <topicdata name="ActiveDirectorySchemaClass" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
      <apidata name="ActiveDirectorySchemaClass" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses">
      <topicdata group="api" />
      <apidata name="AuxiliaryClasses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuxiliaryClasses" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName">
      <topicdata group="api" />
      <apidata name="CommonName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CommonName" />
      <setter name="set_CommonName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor">
      <topicdata group="api" />
      <apidata name="DefaultObjectSecurityDescriptor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultObjectSecurityDescriptor" />
      <setter name="set_DefaultObjectSecurityDescriptor" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties">
      <topicdata group="api" />
      <apidata name="GetAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct">
      <topicdata group="api" />
      <apidata name="IsDefunct" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDefunct" />
      <setter name="set_IsDefunct" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties">
      <topicdata group="api" />
      <apidata name="MandatoryProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MandatoryProperties" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid">
      <topicdata group="api" />
      <apidata name="Oid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Oid" />
      <setter name="set_Oid" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties">
      <topicdata group="api" />
      <apidata name="OptionalProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OptionalProperties" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors">
      <topicdata group="api" />
      <apidata name="PossibleInferiors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PossibleInferiors" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors">
      <topicdata group="api" />
      <apidata name="PossibleSuperiors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PossibleSuperiors" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid">
      <topicdata group="api" />
      <apidata name="SchemaGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SchemaGuid" />
      <setter name="set_SchemaGuid" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf">
      <topicdata group="api" />
      <apidata name="SubClassOf" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SubClassOf" />
      <setter name="set_SubClassOf" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <topicdata name="ActiveDirectorySchemaClassCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
      <apidata name="ActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <topicdata name="ActiveDirectorySchemaClassCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
      <apidata name="ActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClasses">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClasses">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClasses">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClasses">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySchemaProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <topicdata name="ActiveDirectorySchemaProperty" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
      <apidata name="ActiveDirectorySchemaProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <topicdata name="ActiveDirectorySchemaProperty" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
      <apidata name="ActiveDirectorySchemaProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName">
      <topicdata group="api" />
      <apidata name="CommonName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CommonName" />
      <setter name="set_CommonName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="ldapDisplayName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct">
      <topicdata group="api" />
      <apidata name="IsDefunct" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDefunct" />
      <setter name="set_IsDefunct" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr">
      <topicdata group="api" />
      <apidata name="IsInAnr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsInAnr" />
      <setter name="set_IsInAnr" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed">
      <topicdata group="api" />
      <apidata name="IsIndexed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsIndexed" />
      <setter name="set_IsIndexed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer">
      <topicdata group="api" />
      <apidata name="IsIndexedOverContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsIndexedOverContainer" />
      <setter name="set_IsIndexedOverContainer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog">
      <topicdata group="api" />
      <apidata name="IsInGlobalCatalog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsInGlobalCatalog" />
      <setter name="set_IsInGlobalCatalog" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject">
      <topicdata group="api" />
      <apidata name="IsOnTombstonedObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsOnTombstonedObject" />
      <setter name="set_IsOnTombstonedObject" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued">
      <topicdata group="api" />
      <apidata name="IsSingleValued" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsSingleValued" />
      <setter name="set_IsSingleValued" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed">
      <topicdata group="api" />
      <apidata name="IsTupleIndexed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsTupleIndexed" />
      <setter name="set_IsTupleIndexed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link">
      <topicdata group="api" />
      <apidata name="Link" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Link" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId">
      <topicdata group="api" />
      <apidata name="LinkId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LinkId" />
      <setter name="set_LinkId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid">
      <topicdata group="api" />
      <apidata name="Oid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Oid" />
      <setter name="set_Oid" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower">
      <topicdata group="api" />
      <apidata name="RangeLower" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RangeLower" />
      <setter name="set_RangeLower" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper">
      <topicdata group="api" />
      <apidata name="RangeUpper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RangeUpper" />
      <setter name="set_RangeUpper" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid">
      <topicdata group="api" />
      <apidata name="SchemaGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SchemaGuid" />
      <setter name="set_SchemaGuid" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax">
      <topicdata group="api" />
      <apidata name="Syntax" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Syntax" />
      <setter name="set_Syntax" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <topicdata name="ActiveDirectorySchemaPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
      <apidata name="ActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <topicdata name="ActiveDirectorySchemaPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
      <apidata name="ActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryServerDownException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <topicdata name="ActiveDirectoryServerDownException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      <apidata name="ActiveDirectoryServerDownException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <topicdata name="ActiveDirectoryServerDownException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      <apidata name="ActiveDirectoryServerDownException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      </containers>
    </api>
    <api id="Events.T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <topicdata name="ActiveDirectoryServerDownException" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      <apidata name="ActiveDirectoryServerDownException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <topicdata name="ActiveDirectorySite" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
      <apidata name="ActiveDirectorySite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <topicdata name="ActiveDirectorySite" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
      <apidata name="ActiveDirectorySite" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites">
      <topicdata group="api" />
      <apidata name="AdjacentSites" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AdjacentSites" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers">
      <topicdata group="api" />
      <apidata name="BridgeheadServers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BridgeheadServers" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains">
      <topicdata group="api" />
      <apidata name="Domains" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Domains" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite">
      <topicdata group="api" />
      <apidata name="GetComputerSite" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator">
      <topicdata group="api" />
      <apidata name="InterSiteTopologyGenerator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InterSiteTopologyGenerator" />
      <setter name="set_InterSiteTopologyGenerator" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule">
      <topicdata group="api" />
      <apidata name="IntraSiteReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IntraSiteReplicationSchedule" />
      <setter name="set_IntraSiteReplicationSchedule" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location">
      <topicdata group="api" />
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Location" />
      <setter name="set_Location" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Options" />
      <setter name="set_Options" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers">
      <topicdata group="api" />
      <apidata name="PreferredRpcBridgeheadServers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PreferredRpcBridgeheadServers" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers">
      <topicdata group="api" />
      <apidata name="PreferredSmtpBridgeheadServers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PreferredSmtpBridgeheadServers" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers">
      <topicdata group="api" />
      <apidata name="Servers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Servers" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks">
      <topicdata group="api" />
      <apidata name="SiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SiteLinks" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets">
      <topicdata group="api" />
      <apidata name="Subnets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Subnets" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <topicdata name="ActiveDirectorySiteCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
      <apidata name="ActiveDirectorySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <topicdata name="ActiveDirectorySiteCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
      <apidata name="ActiveDirectorySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sites">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sites">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySiteLink" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <topicdata name="ActiveDirectorySiteLink" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      <apidata name="ActiveDirectorySiteLink" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <topicdata name="ActiveDirectorySiteLink" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      <apidata name="ActiveDirectorySiteLink" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName">
      <topicdata name="FindByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost">
      <topicdata group="api" />
      <apidata name="Cost" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Cost" />
      <setter name="set_Cost" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled">
      <topicdata group="api" />
      <apidata name="DataCompressionEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataCompressionEnabled" />
      <setter name="set_DataCompressionEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteLinkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule">
      <topicdata group="api" />
      <apidata name="InterSiteReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InterSiteReplicationSchedule" />
      <setter name="set_InterSiteReplicationSchedule" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled">
      <topicdata group="api" />
      <apidata name="NotificationEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotificationEnabled" />
      <setter name="set_NotificationEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled">
      <topicdata group="api" />
      <apidata name="ReciprocalReplicationEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReciprocalReplicationEnabled" />
      <setter name="set_ReciprocalReplicationEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval">
      <topicdata group="api" />
      <apidata name="ReplicationInterval" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReplicationInterval" />
      <setter name="set_ReplicationInterval" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites">
      <topicdata group="api" />
      <apidata name="Sites" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Sites" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySiteLinkBridge" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <topicdata name="ActiveDirectorySiteLinkBridge" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      <apidata name="ActiveDirectorySiteLinkBridge" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <topicdata name="ActiveDirectorySiteLinkBridge" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      <apidata name="ActiveDirectorySiteLinkBridge" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName">
      <topicdata name="FindByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="bridgeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks">
      <topicdata group="api" />
      <apidata name="SiteLinks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SiteLinks" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <topicdata name="ActiveDirectorySiteLinkCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
      <apidata name="ActiveDirectorySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <topicdata name="ActiveDirectorySiteLinkCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
      <apidata name="ActiveDirectorySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="links">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="links">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySiteOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoTopologyDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.TopologyCleanupDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoMinimumHopDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.StaleServerDetectDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoInterSiteTopologyDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.GroupMembershipCachingEnabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.ForceKccWindows2003Behavior" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseWindows2000IstgElection" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RandomBridgeHeaderServerSelectionDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseHashingForReplicationSchedule" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RedundantServerTopologyEnabled" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoInterSiteTopologyDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="AutoInterSiteTopologyDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoMinimumHopDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="AutoMinimumHopDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoTopologyDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="AutoTopologyDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.ForceKccWindows2003Behavior">
      <topicdata group="api" notopic="" />
      <apidata name="ForceKccWindows2003Behavior" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.GroupMembershipCachingEnabled">
      <topicdata group="api" notopic="" />
      <apidata name="GroupMembershipCachingEnabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RandomBridgeHeaderServerSelectionDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="RandomBridgeHeaderServerSelectionDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RedundantServerTopologyEnabled">
      <topicdata group="api" notopic="" />
      <apidata name="RedundantServerTopologyEnabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.StaleServerDetectDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="StaleServerDetectDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.TopologyCleanupDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="TopologyCleanupDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseHashingForReplicationSchedule">
      <topicdata group="api" notopic="" />
      <apidata name="UseHashingForReplicationSchedule" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseWindows2000IstgElection">
      <topicdata group="api" notopic="" />
      <apidata name="UseWindows2000IstgElection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySubnet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <topicdata name="ActiveDirectorySubnet" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      <apidata name="ActiveDirectorySubnet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <topicdata name="ActiveDirectorySubnet" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      <apidata name="ActiveDirectorySubnet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="subnetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="subnetName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="subnetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location">
      <topicdata group="api" />
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Location" />
      <setter name="set_Location" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site">
      <topicdata group="api" />
      <apidata name="Site" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Site" />
      <setter name="set_Site" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySubnetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <topicdata name="ActiveDirectorySubnetCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
      <apidata name="ActiveDirectorySubnetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <topicdata name="ActiveDirectorySubnetCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
      <apidata name="ActiveDirectorySubnetCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnets">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnets">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="subnet">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySyntax" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseExactString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseIgnoreString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.NumericString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DirectoryString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.OctetString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.SecurityDescriptor" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int64" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Bool" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Oid" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.GeneralizedTime" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.UtcTime" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DN" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithBinary" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Enumeration" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.IA5String" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PrintableString" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Sid" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.AccessPointDN" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ORName" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PresentationAddress" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ReplicaLink" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.AccessPointDN">
      <topicdata group="api" notopic="" />
      <apidata name="AccessPointDN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Bool">
      <topicdata group="api" notopic="" />
      <apidata name="Bool" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseExactString">
      <topicdata group="api" notopic="" />
      <apidata name="CaseExactString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseIgnoreString">
      <topicdata group="api" notopic="" />
      <apidata name="CaseIgnoreString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DirectoryString">
      <topicdata group="api" notopic="" />
      <apidata name="DirectoryString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DN">
      <topicdata group="api" notopic="" />
      <apidata name="DN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithBinary">
      <topicdata group="api" notopic="" />
      <apidata name="DNWithBinary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithString">
      <topicdata group="api" notopic="" />
      <apidata name="DNWithString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Enumeration">
      <topicdata group="api" notopic="" />
      <apidata name="Enumeration" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.GeneralizedTime">
      <topicdata group="api" notopic="" />
      <apidata name="GeneralizedTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.IA5String">
      <topicdata group="api" notopic="" />
      <apidata name="IA5String" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int">
      <topicdata group="api" notopic="" />
      <apidata name="Int" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int64">
      <topicdata group="api" notopic="" />
      <apidata name="Int64" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.NumericString">
      <topicdata group="api" notopic="" />
      <apidata name="NumericString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.OctetString">
      <topicdata group="api" notopic="" />
      <apidata name="OctetString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Oid">
      <topicdata group="api" notopic="" />
      <apidata name="Oid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ORName">
      <topicdata group="api" notopic="" />
      <apidata name="ORName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PresentationAddress">
      <topicdata group="api" notopic="" />
      <apidata name="PresentationAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PrintableString">
      <topicdata group="api" notopic="" />
      <apidata name="PrintableString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ReplicaLink">
      <topicdata group="api" notopic="" />
      <apidata name="ReplicaLink" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.SecurityDescriptor">
      <topicdata group="api" notopic="" />
      <apidata name="SecurityDescriptor" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Sid">
      <topicdata group="api" notopic="" />
      <apidata name="Sid" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.UtcTime">
      <topicdata group="api" notopic="" />
      <apidata name="UtcTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryTransportType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Rpc" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Rpc">
      <topicdata group="api" notopic="" />
      <apidata name="Rpc" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp">
      <topicdata group="api" notopic="" />
      <apidata name="Smtp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <topicdata group="api" />
      <apidata name="AdamInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <topicdata name="AdamInstance" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
      <apidata name="AdamInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <topicdata name="AdamInstance" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
      <apidata name="AdamInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency">
      <topicdata group="api" />
      <apidata name="CheckReplicationConsistency" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet">
      <topicdata group="api" />
      <apidata name="ConfigurationSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConfigurationSet" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition">
      <topicdata group="api" />
      <apidata name="DefaultPartition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultPartition" />
      <setter name="set_DefaultPartition" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors">
      <topicdata group="api" />
      <apidata name="GetAllReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures">
      <topicdata group="api" />
      <apidata name="GetReplicationConnectionFailures" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationCursors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="objectPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation">
      <topicdata group="api" />
      <apidata name="GetReplicationOperationInformation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName">
      <topicdata group="api" />
      <apidata name="HostName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HostName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections">
      <topicdata group="api" />
      <apidata name="InboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_InboundConnections">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IPAddress">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.Net.DnsPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="Assert" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort">
      <topicdata group="api" />
      <apidata name="LdapPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LdapPort" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections">
      <topicdata group="api" />
      <apidata name="OutboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_OutboundConnections">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles">
      <topicdata group="api" />
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Roles" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <topicdata group="api" />
      <apidata name="SeizeRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName">
      <topicdata group="api" />
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SiteName">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort">
      <topicdata group="api" />
      <apidata name="SslPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SslPort" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_SyncFromAllServersCallback">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SyncFromAllServersCallback">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromAllServers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <topicdata group="api" />
      <apidata name="TransferRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="TriggerSyncReplicaFromNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <topicdata group="api" />
      <apidata name="AdamInstanceCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <topicdata name="AdamInstanceCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
      <apidata name="AdamInstanceCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <topicdata name="AdamInstanceCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
      <apidata name="AdamInstanceCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="adamInstance">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="adamInstances">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="adamInstance">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamRole">
      <topicdata group="api" />
      <apidata name="AdamRole" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.AdamRole.SchemaRole" />
        <element api="F:System.DirectoryServices.ActiveDirectory.AdamRole.NamingRole" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.AdamRole.NamingRole">
      <topicdata group="api" notopic="" />
      <apidata name="NamingRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.AdamRole.SchemaRole">
      <topicdata group="api" notopic="" />
      <apidata name="SchemaRole" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <topicdata group="api" />
      <apidata name="AdamRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <topicdata name="AdamRoleCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
      <apidata name="AdamRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <topicdata name="AdamRoleCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
      <apidata name="AdamRoleCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="roles">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRole" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <topicdata group="api" />
      <apidata name="ApplicationPartition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <topicdata name="ApplicationPartition" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="ApplicationPartition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <topicdata name="ApplicationPartition" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      <apidata name="ApplicationPartition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
      <topicdata name="FindAllDirectoryServers" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAllDirectoryServers" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
      <topicdata name="FindAllDiscoverableDirectoryServers" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAllDiscoverableDirectoryServers" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
      <topicdata name="FindDirectoryServer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="distinguishedName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="distinguishedName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objectClass">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers">
      <topicdata group="api" />
      <apidata name="DirectoryServers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DirectoryServers" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
      <topicdata group="api" />
      <apidata name="FindAllDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableDirectoryServers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="distinguishedName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
      <topicdata group="api" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="forceRediscovery">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)">
      <topicdata group="api" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FindDirectoryServer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="forceRediscovery">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetApplicationPartition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain">
      <topicdata group="api" />
      <apidata name="SecurityReferenceDomain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityReferenceDomain" />
      <setter name="set_SecurityReferenceDomain" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <topicdata group="api" />
      <apidata name="ApplicationPartitionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <topicdata name="ApplicationPartitionCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      <apidata name="ApplicationPartitionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <topicdata name="ApplicationPartitionCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      <apidata name="ApplicationPartitionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="applicationPartition">
          <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="applicationPartitions">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="applicationPartition">
          <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata">
      <topicdata group="api" />
      <apidata name="AttributeMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.AttributeMetadata">
      <topicdata name="AttributeMetadata" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" />
      <apidata name="AttributeMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AttributeMetadata">
      <topicdata name="AttributeMetadata" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" />
      <apidata name="AttributeMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime">
      <topicdata group="api" />
      <apidata name="LastOriginatingChangeTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastOriginatingChangeTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId">
      <topicdata group="api" />
      <apidata name="LastOriginatingInvocationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastOriginatingInvocationId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn">
      <topicdata group="api" />
      <apidata name="LocalChangeUsn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LocalChangeUsn" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn">
      <topicdata group="api" />
      <apidata name="OriginatingChangeUsn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginatingChangeUsn" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer">
      <topicdata group="api" />
      <apidata name="OriginatingServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginatingServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <topicdata group="api" />
      <apidata name="AttributeMetadataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <topicdata name="AttributeMetadataCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
      <apidata name="AttributeMetadataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <topicdata name="AttributeMetadataCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
      <apidata name="AttributeMetadataCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <topicdata group="api" />
      <apidata name="ConfigurationSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <topicdata name="ConfigurationSet" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      <apidata name="ConfigurationSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <topicdata name="ConfigurationSet" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      <apidata name="ConfigurationSet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
      <topicdata name="FindAdamInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
      <topicdata name="FindAllAdamInstances" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances">
      <topicdata group="api" />
      <apidata name="AdamInstances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AdamInstances" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions">
      <topicdata group="api" />
      <apidata name="ApplicationPartitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationPartitions" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
      <topicdata group="api" />
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)">
      <topicdata group="api" />
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="FindAdamInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
      <topicdata group="api" />
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="FindAllAdamInstances" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="partitionName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetConfigurationSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel">
      <topicdata group="api" />
      <apidata name="GetSecurityLevel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner">
      <topicdata group="api" />
      <apidata name="NamingRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NamingRoleOwner" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Schema" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner">
      <topicdata group="api" />
      <apidata name="SchemaRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemaRoleOwner" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)">
      <topicdata group="api" />
      <apidata name="SetSecurityLevel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="securityLevel">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites">
      <topicdata group="api" />
      <apidata name="Sites" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Sites" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryContext">
      <topicdata group="api" />
      <apidata name="DirectoryContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DirectoryContext">
      <topicdata name="DirectoryContext" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      <apidata name="DirectoryContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DirectoryContext">
      <topicdata name="DirectoryContext" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      <apidata name="DirectoryContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor" />
      <parameters>
        <parameter name="contextType">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType">
      <topicdata group="api" />
      <apidata name="ContextType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContextType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType">
      <topicdata group="api" />
      <apidata name="DirectoryContextType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.DirectoryServer" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ConfigurationSet" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ApplicationPartition" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ApplicationPartition">
      <topicdata group="api" notopic="" />
      <apidata name="ApplicationPartition" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ConfigurationSet">
      <topicdata group="api" notopic="" />
      <apidata name="ConfigurationSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.DirectoryServer">
      <topicdata group="api" notopic="" />
      <apidata name="DirectoryServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <topicdata group="api" />
      <apidata name="DirectoryServer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.AdamInstance" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <topicdata name="DirectoryServer" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      <apidata name="DirectoryServer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <topicdata name="DirectoryServer" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      <apidata name="DirectoryServer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
      <topicdata group="api" />
      <apidata name="CheckReplicationConsistency" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
      <topicdata group="api" />
      <apidata name="GetAllReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
      <topicdata group="api" />
      <apidata name="GetReplicationConnectionFailures" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationCursors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objectPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
      <topicdata group="api" />
      <apidata name="GetReplicationOperationInformation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
      <topicdata group="api" />
      <apidata name="InboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InboundConnections">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IPAddress">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)">
      <topicdata group="api" />
      <apidata name="MoveToAnotherSite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
      <topicdata group="api" />
      <apidata name="OutboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_OutboundConnections">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions">
      <topicdata group="api" />
      <apidata name="Partitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Partitions" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
      <topicdata group="api" />
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SiteName">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SyncFromAllServersCallback">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SyncFromAllServersCallback">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromAllServers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="TriggerSyncReplicaFromNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <topicdata group="api" />
      <apidata name="DirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <topicdata name="DirectoryServerCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
      <apidata name="DirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <topicdata name="DirectoryServerCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
      <apidata name="DirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="servers">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)">
      <topicdata group="api" />
      <apidata name="OnValidate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnValidate(System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="server">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.Domain">
      <topicdata group="api" />
      <apidata name="Domain" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Children" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Parent" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.Domain">
      <topicdata name="Domain" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="Domain" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship">
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.Domain">
      <topicdata name="Domain" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Domain" />
      <apidata name="Domain" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Children" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.Parent" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
      <topicdata name="FindAllDiscoverableDomainControllers" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAllDiscoverableDomainControllers" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
      <topicdata name="FindAllDomainControllers" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAllDomainControllers" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
      <topicdata name="FindDomainController" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship">
      <topicdata name="UpdateLocalSideOfTrustRelationship" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Children" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <topicdata group="api" />
      <apidata name="CreateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="trustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="CreateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <topicdata group="api" />
      <apidata name="DeleteTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers">
      <topicdata group="api" />
      <apidata name="DomainControllers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DomainControllers" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode">
      <topicdata group="api" />
      <apidata name="DomainMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DomainMode" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel">
      <topicdata group="api" />
      <apidata name="DomainModeLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DomainModeLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
      <topicdata group="api" />
      <apidata name="FindAllDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDomainControllers" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
      <topicdata group="api" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)">
      <topicdata group="api" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.Forest">
      <topicdata group="api" />
      <apidata name="Forest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Forest" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships">
      <topicdata group="api" />
      <apidata name="GetAllTrustRelationships" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain">
      <topicdata group="api" />
      <apidata name="GetComputerDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain">
      <topicdata group="api" />
      <apidata name="GetCurrentDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetDomain" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)">
      <topicdata group="api" />
      <apidata name="GetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)">
      <topicdata group="api" />
      <apidata name="GetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="GetTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner">
      <topicdata group="api" />
      <apidata name="InfrastructureRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InfrastructureRoleOwner" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner">
      <topicdata group="api" />
      <apidata name="PdcRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PdcRoleOwner" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)">
      <topicdata group="api" />
      <apidata name="RaiseDomainFunctionality" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domainMode">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)">
      <topicdata group="api" />
      <apidata name="RaiseDomainFunctionalityLevel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domainMode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <topicdata group="api" />
      <apidata name="RepairTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner">
      <topicdata group="api" />
      <apidata name="RidRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RidRoleOwner" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="UpdateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="VerifyOutboundTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomainName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="VerifyTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetDomain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <topicdata group="api" />
      <apidata name="DomainCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <topicdata name="DomainCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      <apidata name="DomainCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <topicdata name="DomainCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      <apidata name="DomainCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domains">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domain">
          <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions">
      <topicdata group="api" />
      <apidata name="DomainCollisionOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByAdmin" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByConflict" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByAdmin" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByConflict" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByAdmin">
      <topicdata group="api" notopic="" />
      <apidata name="NetBiosNameDisabledByAdmin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByConflict">
      <topicdata group="api" notopic="" />
      <apidata name="NetBiosNameDisabledByConflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByAdmin">
      <topicdata group="api" notopic="" />
      <apidata name="SidDisabledByAdmin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByConflict">
      <topicdata group="api" notopic="" />
      <apidata name="SidDisabledByConflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainController">
      <topicdata group="api" />
      <apidata name="DomainController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll">
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne">
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DomainController">
      <topicdata name="DomainController" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      <apidata name="DomainController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll">
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne">
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DomainController">
      <topicdata name="DomainController" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      <apidata name="DomainController" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DomainController.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll">
      <topicdata name="FindAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne">
      <topicdata name="FindOne" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency">
      <topicdata group="api" />
      <apidata name="CheckReplicationConsistency" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime">
      <topicdata group="api" />
      <apidata name="CurrentTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain">
      <topicdata group="api" />
      <apidata name="Domain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Domain" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog">
      <topicdata group="api" />
      <apidata name="EnableGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.DomainController.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest">
      <topicdata group="api" />
      <apidata name="Forest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Forest" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors">
      <topicdata group="api" />
      <apidata name="GetAllReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher">
      <topicdata group="api" />
      <apidata name="GetDirectorySearcher" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetDomainController" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures">
      <topicdata group="api" />
      <apidata name="GetReplicationConnectionFailures" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationCursors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="objectPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="GetReplicationNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation">
      <topicdata group="api" />
      <apidata name="GetReplicationOperationInformation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn">
      <topicdata group="api" />
      <apidata name="HighestCommittedUsn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HighestCommittedUsn" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections">
      <topicdata group="api" />
      <apidata name="InboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_InboundConnections">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IPAddress">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.Net.DnsPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="Assert" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog">
      <topicdata group="api" />
      <apidata name="IsGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion">
      <topicdata group="api" />
      <apidata name="OSVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OSVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections">
      <topicdata group="api" />
      <apidata name="OutboundConnections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_OutboundConnections">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles">
      <topicdata group="api" />
      <apidata name="Roles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Roles" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <topicdata group="api" />
      <apidata name="SeizeRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName">
      <topicdata group="api" />
      <apidata name="SiteName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SiteName">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersCallback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_SyncFromAllServersCallback">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SyncFromAllServersCallback">
        <attributes>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="LinkDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
          <attribute>
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="InheritanceDemand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromAllServers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SyncReplicaFromServer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <topicdata group="api" />
      <apidata name="TransferRoleOwnership" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="role">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)">
      <topicdata group="api" />
      <apidata name="TriggerSyncReplicaFromNeighbors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="partition">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <topicdata group="api" />
      <apidata name="DomainControllerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <topicdata name="DomainControllerCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      <apidata name="DomainControllerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <topicdata name="DomainControllerCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      <apidata name="DomainControllerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domainController">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domainControllers">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="domainController">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.DomainMode">
      <topicdata group="api" />
      <apidata name="DomainMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Unknown" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008R2Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows8Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2012R2Domain" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2000MixedDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2000NativeDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2003Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2003InterimDomain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2008Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008R2Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2008R2Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2012R2Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2012R2Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows8Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Windows8Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.Forest">
      <topicdata group="api" />
      <apidata name="Forest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Domains" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.Forest">
      <topicdata name="Forest" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="Forest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.ToString" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship">
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.Forest">
      <topicdata name="Forest" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.Forest" />
      <apidata name="Forest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Domains" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Schema" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner" />
        <element api="P:System.DirectoryServices.ActiveDirectory.Forest.Sites" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
      <topicdata name="FindAllDiscoverableGlobalCatalogs" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAllDiscoverableGlobalCatalogs" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
      <topicdata name="FindAllGlobalCatalogs" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAllGlobalCatalogs" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
      <topicdata name="FindGlobalCatalog" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship">
      <topicdata name="UpdateLocalSideOfTrustRelationship" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions">
      <topicdata group="api" />
      <apidata name="ApplicationPartitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ApplicationPartitions" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <topicdata group="api" />
      <apidata name="CreateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="trustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="CreateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <topicdata group="api" />
      <apidata name="DeleteTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.Dispose" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Domains">
      <topicdata group="api" />
      <apidata name="Domains" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Domains" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllDiscoverableGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
      <topicdata group="api" />
      <apidata name="FindAllGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)">
      <topicdata group="api" />
      <apidata name="FindAllGlobalCatalogs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
      <topicdata group="api" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)">
      <topicdata group="api" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode">
      <topicdata group="api" />
      <apidata name="ForestMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ForestMode" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel">
      <topicdata group="api" />
      <apidata name="ForestModeLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ForestModeLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships">
      <topicdata group="api" />
      <apidata name="GetAllTrustRelationships" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest">
      <topicdata group="api" />
      <apidata name="GetCurrentForest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetForest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)">
      <topicdata group="api" />
      <apidata name="GetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)">
      <topicdata group="api" />
      <apidata name="GetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="GetTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs">
      <topicdata group="api" />
      <apidata name="GlobalCatalogs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GlobalCatalogs" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner">
      <topicdata group="api" />
      <apidata name="NamingRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NamingRoleOwner" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)">
      <topicdata group="api" />
      <apidata name="RaiseForestFunctionality" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="forestMode">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)">
      <topicdata group="api" />
      <apidata name="RaiseForestFunctionalityLevel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="forestMode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <topicdata group="api" />
      <apidata name="RepairTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain">
      <topicdata group="api" />
      <apidata name="RootDomain" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RootDomain" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.Domain" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Schema" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner">
      <topicdata group="api" />
      <apidata name="SchemaRoleOwner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemaRoleOwner" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetSelectiveAuthenticationStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetSidFilteringStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.Forest.Sites">
      <topicdata group="api" />
      <apidata name="Sites" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Sites" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateLocalSideOfTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newTrustPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="UpdateTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
        <parameter name="newTrustDirection">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)">
      <topicdata group="api" />
      <apidata name="VerifyOutboundTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForestName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <topicdata group="api" />
      <apidata name="VerifyTrustRelationship" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetForest">
          <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.Forest" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestMode">
      <topicdata group="api" />
      <apidata name="ForestMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Unknown" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008R2Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows8Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2012R2Forest" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2000Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2003Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2003InterimForest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2008Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008R2Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2008R2Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2012R2Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows2012R2Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows8Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Windows8Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <topicdata group="api" />
      <apidata name="ForestTrustCollisionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <topicdata name="ForestTrustCollisionException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      <apidata name="ForestTrustCollisionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <topicdata name="ForestTrustCollisionException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      <apidata name="ForestTrustCollisionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      </containers>
    </api>
    <api id="Events.T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <topicdata name="ForestTrustCollisionException" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      <apidata name="ForestTrustCollisionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="collisions">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions">
      <topicdata group="api" />
      <apidata name="Collisions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Collisions" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType">
      <topicdata group="api" />
      <apidata name="ForestTrustCollisionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Other" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain">
      <topicdata group="api" notopic="" />
      <apidata name="Domain" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Other">
      <topicdata group="api" notopic="" />
      <apidata name="Other" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName">
      <topicdata group="api" notopic="" />
      <apidata name="TopLevelName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <topicdata group="api" />
      <apidata name="ForestTrustDomainInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <topicdata name="ForestTrustDomainInfoCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
      <apidata name="ForestTrustDomainInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <topicdata name="ForestTrustDomainInfoCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
      <apidata name="ForestTrustDomainInfoCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <topicdata group="api" />
      <apidata name="ForestTrustDomainInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <topicdata name="ForestTrustDomainInformation" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" />
      <apidata name="ForestTrustDomainInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <topicdata name="ForestTrustDomainInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" />
      <apidata name="ForestTrustDomainInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName">
      <topicdata group="api" />
      <apidata name="DnsName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DnsName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid">
      <topicdata group="api" />
      <apidata name="DomainSid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DomainSid" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName">
      <topicdata group="api" />
      <apidata name="NetBiosName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NetBiosName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Status" />
      <setter name="set_Status" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus">
      <topicdata group="api" />
      <apidata name="ForestTrustDomainStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.Enabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidAdminDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidConflictDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameAdminDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameConflictDisabled" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.Enabled">
      <topicdata group="api" notopic="" />
      <apidata name="Enabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameAdminDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="NetBiosNameAdminDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameConflictDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="NetBiosNameConflictDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidAdminDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="SidAdminDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidConflictDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="SidConflictDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <topicdata group="api" />
      <apidata name="ForestTrustRelationshipCollision" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <topicdata name="ForestTrustRelationshipCollision" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" />
      <apidata name="ForestTrustRelationshipCollision" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <topicdata name="ForestTrustRelationshipCollision" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" />
      <apidata name="ForestTrustRelationshipCollision" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord">
      <topicdata group="api" />
      <apidata name="CollisionRecord" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CollisionRecord" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType">
      <topicdata group="api" />
      <apidata name="CollisionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CollisionType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption">
      <topicdata group="api" />
      <apidata name="DomainCollisionOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DomainCollisionOption" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption">
      <topicdata group="api" />
      <apidata name="TopLevelNameCollisionOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TopLevelNameCollisionOption" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <topicdata group="api" />
      <apidata name="ForestTrustRelationshipCollisionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <topicdata name="ForestTrustRelationshipCollisionCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
      <apidata name="ForestTrustRelationshipCollisionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <topicdata name="ForestTrustRelationshipCollisionCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
      <apidata name="ForestTrustRelationshipCollisionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collision">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collision">
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <topicdata group="api" />
      <apidata name="ForestTrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <topicdata name="ForestTrustRelationshipInformation" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      <apidata name="ForestTrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <topicdata name="ForestTrustRelationshipInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      <apidata name="ForestTrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames">
      <topicdata group="api" />
      <apidata name="ExcludedTopLevelNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExcludedTopLevelNames" />
      <returns>
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames">
      <topicdata group="api" />
      <apidata name="TopLevelNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TopLevelNames" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation">
      <topicdata group="api" />
      <apidata name="TrustedDomainInformation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TrustedDomainInformation" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <topicdata group="api" />
      <apidata name="GlobalCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll">
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne">
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <topicdata name="GlobalCatalog" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      <apidata name="GlobalCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll">
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne">
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <topicdata name="GlobalCatalog" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      <apidata name="GlobalCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll">
      <topicdata name="FindAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne">
      <topicdata name="FindOne" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog">
      <topicdata group="api" />
      <apidata name="DisableGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog">
      <topicdata group="api" />
      <apidata name="EnableGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties">
      <topicdata group="api" />
      <apidata name="FindAllProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="siteName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="flag">
          <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher">
      <topicdata group="api" />
      <apidata name="GetDirectorySearcher" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <topicdata group="api" />
      <apidata name="GetGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog">
      <topicdata group="api" />
      <apidata name="IsGlobalCatalog" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.DomainController" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="InheritanceDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <topicdata group="api" />
      <apidata name="GlobalCatalogCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <topicdata name="GlobalCatalogCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      <apidata name="GlobalCatalogCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <topicdata name="GlobalCatalogCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      <apidata name="GlobalCatalogCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="globalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="globalCatalogs">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="globalCatalog">
          <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.HourOfDay">
      <topicdata group="api" />
      <apidata name="HourOfDay" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Zero" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.One" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Two" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Three" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Four" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Five" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Six" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seven" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eight" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nine" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Ten" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eleven" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twelve" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Thirteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fourteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fifteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Sixteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seventeen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eighteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nineteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twenty" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyOne" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyTwo" />
        <element api="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyThree" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eight">
      <topicdata group="api" notopic="" />
      <apidata name="Eight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eighteen">
      <topicdata group="api" notopic="" />
      <apidata name="Eighteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eleven">
      <topicdata group="api" notopic="" />
      <apidata name="Eleven" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fifteen">
      <topicdata group="api" notopic="" />
      <apidata name="Fifteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Five">
      <topicdata group="api" notopic="" />
      <apidata name="Five" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Four">
      <topicdata group="api" notopic="" />
      <apidata name="Four" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fourteen">
      <topicdata group="api" notopic="" />
      <apidata name="Fourteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nine">
      <topicdata group="api" notopic="" />
      <apidata name="Nine" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nineteen">
      <topicdata group="api" notopic="" />
      <apidata name="Nineteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>19</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.One">
      <topicdata group="api" notopic="" />
      <apidata name="One" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seven">
      <topicdata group="api" notopic="" />
      <apidata name="Seven" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seventeen">
      <topicdata group="api" notopic="" />
      <apidata name="Seventeen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Six">
      <topicdata group="api" notopic="" />
      <apidata name="Six" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Sixteen">
      <topicdata group="api" notopic="" />
      <apidata name="Sixteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Ten">
      <topicdata group="api" notopic="" />
      <apidata name="Ten" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Thirteen">
      <topicdata group="api" notopic="" />
      <apidata name="Thirteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Three">
      <topicdata group="api" notopic="" />
      <apidata name="Three" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twelve">
      <topicdata group="api" notopic="" />
      <apidata name="Twelve" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twenty">
      <topicdata group="api" notopic="" />
      <apidata name="Twenty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyOne">
      <topicdata group="api" notopic="" />
      <apidata name="TwentyOne" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>21</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyThree">
      <topicdata group="api" notopic="" />
      <apidata name="TwentyThree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>23</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyTwo">
      <topicdata group="api" notopic="" />
      <apidata name="TwentyTwo" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>22</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Two">
      <topicdata group="api" notopic="" />
      <apidata name="Two" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Zero">
      <topicdata group="api" notopic="" />
      <apidata name="Zero" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.HourOfDay" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.LocatorOptions">
      <topicdata group="api" />
      <apidata name="LocatorOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.ForceRediscovery" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.KdcRequired" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.TimeServerRequired" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.WriteableRequired" />
        <element api="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.AvoidSelf" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.AvoidSelf">
      <topicdata group="api" notopic="" />
      <apidata name="AvoidSelf" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>16384</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.ForceRediscovery">
      <topicdata group="api" notopic="" />
      <apidata name="ForceRediscovery" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.KdcRequired">
      <topicdata group="api" notopic="" />
      <apidata name="KdcRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>1024</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.TimeServerRequired">
      <topicdata group="api" notopic="" />
      <apidata name="TimeServerRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>2048</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.WriteableRequired">
      <topicdata group="api" notopic="" />
      <apidata name="WriteableRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </returns>
      <value>4096</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour">
      <topicdata group="api" />
      <apidata name="MinuteOfHour" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Zero" />
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Fifteen" />
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Thirty" />
        <element api="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.FortyFive" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Fifteen">
      <topicdata group="api" notopic="" />
      <apidata name="Fifteen" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.FortyFive">
      <topicdata group="api" notopic="" />
      <apidata name="FortyFive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <value>45</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Thirty">
      <topicdata group="api" notopic="" />
      <apidata name="Thirty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Zero">
      <topicdata group="api" notopic="" />
      <apidata name="Zero" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.NotificationStatus">
      <topicdata group="api" />
      <apidata name="NotificationStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NoNotification" />
        <element api="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.IntraSiteOnly" />
        <element api="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NotificationAlways" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.IntraSiteOnly">
      <topicdata group="api" notopic="" />
      <apidata name="IntraSiteOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NoNotification">
      <topicdata group="api" notopic="" />
      <apidata name="NoNotification" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NotificationAlways">
      <topicdata group="api" notopic="" />
      <apidata name="NotificationAlways" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.PropertyTypes">
      <topicdata group="api" />
      <apidata name="PropertyTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.Indexed" />
        <element api="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.InGlobalCatalog" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.Indexed">
      <topicdata group="api" notopic="" />
      <apidata name="Indexed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.InGlobalCatalog">
      <topicdata group="api" notopic="" />
      <apidata name="InGlobalCatalog" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.PropertyTypes" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <topicdata group="api" />
      <apidata name="ReadOnlyActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaClassCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaClassCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaClassCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="classes">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaClass">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <topicdata group="api" />
      <apidata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <topicdata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
      <apidata name="ReadOnlyActiveDirectorySchemaPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="properties">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemaProperty">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <topicdata group="api" />
      <apidata name="ReadOnlyDirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <topicdata name="ReadOnlyDirectoryServerCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
      <apidata name="ReadOnlyDirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <topicdata name="ReadOnlyDirectoryServerCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
      <apidata name="ReadOnlyDirectoryServerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directoryServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directoryServers">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directoryServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <topicdata group="api" />
      <apidata name="ReadOnlySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <topicdata name="ReadOnlySiteCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      <apidata name="ReadOnlySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <topicdata name="ReadOnlySiteCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      <apidata name="ReadOnlySiteCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sites">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="site">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <topicdata group="api" />
      <apidata name="ReadOnlySiteLinkBridgeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <topicdata name="ReadOnlySiteLinkBridgeCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
      <apidata name="ReadOnlySiteLinkBridgeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <topicdata name="ReadOnlySiteLinkBridgeCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
      <apidata name="ReadOnlySiteLinkBridgeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bridge">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bridges">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bridge">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <topicdata group="api" />
      <apidata name="ReadOnlySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <topicdata name="ReadOnlySiteLinkCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
      <apidata name="ReadOnlySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <topicdata name="ReadOnlySiteLinkCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
      <apidata name="ReadOnlySiteLinkCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="links">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="link">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <topicdata group="api" />
      <apidata name="ReadOnlyStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <topicdata name="ReadOnlyStringCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
      <apidata name="ReadOnlyStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <topicdata name="ReadOnlyStringCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
      <apidata name="ReadOnlyStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <topicdata group="api" />
      <apidata name="ReplicationConnection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <topicdata name="ReplicationConnection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      <apidata name="ReplicationConnection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
          <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <topicdata name="ReplicationConnection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      <apidata name="ReplicationConnection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
        <parameter name="schedule">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryServer" ref="true" />
        </parameter>
        <parameter name="transport">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus">
      <topicdata group="api" />
      <apidata name="ChangeNotificationStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ChangeNotificationStatus" />
      <setter name="set_ChangeNotificationStatus" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.NotificationStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled">
      <topicdata group="api" />
      <apidata name="DataCompressionEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataCompressionEnabled" />
      <setter name="set_DataCompressionEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer">
      <topicdata group="api" />
      <apidata name="DestinationServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DestinationServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <topicdata group="api" />
      <apidata name="FindByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc">
      <topicdata group="api" />
      <apidata name="GeneratedByKcc" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GeneratedByKcc" />
      <setter name="set_GeneratedByKcc" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled">
      <topicdata group="api" />
      <apidata name="ReciprocalReplicationEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReciprocalReplicationEnabled" />
      <setter name="set_ReciprocalReplicationEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule">
      <topicdata group="api" />
      <apidata name="ReplicationSchedule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReplicationSchedule" />
      <setter name="set_ReplicationSchedule" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser">
      <topicdata group="api" />
      <apidata name="ReplicationScheduleOwnedByUser" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReplicationScheduleOwnedByUser" />
      <setter name="set_ReplicationScheduleOwnedByUser" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan">
      <topicdata group="api" />
      <apidata name="ReplicationSpan" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReplicationSpan" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <topicdata group="api" />
      <apidata name="ReplicationConnectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <topicdata name="ReplicationConnectionCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      <apidata name="ReplicationConnectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <topicdata name="ReplicationConnectionCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      <apidata name="ReplicationConnectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connections">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="connection">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <topicdata group="api" />
      <apidata name="ReplicationCursor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <topicdata name="ReplicationCursor" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" />
      <apidata name="ReplicationCursor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <topicdata name="ReplicationCursor" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" />
      <apidata name="ReplicationCursor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime">
      <topicdata group="api" />
      <apidata name="LastSuccessfulSyncTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastSuccessfulSyncTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName">
      <topicdata group="api" />
      <apidata name="PartitionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PartitionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId">
      <topicdata group="api" />
      <apidata name="SourceInvocationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceInvocationId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn">
      <topicdata group="api" />
      <apidata name="UpToDatenessUsn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UpToDatenessUsn" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <topicdata group="api" />
      <apidata name="ReplicationCursorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <topicdata name="ReplicationCursorCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
      <apidata name="ReplicationCursorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <topicdata name="ReplicationCursorCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
      <apidata name="ReplicationCursorCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cursor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cursor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <topicdata group="api" />
      <apidata name="ReplicationFailure" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <topicdata name="ReplicationFailure" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" />
      <apidata name="ReplicationFailure" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <topicdata name="ReplicationFailure" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" />
      <apidata name="ReplicationFailure" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount">
      <topicdata group="api" />
      <apidata name="ConsecutiveFailureCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConsecutiveFailureCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime">
      <topicdata group="api" />
      <apidata name="FirstFailureTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FirstFailureTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode">
      <topicdata group="api" />
      <apidata name="LastErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage">
      <topicdata group="api" />
      <apidata name="LastErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastErrorMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <topicdata group="api" />
      <apidata name="ReplicationFailureCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <topicdata name="ReplicationFailureCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
      <apidata name="ReplicationFailureCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <topicdata name="ReplicationFailureCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
      <apidata name="ReplicationFailureCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="failure">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="failures">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="failure">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <topicdata group="api" />
      <apidata name="ReplicationNeighbor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <topicdata name="ReplicationNeighbor" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" />
      <apidata name="ReplicationNeighbor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <topicdata name="ReplicationNeighbor" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" />
      <apidata name="ReplicationNeighbor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount">
      <topicdata group="api" />
      <apidata name="ConsecutiveFailureCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConsecutiveFailureCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync">
      <topicdata group="api" />
      <apidata name="LastAttemptedSync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastAttemptedSync" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync">
      <topicdata group="api" />
      <apidata name="LastSuccessfulSync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastSuccessfulSync" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage">
      <topicdata group="api" />
      <apidata name="LastSyncMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastSyncMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult">
      <topicdata group="api" />
      <apidata name="LastSyncResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LastSyncResult" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName">
      <topicdata group="api" />
      <apidata name="PartitionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PartitionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption">
      <topicdata group="api" />
      <apidata name="ReplicationNeighborOption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReplicationNeighborOption" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId">
      <topicdata group="api" />
      <apidata name="SourceInvocationId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceInvocationId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType">
      <topicdata group="api" />
      <apidata name="TransportType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter">
      <topicdata group="api" />
      <apidata name="UsnAttributeFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UsnAttributeFilter" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced">
      <topicdata group="api" />
      <apidata name="UsnLastObjectChangeSynced" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UsnLastObjectChangeSynced" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions">
      <topicdata group="api" />
      <apidata name="ReplicationNeighborOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Writeable" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.SyncOnStartup" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ScheduledSync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.UseInterSiteTransport" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.TwoWaySync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ReturnObjectParent" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncInProgress" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncNextPacket" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NeverSynced" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Preempted" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.IgnoreChangeNotifications" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.DisableScheduledSync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.CompressChanges" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NoChangeNotifications" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.PartialAttributeSet" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.CompressChanges">
      <topicdata group="api" notopic="" />
      <apidata name="CompressChanges" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>268435456</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.DisableScheduledSync">
      <topicdata group="api" notopic="" />
      <apidata name="DisableScheduledSync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>134217728</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncInProgress">
      <topicdata group="api" notopic="" />
      <apidata name="FullSyncInProgress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncNextPacket">
      <topicdata group="api" notopic="" />
      <apidata name="FullSyncNextPacket" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>131072</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.IgnoreChangeNotifications">
      <topicdata group="api" notopic="" />
      <apidata name="IgnoreChangeNotifications" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>67108864</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NeverSynced">
      <topicdata group="api" notopic="" />
      <apidata name="NeverSynced" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>2097152</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NoChangeNotifications">
      <topicdata group="api" notopic="" />
      <apidata name="NoChangeNotifications" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>536870912</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.PartialAttributeSet">
      <topicdata group="api" notopic="" />
      <apidata name="PartialAttributeSet" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>1073741824</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Preempted">
      <topicdata group="api" notopic="" />
      <apidata name="Preempted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ReturnObjectParent">
      <topicdata group="api" notopic="" />
      <apidata name="ReturnObjectParent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>2048</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ScheduledSync">
      <topicdata group="api" notopic="" />
      <apidata name="ScheduledSync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.SyncOnStartup">
      <topicdata group="api" notopic="" />
      <apidata name="SyncOnStartup" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.TwoWaySync">
      <topicdata group="api" notopic="" />
      <apidata name="TwoWaySync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.UseInterSiteTransport">
      <topicdata group="api" notopic="" />
      <apidata name="UseInterSiteTransport" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Writeable">
      <topicdata group="api" notopic="" />
      <apidata name="Writeable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions" ref="false">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <topicdata group="api" />
      <apidata name="ReplicationNeighborCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <topicdata name="ReplicationNeighborCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      <apidata name="ReplicationNeighborCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <topicdata name="ReplicationNeighborCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      <apidata name="ReplicationNeighborCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="neighbor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="neighbors">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="neighbor">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <topicdata group="api" />
      <apidata name="ReplicationOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <topicdata name="ReplicationOperation" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" />
      <apidata name="ReplicationOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <topicdata name="ReplicationOperation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" />
      <apidata name="ReplicationOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber">
      <topicdata group="api" />
      <apidata name="OperationNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OperationNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType">
      <topicdata group="api" />
      <apidata name="OperationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OperationType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName">
      <topicdata group="api" />
      <apidata name="PartitionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PartitionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority">
      <topicdata group="api" />
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Priority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued">
      <topicdata group="api" />
      <apidata name="TimeEnqueued" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TimeEnqueued" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <topicdata group="api" />
      <apidata name="ReplicationOperationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <topicdata name="ReplicationOperationCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
      <apidata name="ReplicationOperationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <topicdata name="ReplicationOperationCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
      <apidata name="ReplicationOperationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operation">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operations">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="operation">
          <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <topicdata group="api" />
      <apidata name="ReplicationOperationInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <topicdata name="ReplicationOperationInformation" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
      <apidata name="ReplicationOperationInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <topicdata name="ReplicationOperationInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
      <apidata name="ReplicationOperationInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation">
      <topicdata group="api" />
      <apidata name="CurrentOperation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentOperation" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime">
      <topicdata group="api" />
      <apidata name="OperationStartTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OperationStartTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations">
      <topicdata group="api" />
      <apidata name="PendingOperations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PendingOperations" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType">
      <topicdata group="api" />
      <apidata name="ReplicationOperationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Sync" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Add" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Delete" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Modify" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.UpdateReference" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Modify">
      <topicdata group="api" notopic="" />
      <apidata name="Modify" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Sync">
      <topicdata group="api" notopic="" />
      <apidata name="Sync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.UpdateReference">
      <topicdata group="api" notopic="" />
      <apidata name="UpdateReference" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel">
      <topicdata group="api" />
      <apidata name="ReplicationSecurityLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication">
      <topicdata group="api" notopic="" />
      <apidata name="MutualAuthentication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate">
      <topicdata group="api" notopic="" />
      <apidata name="Negotiate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough">
      <topicdata group="api" notopic="" />
      <apidata name="NegotiatePassThrough" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan">
      <topicdata group="api" />
      <apidata name="ReplicationSpan" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.IntraSite" />
        <element api="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.InterSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.InterSite">
      <topicdata group="api" notopic="" />
      <apidata name="InterSite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.IntraSite">
      <topicdata group="api" notopic="" />
      <apidata name="IntraSite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SchemaClassType">
      <topicdata group="api" />
      <apidata name="SchemaClassType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Type88" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Structural" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Abstract" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Auxiliary" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Abstract">
      <topicdata group="api" notopic="" />
      <apidata name="Abstract" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Auxiliary">
      <topicdata group="api" notopic="" />
      <apidata name="Auxiliary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Structural">
      <topicdata group="api" notopic="" />
      <apidata name="Structural" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Type88">
      <topicdata group="api" notopic="" />
      <apidata name="Type88" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SchemaClassType" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersErrorCategory" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorContactingServer" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorReplicating" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ServerUnreachable" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorContactingServer">
      <topicdata group="api" notopic="" />
      <apidata name="ErrorContactingServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorReplicating">
      <topicdata group="api" notopic="" />
      <apidata name="ErrorReplicating" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ServerUnreachable">
      <topicdata group="api" notopic="" />
      <apidata name="ServerUnreachable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersErrorInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <topicdata name="SyncFromAllServersErrorInformation" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" />
      <apidata name="SyncFromAllServersErrorInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <topicdata name="SyncFromAllServersErrorInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" />
      <apidata name="SyncFromAllServersErrorInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory">
      <topicdata group="api" />
      <apidata name="ErrorCategory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorCategory" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage">
      <topicdata group="api" />
      <apidata name="ErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer">
      <topicdata group="api" />
      <apidata name="SourceServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer">
      <topicdata group="api" />
      <apidata name="TargetServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetServer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersEvent" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Error" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncStarted" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncCompleted" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Finished" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Error">
      <topicdata group="api" notopic="" />
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Finished">
      <topicdata group="api" notopic="" />
      <apidata name="Finished" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncCompleted">
      <topicdata group="api" notopic="" />
      <apidata name="SyncCompleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncStarted">
      <topicdata group="api" notopic="" />
      <apidata name="SyncStarted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <topicdata name="SyncFromAllServersOperationException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      <apidata name="SyncFromAllServersOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <topicdata name="SyncFromAllServersOperationException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      <apidata name="SyncFromAllServersOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode" />
        <element api="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      </containers>
    </api>
    <api id="Events.T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <topicdata name="SyncFromAllServersOperationException" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      <apidata name="SyncFromAllServersOperationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="errors">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation">
      <topicdata group="api" />
      <apidata name="ErrorInformation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorInformation" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions">
      <topicdata group="api" />
      <apidata name="SyncFromAllServersOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.AbortIfServerUnavailable" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SyncAdjacentServerOnly" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CheckServerAlivenessOnly" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SkipInitialCheck" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.PushChangeOutward" />
        <element api="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.AbortIfServerUnavailable">
      <topicdata group="api" notopic="" />
      <apidata name="AbortIfServerUnavailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CheckServerAlivenessOnly">
      <topicdata group="api" notopic="" />
      <apidata name="CheckServerAlivenessOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite">
      <topicdata group="api" notopic="" />
      <apidata name="CrossSite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.PushChangeOutward">
      <topicdata group="api" notopic="" />
      <apidata name="PushChangeOutward" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SkipInitialCheck">
      <topicdata group="api" notopic="" />
      <apidata name="SkipInitialCheck" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SyncAdjacentServerOnly">
      <topicdata group="api" notopic="" />
      <apidata name="SyncAdjacentServerOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback">
      <topicdata group="api" />
      <apidata name="SyncUpdateCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="eventType">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent" ref="false" />
        </parameter>
        <parameter name="targetServer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceServer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <topicdata group="api" />
      <apidata name="TopLevelName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <topicdata name="TopLevelName" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TopLevelName" />
      <apidata name="TopLevelName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <topicdata name="TopLevelName" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TopLevelName" />
      <apidata name="TopLevelName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Status" />
      <setter name="set_Status" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <topicdata group="api" />
      <apidata name="TopLevelNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <topicdata name="TopLevelNameCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
      <apidata name="TopLevelNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <topicdata name="TopLevelNameCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
      <apidata name="TopLevelNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions">
      <topicdata group="api" />
      <apidata name="TopLevelNameCollisionOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.None" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.NewlyCreated" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByAdmin" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByConflict" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByAdmin">
      <topicdata group="api" notopic="" />
      <apidata name="DisabledByAdmin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByConflict">
      <topicdata group="api" notopic="" />
      <apidata name="DisabledByConflict" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.NewlyCreated">
      <topicdata group="api" notopic="" />
      <apidata name="NewlyCreated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus">
      <topicdata group="api" />
      <apidata name="TopLevelNameStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.Enabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.NewlyCreated" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.AdminDisabled" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.ConflictDisabled" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.AdminDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="AdminDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.ConflictDisabled">
      <topicdata group="api" notopic="" />
      <apidata name="ConflictDisabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.Enabled">
      <topicdata group="api" notopic="" />
      <apidata name="Enabled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.NewlyCreated">
      <topicdata group="api" notopic="" />
      <apidata name="NewlyCreated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustDirection">
      <topicdata group="api" />
      <apidata name="TrustDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional">
      <topicdata group="api" notopic="" />
      <apidata name="Bidirectional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound">
      <topicdata group="api" notopic="" />
      <apidata name="Inbound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound">
      <topicdata group="api" notopic="" />
      <apidata name="Outbound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <topicdata group="api" />
      <apidata name="TrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <topicdata name="TrustRelationshipInformation" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      <apidata name="TrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <topicdata name="TrustRelationshipInformation" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      <apidata name="TrustRelationshipInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName">
      <topicdata group="api" />
      <apidata name="SourceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName">
      <topicdata group="api" />
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection">
      <topicdata group="api" />
      <apidata name="TrustDirection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TrustDirection" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType">
      <topicdata group="api" />
      <apidata name="TrustType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TrustType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <topicdata group="api" />
      <apidata name="TrustRelationshipInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <topicdata name="TrustRelationshipInformationCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      <apidata name="TrustRelationshipInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)" />
        <element api="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <topicdata name="TrustRelationshipInformationCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      <apidata name="TrustRelationshipInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="information">
          <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectory.TrustType">
      <topicdata group="api" />
      <apidata name="TrustType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.TreeRoot" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.ParentChild" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.CrossLink" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.External" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.Forest" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.Kerberos" />
        <element api="F:System.DirectoryServices.ActiveDirectory.TrustType.Unknown" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.CrossLink">
      <topicdata group="api" notopic="" />
      <apidata name="CrossLink" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.External">
      <topicdata group="api" notopic="" />
      <apidata name="External" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.Forest">
      <topicdata group="api" notopic="" />
      <apidata name="Forest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.Kerberos">
      <topicdata group="api" notopic="" />
      <apidata name="Kerberos" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.ParentChild">
      <topicdata group="api" notopic="" />
      <apidata name="ParentChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.TreeRoot">
      <topicdata group="api" notopic="" />
      <apidata name="TreeRoot" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectory.TrustType.Unknown">
      <topicdata group="api" notopic="" />
      <apidata name="Unknown" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices.ActiveDirectory" />
        <type api="T:System.DirectoryServices.ActiveDirectory.TrustType" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>