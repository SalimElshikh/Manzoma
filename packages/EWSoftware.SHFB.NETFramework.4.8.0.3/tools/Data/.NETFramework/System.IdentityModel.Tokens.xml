<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.IdentityModel">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.IdentityModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.IdentityModel.Tokens">
      <topicdata group="api" />
      <apidata name="System.IdentityModel.Tokens" group="namespace" />
      <elements>
        <element api="T:System.IdentityModel.Tokens.AggregateTokenResolver" />
        <element api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" />
        <element api="T:System.IdentityModel.Tokens.AudienceRestriction" />
        <element api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" />
        <element api="T:System.IdentityModel.Tokens.AuthenticationContext" />
        <element api="T:System.IdentityModel.Tokens.AuthenticationMethods" />
        <element api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.BootstrapContext" />
        <element api="T:System.IdentityModel.Tokens.ComputedKeyAlgorithms" />
        <element api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
        <element api="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" />
        <element api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" />
        <element api="T:System.IdentityModel.Tokens.EncryptingCredentials" />
        <element api="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
        <element api="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
        <element api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.ProofDescriptor" />
        <element api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.RsaSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.RsaSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.Saml2Action" />
        <element api="T:System.IdentityModel.Tokens.Saml2Advice" />
        <element api="T:System.IdentityModel.Tokens.Saml2Assertion" />
        <element api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.Saml2Attribute" />
        <element api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" />
        <element api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" />
        <element api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" />
        <element api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" />
        <element api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />
        <element api="T:System.IdentityModel.Tokens.Saml2Conditions" />
        <element api="T:System.IdentityModel.Tokens.Saml2Evidence" />
        <element api="T:System.IdentityModel.Tokens.Saml2Id" />
        <element api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />
        <element api="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" />
        <element api="T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.Saml2SecurityToken" />
        <element api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.Saml2Statement" />
        <element api="T:System.IdentityModel.Tokens.Saml2Subject" />
        <element api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" />
        <element api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" />
        <element api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" />
        <element api="T:System.IdentityModel.Tokens.SamlAccessDecision" />
        <element api="T:System.IdentityModel.Tokens.SamlAction" />
        <element api="T:System.IdentityModel.Tokens.SamlAdvice" />
        <element api="T:System.IdentityModel.Tokens.SamlAssertion" />
        <element api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.SamlAttribute" />
        <element api="T:System.IdentityModel.Tokens.SamlAttributeStatement" />
        <element api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
        <element api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
        <element api="T:System.IdentityModel.Tokens.SamlCondition" />
        <element api="T:System.IdentityModel.Tokens.SamlConditions" />
        <element api="T:System.IdentityModel.Tokens.SamlConstants" />
        <element api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
        <element api="T:System.IdentityModel.Tokens.SamlEvidence" />
        <element api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
        <element api="T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.SamlSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" />
        <element api="T:System.IdentityModel.Tokens.SamlSerializer" />
        <element api="T:System.IdentityModel.Tokens.SamlStatement" />
        <element api="T:System.IdentityModel.Tokens.SamlSubject" />
        <element api="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
        <element api="T:System.IdentityModel.Tokens.SecurityAlgorithms" />
        <element api="T:System.IdentityModel.Tokens.SecurityKey" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyElement" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyType" />
        <element api="T:System.IdentityModel.Tokens.SecurityKeyUsage" />
        <element api="T:System.IdentityModel.Tokens.SecurityToken" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenElement" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenException" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenTypes" />
        <element api="T:System.IdentityModel.Tokens.SigningCredentials" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />
        <element api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
        <element api="T:System.IdentityModel.Tokens.SessionSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
        <element api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
        <element api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
        <element api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.TokenReplayCache" />
        <element api="T:System.IdentityModel.Tokens.UserNameSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.WindowsSecurityToken" />
        <element api="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
        <element api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" />
        <element api="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" />
        <element api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" />
        <element api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" />
        <element api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.X509SecurityToken" />
        <element api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />
        <element api="T:System.IdentityModel.Tokens.X509SigningCredentials" />
        <element api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
        <element api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      </elements>
    </api>
    <api id="T:System.IdentityModel.Tokens.AggregateTokenResolver">
      <topicdata group="api" />
      <apidata name="AggregateTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.AggregateTokenResolver.ResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})" />
        <element api="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore">
          <element api="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.AggregateTokenResolver">
      <topicdata name="AggregateTokenResolver" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.AggregateTokenResolver" />
      <apidata name="AggregateTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.AggregateTokenResolver.ResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore">
          <element api="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AggregateTokenResolver" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.AggregateTokenResolver">
      <topicdata name="AggregateTokenResolver" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.AggregateTokenResolver" />
      <apidata name="AggregateTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AggregateTokenResolver" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore">
      <topicdata name="TryResolveTokenCore" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
        <element api="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AggregateTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="tokenResolvers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AggregateTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers">
      <topicdata group="api" />
      <apidata name="TokenResolvers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TokenResolvers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AggregateTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <topicdata group="api" />
      <apidata name="TryResolveSecurityKeyCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="key" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AggregateTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AggregateTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AggregateTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor">
      <topicdata group="api" />
      <apidata name="AsymmetricProofDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor">
          <element api="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor" />
          <element api="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.Security.Cryptography.RSA)" />
          <element api="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.AsymmetricProofDescriptor">
      <topicdata name="AsymmetricProofDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" />
      <apidata name="AsymmetricProofDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.AsymmetricProofDescriptor">
      <topicdata name="AsymmetricProofDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" />
      <apidata name="AsymmetricProofDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor" />
      <parameters>
        <parameter name="keyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.AsymmetricProofDescriptor.#ctor" />
      <parameters>
        <parameter name="rsaAlgorithm">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
      <topicdata group="api" />
      <apidata name="ApplyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="response">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.AsymmetricProofDescriptor.KeyIdentifier">
      <topicdata group="api" />
      <apidata name="KeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeyIdentifier" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <topicdata group="api" />
      <apidata name="AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <topicdata name="AsymmetricSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
      <apidata name="AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.AsymmetricSecurityKey">
      <topicdata name="AsymmetricSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
      <apidata name="AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="privateKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <topicdata group="api" />
      <apidata name="GetHashAlgorithmForSignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureDeformatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey">
      <topicdata group="api" />
      <apidata name="HasPrivateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.AudienceRestriction">
      <topicdata group="api" />
      <apidata name="AudienceRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.AudienceRestriction.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.AudienceRestriction.#ctor">
          <element api="M:System.IdentityModel.Tokens.AudienceRestriction.#ctor" />
          <element api="M:System.IdentityModel.Tokens.AudienceRestriction.#ctor(System.IdentityModel.Selectors.AudienceUriMode)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris" />
        <element api="P:System.IdentityModel.Tokens.AudienceRestriction.AudienceMode" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.AudienceRestriction">
      <topicdata name="AudienceRestriction" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.AudienceRestriction" />
      <apidata name="AudienceRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.AudienceRestriction.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceRestriction" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.AudienceRestriction">
      <topicdata name="AudienceRestriction" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.AudienceRestriction" />
      <apidata name="AudienceRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.AudienceRestriction.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris" />
        <element api="P:System.IdentityModel.Tokens.AudienceRestriction.AudienceMode" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceRestriction" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.AudienceRestriction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.AudienceRestriction.#ctor" />
        <element api="M:System.IdentityModel.Tokens.AudienceRestriction.#ctor(System.IdentityModel.Selectors.AudienceUriMode)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AudienceRestriction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.AudienceRestriction.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AudienceRestriction.#ctor(System.IdentityModel.Selectors.AudienceUriMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.AudienceRestriction.#ctor" />
      <parameters>
        <parameter name="audienceMode">
          <type api="T:System.IdentityModel.Selectors.AudienceUriMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.AudienceRestriction.AllowedAudienceUris">
      <topicdata group="api" />
      <apidata name="AllowedAudienceUris" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllowedAudienceUris" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.AudienceRestriction.AudienceMode">
      <topicdata group="api" />
      <apidata name="AudienceMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AudienceMode" />
      <setter name="set_AudienceMode" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.AudienceUriMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException">
      <topicdata group="api" />
      <apidata name="AudienceUriValidationFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor">
          <element api="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
          <element api="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.AudienceUriValidationFailedException">
      <topicdata name="AudienceUriValidationFailedException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" />
      <apidata name="AudienceUriValidationFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.AudienceUriValidationFailedException">
      <topicdata name="AudienceUriValidationFailedException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" />
      <apidata name="AudienceUriValidationFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Tokens.AudienceUriValidationFailedException">
      <topicdata name="AudienceUriValidationFailedException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" />
      <apidata name="AudienceUriValidationFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
        <element api="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.AudienceUriValidationFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.AuthenticationContext">
      <topicdata group="api" />
      <apidata name="AuthenticationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.AuthenticationContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.AuthenticationContext.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.AuthenticationContext.Authorities" />
        <element api="P:System.IdentityModel.Tokens.AuthenticationContext.ContextClass" />
        <element api="P:System.IdentityModel.Tokens.AuthenticationContext.ContextDeclaration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.AuthenticationContext">
      <topicdata name="AuthenticationContext" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.AuthenticationContext" />
      <apidata name="AuthenticationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.AuthenticationContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationContext" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.AuthenticationContext">
      <topicdata name="AuthenticationContext" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.AuthenticationContext" />
      <apidata name="AuthenticationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.AuthenticationContext.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.AuthenticationContext.Authorities" />
        <element api="P:System.IdentityModel.Tokens.AuthenticationContext.ContextClass" />
        <element api="P:System.IdentityModel.Tokens.AuthenticationContext.ContextDeclaration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationContext" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.AuthenticationContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.AuthenticationContext.Authorities">
      <topicdata group="api" />
      <apidata name="Authorities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Authorities" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.AuthenticationContext.ContextClass">
      <topicdata group="api" />
      <apidata name="ContextClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContextClass" />
      <setter name="set_ContextClass" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.AuthenticationContext.ContextDeclaration">
      <topicdata group="api" />
      <apidata name="ContextDeclaration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContextDeclaration" />
      <setter name="set_ContextDeclaration" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.AuthenticationMethods">
      <topicdata group="api" />
      <apidata name="AuthenticationMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.HardwareToken" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Kerberos" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Namespace" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Password" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Pgp" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.SecureRemotePassword" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Signature" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Smartcard" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.SmartcardPki" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Spki" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.TlsClient" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Unspecified" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Windows" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.X509" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Xkms" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.AuthenticationMethods">
      <topicdata name="AuthenticationMethods" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.AuthenticationMethods" />
      <apidata name="AuthenticationMethods" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.HardwareToken" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Kerberos" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Namespace" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Password" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Pgp" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.SecureRemotePassword" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Signature" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Smartcard" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.SmartcardPki" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Spki" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.TlsClient" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Unspecified" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Windows" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.X509" />
        <element api="F:System.IdentityModel.Tokens.AuthenticationMethods.Xkms" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.HardwareToken">
      <topicdata group="api" />
      <apidata name="HardwareToken" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/hardwaretoken</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Kerberos">
      <topicdata group="api" />
      <apidata name="Kerberos" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/kerberos</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/password</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Pgp">
      <topicdata group="api" />
      <apidata name="Pgp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/pgp</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.SecureRemotePassword">
      <topicdata group="api" />
      <apidata name="SecureRemotePassword" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/secureremotepassword</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Signature">
      <topicdata group="api" />
      <apidata name="Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/signature</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Smartcard">
      <topicdata group="api" />
      <apidata name="Smartcard" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/smartcard</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.SmartcardPki">
      <topicdata group="api" />
      <apidata name="SmartcardPki" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/smartcardpki</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Spki">
      <topicdata group="api" />
      <apidata name="Spki" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/spki</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.TlsClient">
      <topicdata group="api" />
      <apidata name="TlsClient" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/tlsclient</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Unspecified">
      <topicdata group="api" />
      <apidata name="Unspecified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/unspecified</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Windows">
      <topicdata group="api" />
      <apidata name="Windows" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/windows</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.X509">
      <topicdata group="api" />
      <apidata name="X509" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/x509</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.AuthenticationMethods.Xkms">
      <topicdata group="api" />
      <apidata name="Xkms" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/ws/2008/06/identity/authenticationmethod/xkms</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.AuthenticationMethods" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="BinaryKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.BinarySecretKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <topicdata name="BinaryKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      <apidata name="BinaryKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause">
      <topicdata name="BinaryKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      <apidata name="BinaryKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="clauseType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="identificationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="cloneBuffer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="clauseType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="identificationData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="cloneBuffer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer">
      <topicdata group="api" />
      <apidata name="GetBuffer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer">
      <topicdata group="api" />
      <apidata name="GetRawBuffer" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.BootstrapContext">
      <topicdata group="api" />
      <apidata name="BootstrapContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.BootstrapContext.#ctor">
          <element api="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityTokenHandler)" />
          <element api="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.BootstrapContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.BootstrapContext.SecurityToken" />
        <element api="P:System.IdentityModel.Tokens.BootstrapContext.SecurityTokenHandler" />
        <element api="P:System.IdentityModel.Tokens.BootstrapContext.Token" />
        <element api="P:System.IdentityModel.Tokens.BootstrapContext.TokenBytes" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.BootstrapContext">
      <topicdata name="BootstrapContext" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.BootstrapContext" />
      <apidata name="BootstrapContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BootstrapContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.BootstrapContext">
      <topicdata name="BootstrapContext" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.BootstrapContext" />
      <apidata name="BootstrapContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.BootstrapContext.SecurityToken" />
        <element api="P:System.IdentityModel.Tokens.BootstrapContext.SecurityTokenHandler" />
        <element api="P:System.IdentityModel.Tokens.BootstrapContext.Token" />
        <element api="P:System.IdentityModel.Tokens.BootstrapContext.TokenBytes" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.BootstrapContext.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityTokenHandler)" />
        <element api="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.BootstrapContext.#ctor" />
      <parameters>
        <parameter name="token">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.SecurityTokenHandler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.BootstrapContext.#ctor" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="tokenHandler">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.BootstrapContext.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BootstrapContext.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.BootstrapContext.#ctor" />
      <parameters>
        <parameter name="token">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.BootstrapContext.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.BootstrapContext.SecurityToken">
      <topicdata group="api" />
      <apidata name="SecurityToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityToken" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.BootstrapContext.SecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="SecurityTokenHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityTokenHandler" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.BootstrapContext.Token">
      <topicdata group="api" />
      <apidata name="Token" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Token" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.BootstrapContext.TokenBytes">
      <topicdata group="api" />
      <apidata name="TokenBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TokenBytes" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.BootstrapContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.ComputedKeyAlgorithms">
      <topicdata group="api" />
      <apidata name="ComputedKeyAlgorithms" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.ComputedKeyAlgorithms.Psha1" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.ComputedKeyAlgorithms">
      <topicdata name="ComputedKeyAlgorithms" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.ComputedKeyAlgorithms" />
      <apidata name="ComputedKeyAlgorithms" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.ComputedKeyAlgorithms.Psha1" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ComputedKeyAlgorithms" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.ComputedKeyAlgorithms.Psha1">
      <topicdata group="api" />
      <apidata name="Psha1" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.microsoft.com/idfx/computedkeyalgorithm/psha1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ComputedKeyAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry">
      <topicdata group="api" />
      <apidata name="ConfigurationBasedIssuerNameRegistry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor" />
        <element api="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName">
          <element api="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry">
      <topicdata name="ConfigurationBasedIssuerNameRegistry" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
      <apidata name="ConfigurationBasedIssuerNameRegistry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)" />
        <element api="Overload:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName">
          <element api="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry">
      <topicdata name="ConfigurationBasedIssuerNameRegistry" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
      <apidata name="ConfigurationBasedIssuerNameRegistry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName">
      <topicdata name="GetIssuerName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetIssuerName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AddTrustedIssuer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificateThumbprint">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers">
      <topicdata group="api" />
      <apidata name="ConfiguredTrustedIssuers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConfiguredTrustedIssuers" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="GetIssuerName" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="securityToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)">
      <topicdata group="api" />
      <apidata name="LoadCustomConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="customConfiguration">
          <type api="T:System.Xml.XmlNodeList" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="EmptySecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor" />
          <element api="M:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor(System.Object)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.Context" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause">
      <topicdata name="EmptySecurityKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" />
      <apidata name="EmptySecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause">
      <topicdata name="EmptySecurityKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" />
      <apidata name="EmptySecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.Context" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor" />
        <element api="M:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause.Context">
      <topicdata group="api" />
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Context" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials">
      <topicdata group="api" />
      <apidata name="EncryptedKeyEncryptingCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor">
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.Algorithm" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials">
      <topicdata name="EncryptedKeyEncryptingCredentials" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" />
      <apidata name="EncryptedKeyEncryptingCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials">
      <topicdata name="EncryptedKeyEncryptingCredentials" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" />
      <apidata name="EncryptedKeyEncryptingCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.Algorithm" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.IdentityModel.Tokens.EncryptingCredentials,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor" />
      <parameters>
        <parameter name="wrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
        <parameter name="keySizeInBits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="encryptionAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="keyWrappingAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keySizeInBits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="encryptionAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials.WrappingCredentials">
      <topicdata group="api" />
      <apidata name="WrappingCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WrappingCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="EncryptedKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <topicdata name="EncryptedKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      <apidata name="EncryptedKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause">
      <topicdata name="EncryptedKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      <apidata name="EncryptedKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encryptingKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encryptingKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="carriedKeyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor(System.Byte[],System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encryptingKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="carriedKeyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.CarriedKeyName">
      <topicdata group="api" />
      <apidata name="CarriedKeyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CarriedKeyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptingKeyIdentifier">
      <topicdata group="api" />
      <apidata name="EncryptingKeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EncryptingKeyIdentifier" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.EncryptionMethod">
      <topicdata group="api" />
      <apidata name="EncryptionMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EncryptionMethod" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.GetEncryptedKey">
      <topicdata group="api" />
      <apidata name="GetEncryptedKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.Byte[],System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encryptedKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptionMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="carriedKeyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.EncryptedSecurityToken">
      <topicdata group="api" />
      <apidata name="EncryptedSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Token" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.EncryptedSecurityToken">
      <topicdata name="EncryptedSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />
      <apidata name="EncryptedSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.EncryptedSecurityToken">
      <topicdata name="EncryptedSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />
      <apidata name="EncryptedSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Token" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityToken.#ctor(System.IdentityModel.Tokens.SecurityToken,System.IdentityModel.Tokens.EncryptingCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="encryptingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.EncryptedSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedSecurityToken.EncryptingCredentials">
      <topicdata group="api" />
      <apidata name="EncryptingCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EncryptingCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="ResolveKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedSecurityToken.Token">
      <topicdata group="api" />
      <apidata name="Token" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Token" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="EncryptedSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler">
      <topicdata name="EncryptedSecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" />
      <apidata name="EncryptedSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler">
      <topicdata name="EncryptedSecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" />
      <apidata name="EncryptedSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer" />
        <element api="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken">
      <topicdata name="CanReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken">
      <topicdata name="ReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken">
      <topicdata name="WriteToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.CanWriteToken">
      <topicdata group="api" />
      <apidata name="CanWriteToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWriteToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.GetTokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="GetTokenTypeIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.KeyInfoSerializer">
      <topicdata group="api" />
      <apidata name="KeyInfoSerializer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyInfoSerializer" />
      <setter name="set_KeyInfoSerializer" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TokenType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException">
      <topicdata group="api" />
      <apidata name="EncryptedTokenDecryptionFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor">
          <element api="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
          <element api="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException">
      <topicdata name="EncryptedTokenDecryptionFailedException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" />
      <apidata name="EncryptedTokenDecryptionFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException">
      <topicdata name="EncryptedTokenDecryptionFailedException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" />
      <apidata name="EncryptedTokenDecryptionFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException">
      <topicdata name="EncryptedTokenDecryptionFailedException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" />
      <apidata name="EncryptedTokenDecryptionFailedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
        <element api="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.EncryptingCredentials">
      <topicdata group="api" />
      <apidata name="EncryptingCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.EncryptingCredentials.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.EncryptedKeyEncryptingCredentials" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.EncryptingCredentials.#ctor">
          <element api="M:System.IdentityModel.Tokens.EncryptingCredentials.#ctor" />
          <element api="M:System.IdentityModel.Tokens.EncryptingCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.Algorithm" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.EncryptingCredentials">
      <topicdata name="EncryptingCredentials" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.EncryptingCredentials" />
      <apidata name="EncryptingCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.EncryptingCredentials.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.EncryptingCredentials">
      <topicdata name="EncryptingCredentials" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.EncryptingCredentials" />
      <apidata name="EncryptingCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.EncryptingCredentials.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.Algorithm" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.EncryptingCredentials.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.EncryptingCredentials.#ctor" />
        <element api="M:System.IdentityModel.Tokens.EncryptingCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptingCredentials.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptingCredentials.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.EncryptingCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.EncryptingCredentials.#ctor" />
      <parameters>
        <parameter name="key">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </parameter>
        <parameter name="keyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptingCredentials.Algorithm">
      <topicdata group="api" />
      <apidata name="Algorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Algorithm" />
      <setter name="set_Algorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey">
      <topicdata group="api" />
      <apidata name="SecurityKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityKey" />
      <setter name="set_SecurityKey" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier">
      <topicdata group="api" />
      <apidata name="SecurityKeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityKeyIdentifier" />
      <setter name="set_SecurityKeyIdentifier" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="GenericXmlSecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement)" />
          <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement,System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause">
      <topicdata name="GenericXmlSecurityKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" />
      <apidata name="GenericXmlSecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause">
      <topicdata name="GenericXmlSecurityKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" />
      <apidata name="GenericXmlSecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement)" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="referenceXml">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor(System.Xml.XmlElement,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="referenceXml">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause.ReferenceXml">
      <topicdata group="api" />
      <apidata name="ReferenceXml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReferenceXml" />
      <returns>
        <type api="T:System.Xml.XmlElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <topicdata group="api" />
      <apidata name="GenericXmlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityToken,System.DateTime,System.DateTime,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.AuthorizationPolicies" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <topicdata name="GenericXmlSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
      <apidata name="GenericXmlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.GenericXmlSecurityToken">
      <topicdata name="GenericXmlSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
      <apidata name="GenericXmlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.AuthorizationPolicies" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityToken,System.DateTime,System.DateTime,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="tokenXml">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
        <parameter name="proofToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="effectiveTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="internalTokenReference">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="externalTokenReference">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="authorizationPolicies">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.AuthorizationPolicies">
      <topicdata group="api" />
      <apidata name="AuthorizationPolicies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthorizationPolicies" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ExternalTokenReference">
      <topicdata group="api" />
      <apidata name="ExternalTokenReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExternalTokenReference" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.InternalTokenReference">
      <topicdata group="api" />
      <apidata name="InternalTokenReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InternalTokenReference" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ProofToken">
      <topicdata group="api" />
      <apidata name="ProofToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProofToken" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.TokenXml">
      <topicdata group="api" />
      <apidata name="TokenXml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TokenXml" />
      <returns>
        <type api="T:System.Xml.XmlElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.GenericXmlSecurityToken.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.GenericXmlSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <topicdata group="api" />
      <apidata name="InMemorySymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor">
          <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <topicdata name="InMemorySymmetricSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
      <apidata name="InMemorySymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey">
      <topicdata name="InMemorySymmetricSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
      <apidata name="InMemorySymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor" />
      <parameters>
        <parameter name="symmetricKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.#ctor" />
      <parameters>
        <parameter name="symmetricKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="cloneBuffer">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GenerateDerivedKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="label">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="nonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivedKeyLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="GetDecryptionTransform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="GetEncryptionTransform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetIVSize(System.String)">
      <topicdata group="api" />
      <apidata name="GetIVSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="GetKeyedHashAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="GetSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.GetSymmetricKey">
      <topicdata group="api" />
      <apidata name="GetSymmetricKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSupportedAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.IssuerNameRegistry">
      <topicdata group="api" />
      <apidata name="IssuerNameRegistry" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor" />
        <element api="Overload:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName">
          <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.IssuerNameRegistry">
      <topicdata name="IssuerNameRegistry" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
      <apidata name="IssuerNameRegistry" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName">
          <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName" />
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName">
      <topicdata name="GetIssuerName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetIssuerName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerNameRegistry.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="GetIssuerName" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="securityToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)">
      <topicdata group="api" />
      <apidata name="GetIssuerName" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="securityToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="requestedIssuerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName">
      <topicdata group="api" />
      <apidata name="GetWindowsIssuerName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)">
      <topicdata group="api" />
      <apidata name="LoadCustomConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="nodelist">
          <type api="T:System.Xml.XmlNodeList" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.IssuerTokenResolver">
      <topicdata group="api" />
      <apidata name="IssuerTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation" />
        <element api="F:System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.ResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor">
          <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor" />
          <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore">
          <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.IssuerTokenResolver">
      <topicdata name="IssuerTokenResolver" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
      <apidata name="IssuerTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.ResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore">
          <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.IssuerTokenResolver">
      <topicdata name="IssuerTokenResolver" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
      <apidata name="IssuerTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.IssuerTokenResolver">
      <topicdata name="IssuerTokenResolver" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
      <apidata name="IssuerTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation" />
        <element api="F:System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor" />
        <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore">
      <topicdata name="TryResolveTokenCore" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
        <element api="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor(System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.#ctor" />
      <parameters>
        <parameter name="wrappedTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreLocation">
      <topicdata group="api" />
      <apidata name="DefaultStoreLocation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.IssuerTokenResolver.DefaultStoreName">
      <topicdata group="api" />
      <apidata name="DefaultStoreName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <topicdata group="api" />
      <apidata name="TryResolveSecurityKeyCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="key" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.IssuerTokenResolver.TryResolveTokenCore" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.IssuerTokenResolver.WrappedTokenResolver">
      <topicdata group="api" />
      <apidata name="WrappedTokenResolver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WrappedTokenResolver" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.IssuerTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <topicdata group="api" />
      <apidata name="KerberosReceiverSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String)" />
          <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.GetRequest" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.Initialize">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValueTypeUri" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.WindowsIdentity" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <topicdata name="KerberosReceiverSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      <apidata name="KerberosReceiverSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.GetRequest" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.Initialize">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken">
      <topicdata name="KerberosReceiverSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      <apidata name="KerberosReceiverSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValueTypeUri" />
        <element api="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.WindowsIdentity" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String)" />
        <element api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor" />
      <parameters>
        <parameter name="request">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor" />
      <parameters>
        <parameter name="request">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor(System.Byte[],System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.#ctor" />
      <parameters>
        <parameter name="request">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="valueTypeUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.GetRequest">
      <topicdata group="api" />
      <apidata name="GetRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKey">
      <topicdata group="api" />
      <apidata name="SecurityKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityKey" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.ValueTypeUri">
      <topicdata group="api" />
      <apidata name="ValueTypeUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValueTypeUri" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosReceiverSecurityToken.WindowsIdentity">
      <topicdata group="api" />
      <apidata name="WindowsIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity">
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_WindowsIdentity" />
      <returns>
        <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <topicdata group="api" />
      <apidata name="KerberosRequestorSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <topicdata name="KerberosRequestorSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
      <apidata name="KerberosRequestorSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken">
      <topicdata name="KerberosRequestorSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
      <apidata name="KerberosRequestorSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor" />
      <parameters>
        <parameter name="servicePrincipalName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor(System.String,System.Security.Principal.TokenImpersonationLevel,System.Net.NetworkCredential,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.#ctor" />
      <parameters>
        <parameter name="servicePrincipalName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tokenImpersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="networkCredential">
          <type api="T:System.Net.NetworkCredential" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.GetRequest">
      <topicdata group="api" />
      <apidata name="GetRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKey">
      <topicdata group="api" />
      <apidata name="SecurityKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityKey" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ServicePrincipalName">
      <topicdata group="api" />
      <apidata name="ServicePrincipalName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServicePrincipalName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosRequestorSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="KerberosSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor" />
        <element api="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler">
      <topicdata name="KerberosSecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" />
      <apidata name="KerberosSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler">
      <topicdata name="KerberosSecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" />
      <apidata name="KerberosSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.CanValidateToken">
      <topicdata group="api" />
      <apidata name="CanValidateToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanValidateToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.GetTokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="GetTokenTypeIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TokenType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="KerberosTicketHashKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[],System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.GetKerberosTicketHash" />
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <topicdata name="KerberosTicketHashKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      <apidata name="KerberosTicketHashKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.GetKerberosTicketHash" />
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause">
      <topicdata name="KerberosTicketHashKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      <apidata name="KerberosTicketHashKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="ticketHash">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor(System.Byte[],System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="ticketHash">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.GetKerberosTicketHash">
      <topicdata group="api" />
      <apidata name="GetKerberosTicketHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="LocalIdKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Type)" />
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32,System.Type)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" />
        <element api="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <topicdata name="LocalIdKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      <apidata name="LocalIdKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause">
      <topicdata name="LocalIdKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      <apidata name="LocalIdKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId" />
        <element api="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Type)" />
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="localId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="localId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="localId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.LocalId">
      <topicdata group="api" />
      <apidata name="LocalId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LocalId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.OwnerType">
      <topicdata group="api" />
      <apidata name="OwnerType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OwnerType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.ProofDescriptor">
      <topicdata group="api" />
      <apidata name="ProofDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.AsymmetricProofDescriptor" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.ProofDescriptor.#ctor" />
        <element api="M:System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.ProofDescriptor">
      <topicdata name="ProofDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.ProofDescriptor" />
      <apidata name="ProofDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ProofDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.ProofDescriptor">
      <topicdata name="ProofDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.ProofDescriptor" />
      <apidata name="ProofDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ProofDescriptor" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.ProofDescriptor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
      <topicdata group="api" />
      <apidata name="ApplyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="response">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier">
      <topicdata group="api" />
      <apidata name="KeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyIdentifier" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="RsaKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" />
        <element api="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)" />
          <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <topicdata name="RsaKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
      <apidata name="RsaKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus" />
        <element api="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)" />
          <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.RsaKeyIdentifierClause">
      <topicdata name="RsaKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
      <apidata name="RsaKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.#ctor(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CanCreateKey">
      <topicdata group="api" />
      <apidata name="CanCreateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanCreateKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.CreateKey">
      <topicdata group="api" />
      <apidata name="CreateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetExponent">
      <topicdata group="api" />
      <apidata name="GetExponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.GetModulus">
      <topicdata group="api" />
      <apidata name="GetModulus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaKeyIdentifierClause.Rsa">
      <topicdata group="api" />
      <apidata name="Rsa" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rsa" />
      <returns>
        <type api="T:System.Security.Cryptography.RSA" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteExponentAsBase64(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteExponentAsBase64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaKeyIdentifierClause.WriteModulusAsBase64(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteModulusAsBase64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.RsaSecurityKey">
      <topicdata group="api" />
      <apidata name="RsaSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.RsaSecurityKey">
      <topicdata name="RsaSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityKey" />
      <apidata name="RsaSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.RsaSecurityKey">
      <topicdata name="RsaSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityKey" />
      <apidata name="RsaSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.#ctor(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.DecryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.EncryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="requiresPrivateKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <topicdata group="api" />
      <apidata name="GetHashAlgorithmForSignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureDeformatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureDeformatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.GetSignatureFormatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.HasPrivateKey">
      <topicdata group="api" />
      <apidata name="HasPrivateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSupportedAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSupportedAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityKey.IsSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityKey.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.RsaSecurityToken">
      <topicdata group="api" />
      <apidata name="RsaSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.RsaSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA)" />
          <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.Finalize" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.RsaSecurityToken">
      <topicdata name="RsaSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityToken" />
      <apidata name="RsaSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.Finalize" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.RsaSecurityToken">
      <topicdata name="RsaSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityToken" />
      <apidata name="RsaSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.RsaSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.RsaSecurityToken.#ctor" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.#ctor(System.Security.Cryptography.RSA,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.RsaSecurityToken.#ctor" />
      <parameters>
        <parameter name="rsa">
          <type api="T:System.Security.Cryptography.RSA" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.RsaSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.Rsa">
      <topicdata group="api" />
      <apidata name="Rsa" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rsa" />
      <returns>
        <type api="T:System.Security.Cryptography.RSA" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="RsaSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor" />
        <element api="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.RsaSecurityTokenHandler">
      <topicdata name="RsaSecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" />
      <apidata name="RsaSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor" />
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.RsaSecurityTokenHandler">
      <topicdata name="RsaSecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" />
      <apidata name="RsaSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken">
      <topicdata name="CanReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken">
      <topicdata name="ReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken">
      <topicdata name="WriteToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanValidateToken">
      <topicdata group="api" />
      <apidata name="CanValidateToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanValidateToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityTokenHandler.CanWriteToken">
      <topicdata group="api" />
      <apidata name="CanWriteToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWriteToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.GetTokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="GetTokenTypeIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.RsaSecurityTokenHandler.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TokenType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.RsaSecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2Action">
      <topicdata group="api" />
      <apidata name="Saml2Action" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Action.#ctor(System.String,System.Uri)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2Action.Namespace" />
        <element api="P:System.IdentityModel.Tokens.Saml2Action.Value" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2Action">
      <topicdata name="Saml2Action" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2Action" />
      <apidata name="Saml2Action" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Action" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2Action">
      <topicdata name="Saml2Action" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2Action" />
      <apidata name="Saml2Action" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2Action.Namespace" />
        <element api="P:System.IdentityModel.Tokens.Saml2Action.Value" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Action" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Action.#ctor(System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="actionNamespace">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Action" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Action.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Action" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Action.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Action" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2Advice">
      <topicdata group="api" />
      <apidata name="Saml2Advice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Advice.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Advice.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2Advice.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.Saml2Advice.Assertions" />
        <element api="P:System.IdentityModel.Tokens.Saml2Advice.AssertionUriReferences" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2Advice">
      <topicdata name="Saml2Advice" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2Advice" />
      <apidata name="Saml2Advice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Advice.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Advice" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2Advice">
      <topicdata name="Saml2Advice" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2Advice" />
      <apidata name="Saml2Advice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Advice.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2Advice.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.Saml2Advice.Assertions" />
        <element api="P:System.IdentityModel.Tokens.Saml2Advice.AssertionUriReferences" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Advice" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Advice.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Advice" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Advice.AssertionIdReferences">
      <topicdata group="api" />
      <apidata name="AssertionIdReferences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionIdReferences" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Advice" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Advice.Assertions">
      <topicdata group="api" />
      <apidata name="Assertions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Advice" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Advice.AssertionUriReferences">
      <topicdata group="api" />
      <apidata name="AssertionUriReferences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionUriReferences" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Advice" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2Assertion">
      <topicdata group="api" />
      <apidata name="Saml2Assertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Assertion.#ctor(System.IdentityModel.Tokens.Saml2NameIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2Assertion.WriteSourceData(System.Xml.XmlWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Advice" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.CanWriteSourceData" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Conditions" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.ExternalEncryptedKeys" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Id" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.IssueInstant" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Issuer" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.SigningCredentials" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Statements" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Subject" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Version" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2Assertion">
      <topicdata name="Saml2Assertion" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2Assertion" />
      <apidata name="Saml2Assertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Assertion.WriteSourceData(System.Xml.XmlWriter)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2Assertion">
      <topicdata name="Saml2Assertion" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2Assertion" />
      <apidata name="Saml2Assertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Advice" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.CanWriteSourceData" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Conditions" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.ExternalEncryptedKeys" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Id" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.IssueInstant" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Issuer" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.SigningCredentials" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Statements" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Subject" />
        <element api="P:System.IdentityModel.Tokens.Saml2Assertion.Version" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Assertion.#ctor(System.IdentityModel.Tokens.Saml2NameIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="issuer">
          <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.Advice">
      <topicdata group="api" />
      <apidata name="Advice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Advice" />
      <setter name="set_Advice" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Advice" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.CanWriteSourceData">
      <topicdata group="api" />
      <apidata name="CanWriteSourceData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanWriteSourceData" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.Conditions">
      <topicdata group="api" />
      <apidata name="Conditions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Conditions" />
      <setter name="set_Conditions" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.EncryptingCredentials">
      <topicdata group="api" />
      <apidata name="EncryptingCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EncryptingCredentials" />
      <setter name="set_EncryptingCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.ExternalEncryptedKeys">
      <topicdata group="api" />
      <apidata name="ExternalEncryptedKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExternalEncryptedKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.IssueInstant">
      <topicdata group="api" />
      <apidata name="IssueInstant" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssueInstant" />
      <setter name="set_IssueInstant" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.Issuer">
      <topicdata group="api" />
      <apidata name="Issuer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Issuer" />
      <setter name="set_Issuer" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.SigningCredentials">
      <topicdata group="api" />
      <apidata name="SigningCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SigningCredentials" />
      <setter name="set_SigningCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.Statements">
      <topicdata group="api" />
      <apidata name="Statements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Statements" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2Statement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.Subject">
      <topicdata group="api" />
      <apidata name="Subject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Subject" />
      <setter name="set_Subject" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Assertion.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Assertion.WriteSourceData(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteSourceData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="Saml2AssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches(System.String,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause">
      <topicdata name="Saml2AssertionKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" />
      <apidata name="Saml2AssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches(System.String,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause">
      <topicdata name="Saml2AssertionKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" />
      <apidata name="Saml2AssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches(System.String,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches(System.String,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assertionId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2Attribute">
      <topicdata group="api" />
      <apidata name="Saml2Attribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2Attribute.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2Attribute.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.Saml2Attribute.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.IdentityModel.Tokens.Saml2Attribute.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.AttributeValueXsiType" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.FriendlyName" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.Name" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.NameFormat" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.OriginalIssuer" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.Values" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2Attribute">
      <topicdata name="Saml2Attribute" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2Attribute" />
      <apidata name="Saml2Attribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2Attribute">
      <topicdata name="Saml2Attribute" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2Attribute" />
      <apidata name="Saml2Attribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.AttributeValueXsiType" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.FriendlyName" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.Name" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.NameFormat" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.OriginalIssuer" />
        <element api="P:System.IdentityModel.Tokens.Saml2Attribute.Values" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2Attribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Attribute.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2Attribute.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:System.IdentityModel.Tokens.Saml2Attribute.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Attribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Attribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Attribute.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Attribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Attribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Attribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Attribute.AttributeValueXsiType">
      <topicdata group="api" />
      <apidata name="AttributeValueXsiType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttributeValueXsiType" />
      <setter name="set_AttributeValueXsiType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Attribute.FriendlyName">
      <topicdata group="api" />
      <apidata name="FriendlyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FriendlyName" />
      <setter name="set_FriendlyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Attribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Attribute.NameFormat">
      <topicdata group="api" />
      <apidata name="NameFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NameFormat" />
      <setter name="set_NameFormat" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Attribute.OriginalIssuer">
      <topicdata group="api" />
      <apidata name="OriginalIssuer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OriginalIssuer" />
      <setter name="set_OriginalIssuer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Attribute.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2AttributeStatement">
      <topicdata group="api" />
      <apidata name="Saml2AttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.Saml2Statement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})" />
          <element api="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor(System.IdentityModel.Tokens.Saml2Attribute)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2AttributeStatement.Attributes" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2AttributeStatement">
      <topicdata name="Saml2AttributeStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2AttributeStatement" />
      <apidata name="Saml2AttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2AttributeStatement">
      <topicdata name="Saml2AttributeStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2AttributeStatement" />
      <apidata name="Saml2AttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2AttributeStatement.Attributes" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})" />
        <element api="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor(System.IdentityModel.Tokens.Saml2Attribute)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor(System.IdentityModel.Tokens.Saml2Attribute)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AttributeStatement.#ctor" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AttributeStatement.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2AudienceRestriction">
      <topicdata group="api" />
      <apidata name="Saml2AudienceRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor" />
          <element api="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor(System.Collections.Generic.IEnumerable{System.Uri})" />
          <element api="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor(System.Uri)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2AudienceRestriction.Audiences" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2AudienceRestriction">
      <topicdata name="Saml2AudienceRestriction" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" />
      <apidata name="Saml2AudienceRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2AudienceRestriction">
      <topicdata name="Saml2AudienceRestriction" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" />
      <apidata name="Saml2AudienceRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2AudienceRestriction.Audiences" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor" />
        <element api="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor(System.Collections.Generic.IEnumerable{System.Uri})" />
        <element api="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor" />
      <parameters>
        <parameter name="audiences">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AudienceRestriction.#ctor" />
      <parameters>
        <parameter name="audience">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AudienceRestriction.Audiences">
      <topicdata group="api" />
      <apidata name="Audiences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Audiences" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2AuthenticationContext">
      <topicdata group="api" />
      <apidata name="Saml2AuthenticationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor" />
          <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor(System.Uri)" />
          <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor(System.Uri,System.Uri)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationContext.AuthenticatingAuthorities" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationContext.ClassReference" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationContext.DeclarationReference" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2AuthenticationContext">
      <topicdata name="Saml2AuthenticationContext" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" />
      <apidata name="Saml2AuthenticationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2AuthenticationContext">
      <topicdata name="Saml2AuthenticationContext" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" />
      <apidata name="Saml2AuthenticationContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationContext.AuthenticatingAuthorities" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationContext.ClassReference" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationContext.DeclarationReference" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor" />
        <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor(System.Uri)" />
        <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor(System.Uri,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor" />
      <parameters>
        <parameter name="classReference">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor(System.Uri,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AuthenticationContext.#ctor" />
      <parameters>
        <parameter name="classReference">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="declarationReference">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthenticationContext.AuthenticatingAuthorities">
      <topicdata group="api" />
      <apidata name="AuthenticatingAuthorities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthenticatingAuthorities" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthenticationContext.ClassReference">
      <topicdata group="api" />
      <apidata name="ClassReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClassReference" />
      <setter name="set_ClassReference" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthenticationContext.DeclarationReference">
      <topicdata group="api" />
      <apidata name="DeclarationReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeclarationReference" />
      <setter name="set_DeclarationReference" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement">
      <topicdata group="api" />
      <apidata name="Saml2AuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.Saml2Statement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor(System.IdentityModel.Tokens.Saml2AuthenticationContext)" />
          <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor(System.IdentityModel.Tokens.Saml2AuthenticationContext,System.DateTime)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.AuthenticationContext" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.SessionIndex" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.SessionNotOnOrAfter" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.SubjectLocality" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2AuthenticationStatement">
      <topicdata name="Saml2AuthenticationStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" />
      <apidata name="Saml2AuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2AuthenticationStatement">
      <topicdata name="Saml2AuthenticationStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" />
      <apidata name="Saml2AuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.AuthenticationContext" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.SessionIndex" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.SessionNotOnOrAfter" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.SubjectLocality" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor(System.IdentityModel.Tokens.Saml2AuthenticationContext)" />
        <element api="M:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor(System.IdentityModel.Tokens.Saml2AuthenticationContext,System.DateTime)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor(System.IdentityModel.Tokens.Saml2AuthenticationContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor" />
      <parameters>
        <parameter name="authenticationContext">
          <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor(System.IdentityModel.Tokens.Saml2AuthenticationContext,System.DateTime)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AuthenticationStatement.#ctor" />
      <parameters>
        <parameter name="authenticationContext">
          <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
        </parameter>
        <parameter name="authenticationInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.AuthenticationContext">
      <topicdata group="api" />
      <apidata name="AuthenticationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationContext" />
      <setter name="set_AuthenticationContext" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.AuthenticationInstant">
      <topicdata group="api" />
      <apidata name="AuthenticationInstant" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationInstant" />
      <setter name="set_AuthenticationInstant" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.SessionIndex">
      <topicdata group="api" />
      <apidata name="SessionIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SessionIndex" />
      <setter name="set_SessionIndex" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.SessionNotOnOrAfter">
      <topicdata group="api" />
      <apidata name="SessionNotOnOrAfter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SessionNotOnOrAfter" />
      <setter name="set_SessionNotOnOrAfter" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthenticationStatement.SubjectLocality">
      <topicdata group="api" />
      <apidata name="SubjectLocality" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SubjectLocality" />
      <setter name="set_SubjectLocality" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement">
      <topicdata group="api" />
      <apidata name="Saml2AuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.Saml2Statement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.EmptyResource" />
        <element api="Overload:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor(System.Uri,System.IdentityModel.Tokens.SamlAccessDecision)" />
          <element api="M:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor(System.Uri,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Action})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Actions" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Decision" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Evidence" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Resource" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement">
      <topicdata name="Saml2AuthorizationDecisionStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />
      <apidata name="Saml2AuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement">
      <topicdata name="Saml2AuthorizationDecisionStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />
      <apidata name="Saml2AuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Actions" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Decision" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Evidence" />
        <element api="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Resource" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement">
      <topicdata name="Saml2AuthorizationDecisionStatement" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />
      <apidata name="Saml2AuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.EmptyResource" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor(System.Uri,System.IdentityModel.Tokens.SamlAccessDecision)" />
        <element api="M:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor(System.Uri,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Action})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor(System.Uri,System.IdentityModel.Tokens.SamlAccessDecision)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor" />
      <parameters>
        <parameter name="resource">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="decision">
          <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor(System.Uri,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Action})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.#ctor" />
      <parameters>
        <parameter name="resource">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="decision">
          <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
        </parameter>
        <parameter name="actions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.Saml2Action" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Actions">
      <topicdata group="api" />
      <apidata name="Actions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Actions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2Action" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Decision">
      <topicdata group="api" />
      <apidata name="Decision" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Decision" />
      <setter name="set_Decision" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.EmptyResource">
      <topicdata group="api" />
      <apidata name="EmptyResource" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Evidence">
      <topicdata group="api" />
      <apidata name="Evidence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Evidence" />
      <setter name="set_Evidence" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement.Resource">
      <topicdata group="api" />
      <apidata name="Resource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Resource" />
      <setter name="set_Resource" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2Conditions">
      <topicdata group="api" />
      <apidata name="Saml2Conditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Conditions.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Conditions.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.AudienceRestrictions" />
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.NotBefore" />
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.NotOnOrAfter" />
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.OneTimeUse" />
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.ProxyRestriction" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2Conditions">
      <topicdata name="Saml2Conditions" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2Conditions" />
      <apidata name="Saml2Conditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Conditions.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2Conditions">
      <topicdata name="Saml2Conditions" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2Conditions" />
      <apidata name="Saml2Conditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Conditions.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.AudienceRestrictions" />
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.NotBefore" />
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.NotOnOrAfter" />
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.OneTimeUse" />
        <element api="P:System.IdentityModel.Tokens.Saml2Conditions.ProxyRestriction" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Conditions.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Conditions.AudienceRestrictions">
      <topicdata group="api" />
      <apidata name="AudienceRestrictions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudienceRestrictions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Conditions.NotBefore">
      <topicdata group="api" />
      <apidata name="NotBefore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotBefore" />
      <setter name="set_NotBefore" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Conditions.NotOnOrAfter">
      <topicdata group="api" />
      <apidata name="NotOnOrAfter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotOnOrAfter" />
      <setter name="set_NotOnOrAfter" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Conditions.OneTimeUse">
      <topicdata group="api" />
      <apidata name="OneTimeUse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OneTimeUse" />
      <setter name="set_OneTimeUse" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Conditions.ProxyRestriction">
      <topicdata group="api" />
      <apidata name="ProxyRestriction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProxyRestriction" />
      <setter name="set_ProxyRestriction" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2Evidence">
      <topicdata group="api" />
      <apidata name="Saml2Evidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2Evidence.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor" />
          <element api="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor(System.IdentityModel.Tokens.Saml2Assertion)" />
          <element api="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor(System.IdentityModel.Tokens.Saml2Id)" />
          <element api="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor(System.Uri)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2Evidence.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.Saml2Evidence.Assertions" />
        <element api="P:System.IdentityModel.Tokens.Saml2Evidence.AssertionUriReferences" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2Evidence">
      <topicdata name="Saml2Evidence" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2Evidence" />
      <apidata name="Saml2Evidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2Evidence">
      <topicdata name="Saml2Evidence" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2Evidence" />
      <apidata name="Saml2Evidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2Evidence.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.Saml2Evidence.Assertions" />
        <element api="P:System.IdentityModel.Tokens.Saml2Evidence.AssertionUriReferences" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2Evidence.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor" />
        <element api="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor(System.IdentityModel.Tokens.Saml2Assertion)" />
        <element api="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor(System.IdentityModel.Tokens.Saml2Id)" />
        <element api="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Evidence.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor(System.IdentityModel.Tokens.Saml2Assertion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Evidence.#ctor" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor(System.IdentityModel.Tokens.Saml2Id)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Evidence.#ctor" />
      <parameters>
        <parameter name="idReference">
          <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Evidence.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Evidence.#ctor" />
      <parameters>
        <parameter name="uriReference">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Evidence.AssertionIdReferences">
      <topicdata group="api" />
      <apidata name="AssertionIdReferences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionIdReferences" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Evidence.Assertions">
      <topicdata group="api" />
      <apidata name="Assertions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Evidence.AssertionUriReferences">
      <topicdata group="api" />
      <apidata name="AssertionUriReferences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionUriReferences" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2Id">
      <topicdata group="api" />
      <apidata name="Saml2Id" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Id.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2Id.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2Id.#ctor" />
          <element api="M:System.IdentityModel.Tokens.Saml2Id.#ctor(System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.Saml2Id.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.Saml2Id.GetHashCode" />
        <element api="M:System.IdentityModel.Tokens.Saml2Id.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.Saml2Id.Value" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2Id">
      <topicdata name="Saml2Id" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2Id" />
      <apidata name="Saml2Id" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Id.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Id.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.Saml2Id.GetHashCode" />
        <element api="M:System.IdentityModel.Tokens.Saml2Id.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Id" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2Id">
      <topicdata name="Saml2Id" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2Id" />
      <apidata name="Saml2Id" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Id.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2Id.Value" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Id" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2Id.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Id.#ctor" />
        <element api="M:System.IdentityModel.Tokens.Saml2Id.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Id.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Id.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Id.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Id.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Id.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Id.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Id.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Id.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2NameIdentifier">
      <topicdata group="api" />
      <apidata name="Saml2NameIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor(System.String,System.Uri)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.ExternalEncryptedKeys" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.Format" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.NameQualifier" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.SPNameQualifier" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.SPProvidedId" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.Value" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2NameIdentifier">
      <topicdata name="Saml2NameIdentifier" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />
      <apidata name="Saml2NameIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2NameIdentifier">
      <topicdata name="Saml2NameIdentifier" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />
      <apidata name="Saml2NameIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.ExternalEncryptedKeys" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.Format" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.NameQualifier" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.SPNameQualifier" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.SPProvidedId" />
        <element api="P:System.IdentityModel.Tokens.Saml2NameIdentifier.Value" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor(System.String,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor(System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2NameIdentifier.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2NameIdentifier.EncryptingCredentials">
      <topicdata group="api" />
      <apidata name="EncryptingCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EncryptingCredentials" />
      <setter name="set_EncryptingCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2NameIdentifier.ExternalEncryptedKeys">
      <topicdata group="api" />
      <apidata name="ExternalEncryptedKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExternalEncryptedKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.EncryptedKeyIdentifierClause" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2NameIdentifier.Format">
      <topicdata group="api" />
      <apidata name="Format" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Format" />
      <setter name="set_Format" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2NameIdentifier.NameQualifier">
      <topicdata group="api" />
      <apidata name="NameQualifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NameQualifier" />
      <setter name="set_NameQualifier" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2NameIdentifier.SPNameQualifier">
      <topicdata group="api" />
      <apidata name="SPNameQualifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SPNameQualifier" />
      <setter name="set_SPNameQualifier" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2NameIdentifier.SPProvidedId">
      <topicdata group="api" />
      <apidata name="SPProvidedId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SPProvidedId" />
      <setter name="set_SPProvidedId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2NameIdentifier.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2ProxyRestriction">
      <topicdata group="api" />
      <apidata name="Saml2ProxyRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2ProxyRestriction.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2ProxyRestriction.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2ProxyRestriction.Audiences" />
        <element api="P:System.IdentityModel.Tokens.Saml2ProxyRestriction.Count" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2ProxyRestriction">
      <topicdata name="Saml2ProxyRestriction" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" />
      <apidata name="Saml2ProxyRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2ProxyRestriction.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2ProxyRestriction">
      <topicdata name="Saml2ProxyRestriction" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" />
      <apidata name="Saml2ProxyRestriction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2ProxyRestriction.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2ProxyRestriction.Audiences" />
        <element api="P:System.IdentityModel.Tokens.Saml2ProxyRestriction.Count" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2ProxyRestriction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2ProxyRestriction.Audiences">
      <topicdata group="api" />
      <apidata name="Audiences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Audiences" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2ProxyRestriction.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Count" />
      <setter name="set_Count" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="Saml2SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause.#ctor(System.IdentityModel.Tokens.Saml2Assertion)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause.Assertion" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause">
      <topicdata name="Saml2SecurityKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause" />
      <apidata name="Saml2SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause">
      <topicdata name="Saml2SecurityKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause" />
      <apidata name="Saml2SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause.Assertion" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause.#ctor(System.IdentityModel.Tokens.Saml2Assertion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause.Assertion">
      <topicdata group="api" />
      <apidata name="Assertion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertion" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2SecurityToken">
      <topicdata group="api" />
      <apidata name="Saml2SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor(System.IdentityModel.Tokens.Saml2Assertion)" />
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor(System.IdentityModel.Tokens.Saml2Assertion,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey},System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.IssuerToken" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2SecurityToken">
      <topicdata name="Saml2SecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2SecurityToken" />
      <apidata name="Saml2SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2SecurityToken">
      <topicdata name="Saml2SecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2SecurityToken" />
      <apidata name="Saml2SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.IssuerToken" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor(System.IdentityModel.Tokens.Saml2Assertion)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor(System.IdentityModel.Tokens.Saml2Assertion,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey},System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor(System.IdentityModel.Tokens.Saml2Assertion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor(System.IdentityModel.Tokens.Saml2Assertion,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey},System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2SecurityToken.#ctor" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
        </parameter>
        <parameter name="keys">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="issuerToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityToken.Assertion">
      <topicdata group="api" />
      <apidata name="Assertion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertion" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.Saml2SecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityToken.IssuerToken">
      <topicdata group="api" />
      <apidata name="IssuerToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IssuerToken" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="Saml2SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType" />
        <element api="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor" />
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)" />
        <element api="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler">
      <topicdata name="Saml2SecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" />
      <apidata name="Saml2SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)" />
        <element api="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler">
      <topicdata name="Saml2SecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" />
      <apidata name="Saml2SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement" />
        <element api="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler">
      <topicdata name="Saml2SecurityTokenHandler" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" />
      <apidata name="Saml2SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken">
      <topicdata name="CanReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken">
      <topicdata name="ReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken">
      <topicdata name="WriteToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.#ctor" />
      <parameters>
        <parameter name="samlSecurityTokenRequirement">
          <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="AddDelegateToAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanValidateToken">
      <topicdata group="api" />
      <apidata name="CanValidateToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanValidateToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="CanWriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CanWriteToken">
      <topicdata group="api" />
      <apidata name="CanWriteToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWriteToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CertificateValidator">
      <topicdata group="api" />
      <apidata name="CertificateValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidator" />
      <setter name="set_CertificateValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.Saml2Attribute})">
      <topicdata group="api" />
      <apidata name="CollectAttributeValues" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateAdvice" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Advice" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="claim">
          <type api="T:System.Security.Claims.Claim" ref="true" />
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAttributeStatement(System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateAttributeStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateAuthenticationStatement(System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateAuthenticationStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="authInfo">
          <type api="T:System.Security.Claims.AuthenticationInformation" ref="true" />
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.Saml2SecurityToken)">
      <topicdata group="api" />
      <apidata name="CreateClaims" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlToken">
          <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateConditions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenLifetime">
          <type api="T:System.IdentityModel.Protocols.WSTrust.Lifetime" ref="true" />
        </parameter>
        <parameter name="relyingPartyAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateIssuerNameIdentifier(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateIssuerNameIdentifier" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateSamlSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="attached">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateStatements" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2Statement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateWindowsIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="CreateWindowsIdentity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="upn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.Saml2Attribute})">
      <topicdata group="api" />
      <apidata name="CreateXmlStringFromAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
      <topicdata group="api" />
      <apidata name="DenormalizeAuthenticationType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="normalizedAuthenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="DetectReplayedToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)">
      <topicdata group="api" />
      <apidata name="FindUpn" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="claimsIdentity">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="GetEncryptingCredentials" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="GetSigningCredentials" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.Saml2SecurityToken)">
      <topicdata group="api" />
      <apidata name="GetTokenReplayCacheEntryExpirationTime" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.GetTokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="GetTokenTypeIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.KeyInfoSerializer">
      <topicdata group="api" />
      <apidata name="KeyInfoSerializer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyInfoSerializer" />
      <setter name="set_KeyInfoSerializer" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
      <topicdata group="api" />
      <apidata name="LoadCustomConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="customConfigElements">
          <type api="T:System.Xml.XmlNodeList" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.NormalizeAuthenticationContextClassReference(System.String)">
      <topicdata group="api" />
      <apidata name="NormalizeAuthenticationContextClassReference" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="saml2AuthenticationContextClassReference">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.Saml2AttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessAttributeStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="statement">
          <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.Saml2AuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessAuthenticationStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="statement">
          <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessAuthorizationDecisionStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="statement">
          <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.Saml2Subject,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessSamlSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assertionSubject">
          <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ProcessStatement(System.Collections.ObjectModel.Collection{System.IdentityModel.Tokens.Saml2Statement},System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="statements">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.Saml2Statement" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAction(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Action" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAdvice" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Advice" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAssertion" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAttributeStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Attribute)">
      <topicdata group="api" />
      <apidata name="ReadAttributeValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAudienceRestriction(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAudienceRestriction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationContext(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAuthenticationContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAuthenticationStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAuthorizationDecisionStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadConditions(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadConditions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEncryptedId(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadEncryptedId" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadEvidence" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadIssuer(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadIssuer" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameId(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadNameId" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadNameIdType(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadNameIdType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadProxyRestriction(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadProxyRestriction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.Saml2Assertion)">
      <topicdata group="api" />
      <apidata name="ReadSigningKeyInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadStatement(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Statement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubject(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmation(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadSubjectConfirmation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectConfirmationData(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadSubjectConfirmationData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectId(System.Xml.XmlReader,System.String)">
      <topicdata group="api" />
      <apidata name="ReadSubjectId" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="parentElement">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadSubjectKeyInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadSubjectLocality(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadSubjectLocality" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ResolveIssuerToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
        </parameter>
        <parameter name="issuerResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ResolveSecurityKeys(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ResolveSecurityKeys" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
        </parameter>
        <parameter name="resolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SamlSecurityTokenRequirement">
      <topicdata group="api" />
      <apidata name="SamlSecurityTokenRequirement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SamlSecurityTokenRequirement" />
      <setter name="set_SamlSecurityTokenRequirement" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.Saml2Attribute,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="SetDelegateFromAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenProfile11ValueType">
      <topicdata group="api" />
      <apidata name="TokenProfile11ValueType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLID</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TokenType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.Saml2Assertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveIssuerToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
        </parameter>
        <parameter name="issuerResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.Saml2Conditions,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ValidateConditions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="conditions">
          <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
        </parameter>
        <parameter name="enforceAudienceRestriction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateConfirmationData(System.IdentityModel.Tokens.Saml2SubjectConfirmationData)">
      <topicdata group="api" />
      <apidata name="ValidateConfirmationData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="confirmationData">
          <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Action)">
      <topicdata group="api" />
      <apidata name="WriteAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Advice)">
      <topicdata group="api" />
      <apidata name="WriteAdvice" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2Advice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Assertion)">
      <topicdata group="api" />
      <apidata name="WriteAssertion" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2Assertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Attribute)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AttributeStatement)">
      <topicdata group="api" />
      <apidata name="WriteAttributeStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.Saml2Attribute)">
      <topicdata group="api" />
      <apidata name="WriteAttributeValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.IdentityModel.Tokens.Saml2Attribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAudienceRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AudienceRestriction)">
      <topicdata group="api" />
      <apidata name="WriteAudienceRestriction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2AudienceRestriction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationContext(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationContext)">
      <topicdata group="api" />
      <apidata name="WriteAuthenticationContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthenticationStatement)">
      <topicdata group="api" />
      <apidata name="WriteAuthenticationStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement)">
      <topicdata group="api" />
      <apidata name="WriteAuthorizationDecisionStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Conditions)">
      <topicdata group="api" />
      <apidata name="WriteConditions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2Conditions" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Evidence)">
      <topicdata group="api" />
      <apidata name="WriteEvidence" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2Evidence" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteIssuer(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)">
      <topicdata group="api" />
      <apidata name="WriteIssuer" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="WriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameId(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)">
      <topicdata group="api" />
      <apidata name="WriteNameId" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteNameIdType(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2NameIdentifier)">
      <topicdata group="api" />
      <apidata name="WriteNameIdType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteProxyRestriction(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2ProxyRestriction)">
      <topicdata group="api" />
      <apidata name="WriteProxyRestriction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2ProxyRestriction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name="WriteSigningKeyInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Statement)">
      <topicdata group="api" />
      <apidata name="WriteStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2Statement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2Subject)">
      <topicdata group="api" />
      <apidata name="WriteSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmation(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmation)">
      <topicdata group="api" />
      <apidata name="WriteSubjectConfirmation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectConfirmationData(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)">
      <topicdata group="api" />
      <apidata name="WriteSubjectConfirmationData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name="WriteSubjectKeyInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteSubjectLocality(System.Xml.XmlWriter,System.IdentityModel.Tokens.Saml2SubjectLocality)">
      <topicdata group="api" />
      <apidata name="WriteSubjectLocality" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.Saml2SecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2Statement">
      <topicdata group="api" />
      <apidata name="Saml2Statement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.Saml2AttributeStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.Saml2AuthenticationStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.Saml2AuthorizationDecisionStatement" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Statement.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2Statement">
      <topicdata name="Saml2Statement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2Statement" />
      <apidata name="Saml2Statement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Statement" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Statement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Statement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2Subject">
      <topicdata group="api" />
      <apidata name="Saml2Subject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Subject.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2Subject.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2Subject.#ctor" />
          <element api="M:System.IdentityModel.Tokens.Saml2Subject.#ctor(System.IdentityModel.Tokens.Saml2NameIdentifier)" />
          <element api="M:System.IdentityModel.Tokens.Saml2Subject.#ctor(System.IdentityModel.Tokens.Saml2SubjectConfirmation)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2Subject.NameId" />
        <element api="P:System.IdentityModel.Tokens.Saml2Subject.SubjectConfirmations" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2Subject">
      <topicdata name="Saml2Subject" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2Subject" />
      <apidata name="Saml2Subject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Subject.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2Subject">
      <topicdata name="Saml2Subject" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2Subject" />
      <apidata name="Saml2Subject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2Subject.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2Subject.NameId" />
        <element api="P:System.IdentityModel.Tokens.Saml2Subject.SubjectConfirmations" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2Subject.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2Subject.#ctor" />
        <element api="M:System.IdentityModel.Tokens.Saml2Subject.#ctor(System.IdentityModel.Tokens.Saml2NameIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.Saml2Subject.#ctor(System.IdentityModel.Tokens.Saml2SubjectConfirmation)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Subject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Subject.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Subject.#ctor(System.IdentityModel.Tokens.Saml2NameIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Subject.#ctor" />
      <parameters>
        <parameter name="nameId">
          <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2Subject.#ctor(System.IdentityModel.Tokens.Saml2SubjectConfirmation)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2Subject.#ctor" />
      <parameters>
        <parameter name="subjectConfirmation">
          <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Subject.NameId">
      <topicdata group="api" />
      <apidata name="NameId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NameId" />
      <setter name="set_NameId" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2Subject.SubjectConfirmations">
      <topicdata group="api" />
      <apidata name="SubjectConfirmations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SubjectConfirmations" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2Subject" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation">
      <topicdata group="api" />
      <apidata name="Saml2SubjectConfirmation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor(System.Uri)" />
          <element api="M:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor(System.Uri,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmation.Method" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmation.NameIdentifier" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmation.SubjectConfirmationData" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2SubjectConfirmation">
      <topicdata name="Saml2SubjectConfirmation" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" />
      <apidata name="Saml2SubjectConfirmation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2SubjectConfirmation">
      <topicdata name="Saml2SubjectConfirmation" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" />
      <apidata name="Saml2SubjectConfirmation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmation.Method" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmation.NameIdentifier" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmation.SubjectConfirmationData" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor(System.Uri)" />
        <element api="M:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor(System.Uri,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor(System.Uri,System.IdentityModel.Tokens.Saml2SubjectConfirmationData)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2SubjectConfirmation.#ctor" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectConfirmation.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Method" />
      <setter name="set_Method" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectConfirmation.NameIdentifier">
      <topicdata group="api" />
      <apidata name="NameIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NameIdentifier" />
      <setter name="set_NameIdentifier" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2NameIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectConfirmation.SubjectConfirmationData">
      <topicdata group="api" />
      <apidata name="SubjectConfirmationData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SubjectConfirmationData" />
      <setter name="set_SubjectConfirmationData" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmation" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData">
      <topicdata group="api" />
      <apidata name="Saml2SubjectConfirmationData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.Address" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.InResponseTo" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.KeyIdentifiers" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.NotBefore" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.NotOnOrAfter" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.Recipient" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData">
      <topicdata name="Saml2SubjectConfirmationData" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" />
      <apidata name="Saml2SubjectConfirmationData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData">
      <topicdata name="Saml2SubjectConfirmationData" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" />
      <apidata name="Saml2SubjectConfirmationData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.Address" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.InResponseTo" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.KeyIdentifiers" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.NotBefore" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.NotOnOrAfter" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.Recipient" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Address" />
      <setter name="set_Address" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.InResponseTo">
      <topicdata group="api" />
      <apidata name="InResponseTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InResponseTo" />
      <setter name="set_InResponseTo" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.Saml2Id" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.KeyIdentifiers">
      <topicdata group="api" />
      <apidata name="KeyIdentifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyIdentifiers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.NotBefore">
      <topicdata group="api" />
      <apidata name="NotBefore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotBefore" />
      <setter name="set_NotBefore" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.NotOnOrAfter">
      <topicdata group="api" />
      <apidata name="NotOnOrAfter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotOnOrAfter" />
      <setter name="set_NotOnOrAfter" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectConfirmationData.Recipient">
      <topicdata group="api" />
      <apidata name="Recipient" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Recipient" />
      <setter name="set_Recipient" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectConfirmationData" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.Saml2SubjectLocality">
      <topicdata group="api" />
      <apidata name="Saml2SubjectLocality" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor">
          <element api="M:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor" />
          <element api="M:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectLocality.Address" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectLocality.DnsName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.Saml2SubjectLocality">
      <topicdata name="Saml2SubjectLocality" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.Saml2SubjectLocality" />
      <apidata name="Saml2SubjectLocality" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.Saml2SubjectLocality">
      <topicdata name="Saml2SubjectLocality" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.Saml2SubjectLocality" />
      <apidata name="Saml2SubjectLocality" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectLocality.Address" />
        <element api="P:System.IdentityModel.Tokens.Saml2SubjectLocality.DnsName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor" />
        <element api="M:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.Saml2SubjectLocality.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dnsName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectLocality.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Address" />
      <setter name="set_Address" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.Saml2SubjectLocality.DnsName">
      <topicdata group="api" />
      <apidata name="DnsName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DnsName" />
      <setter name="set_DnsName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.Saml2SubjectLocality" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAccessDecision">
      <topicdata group="api" />
      <apidata name="SamlAccessDecision" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SamlAccessDecision.Permit" />
        <element api="F:System.IdentityModel.Tokens.SamlAccessDecision.Deny" />
        <element api="F:System.IdentityModel.Tokens.SamlAccessDecision.Indeterminate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlAccessDecision.Deny">
      <topicdata group="api" notopic="" />
      <apidata name="Deny" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlAccessDecision.Indeterminate">
      <topicdata group="api" notopic="" />
      <apidata name="Indeterminate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlAccessDecision.Permit">
      <topicdata group="api" notopic="" />
      <apidata name="Permit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAction">
      <topicdata group="api" />
      <apidata name="SamlAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAction.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAction.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAction.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAction.Action" />
        <element api="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAction.Namespace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAction">
      <topicdata name="SamlAction" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAction" />
      <apidata name="SamlAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAction.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAction.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAction">
      <topicdata name="SamlAction" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAction" />
      <apidata name="SamlAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAction.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAction.Action" />
        <element api="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAction.Namespace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAction.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAction.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAction.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAction.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAction.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAction.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAction.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAdvice">
      <topicdata group="api" />
      <apidata name="SamlAdvice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
          <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.Assertions" />
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAdvice">
      <topicdata name="SamlAdvice" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAdvice" />
      <apidata name="SamlAdvice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAdvice">
      <topicdata name="SamlAdvice" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAdvice" />
      <apidata name="SamlAdvice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.Assertions" />
        <element api="P:System.IdentityModel.Tokens.SamlAdvice.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <parameters>
        <parameter name="assertions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <parameters>
        <parameter name="references">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAdvice.#ctor" />
      <parameters>
        <parameter name="references">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="assertions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAdvice.AssertionIdReferences">
      <topicdata group="api" />
      <apidata name="AssertionIdReferences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionIdReferences" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAdvice.Assertions">
      <topicdata group="api" />
      <apidata name="Assertions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertions" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAdvice.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAdvice.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAssertion">
      <topicdata group="api" />
      <apidata name="SamlAssertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAssertion.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Advice" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Conditions" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Statements" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAssertion">
      <topicdata name="SamlAssertion" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertion" />
      <apidata name="SamlAssertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAssertion">
      <topicdata name="SamlAssertion" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertion" />
      <apidata name="SamlAssertion" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Advice" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Conditions" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Issuer" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertion.Statements" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAssertion.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.#ctor(System.String,System.String,System.DateTime,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAssertion.#ctor" />
      <parameters>
        <parameter name="assertionId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="issueInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="samlConditions">
          <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
        </parameter>
        <parameter name="samlAdvice">
          <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
        </parameter>
        <parameter name="samlStatements">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.Advice">
      <topicdata group="api" />
      <apidata name="Advice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Advice" />
      <setter name="set_Advice" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.AssertionId">
      <topicdata group="api" />
      <apidata name="AssertionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssertionId" />
      <setter name="set_AssertionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.CanWriteSourceData">
      <topicdata group="api" />
      <apidata name="CanWriteSourceData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanWriteSourceData" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.Conditions">
      <topicdata group="api" />
      <apidata name="Conditions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Conditions" />
      <setter name="set_Conditions" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.IssueInstant">
      <topicdata group="api" />
      <apidata name="IssueInstant" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssueInstant" />
      <setter name="set_IssueInstant" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.Issuer">
      <topicdata group="api" />
      <apidata name="Issuer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Issuer" />
      <setter name="set_Issuer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.MajorVersion">
      <topicdata group="api" />
      <apidata name="MajorVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MajorVersion" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.MinorVersion">
      <topicdata group="api" />
      <apidata name="MinorVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinorVersion" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.ReadSignature(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SamlSerializer)">
      <topicdata group="api" />
      <apidata name="ReadSignature" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.SigningCredentials">
      <topicdata group="api" />
      <apidata name="SigningCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SigningCredentials" />
      <setter name="set_SigningCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.SigningToken">
      <topicdata group="api" />
      <apidata name="SigningToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SigningToken" />
      <setter name="set_SigningToken" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertion.Statements">
      <topicdata group="api" />
      <apidata name="Statements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Statements" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.WriteSourceData(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteSourceData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertion.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="SamlAssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <topicdata name="SamlAssertionKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      <apidata name="SamlAssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause">
      <topicdata name="SamlAssertionKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      <apidata name="SamlAssertionKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="assertionId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="assertionId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="derivationNonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivationLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.AssertionId">
      <topicdata group="api" />
      <apidata name="AssertionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches(System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assertionId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAttribute">
      <topicdata group="api" />
      <apidata name="SamlAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)" />
          <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.Namespace" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAttribute">
      <topicdata name="SamlAttribute" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAttribute" />
      <apidata name="SamlAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAttribute">
      <topicdata name="SamlAttribute" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAttribute" />
      <apidata name="SamlAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.Namespace" />
        <element api="P:System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <parameters>
        <parameter name="claim">
          <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttribute.#ctor" />
      <parameters>
        <parameter name="attributeNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributeValues">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValues">
      <topicdata group="api" />
      <apidata name="AttributeValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeValues" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType">
      <topicdata group="api" />
      <apidata name="AttributeValueXsiType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttributeValueXsiType" />
      <setter name="set_AttributeValueXsiType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.ExtractClaims">
      <topicdata group="api" />
      <apidata name="ExtractClaims" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer">
      <topicdata group="api" />
      <apidata name="OriginalIssuer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OriginalIssuer" />
      <setter name="set_OriginalIssuer" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <topicdata group="api" />
      <apidata name="SamlAttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAttributeStatement.Attributes" />
        <element api="P:System.IdentityModel.Tokens.SamlAttributeStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <topicdata name="SamlAttributeStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAttributeStatement" />
      <apidata name="SamlAttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAttributeStatement">
      <topicdata name="SamlAttributeStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAttributeStatement" />
      <apidata name="SamlAttributeStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAttributeStatement.Attributes" />
        <element api="P:System.IdentityModel.Tokens.SamlAttributeStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAttributeStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <topicdata group="api" />
      <apidata name="AddClaimsToList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="claims">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttributeStatement.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAttributeStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAttributeStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <topicdata group="api" />
      <apidata name="SamlAudienceRestrictionCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor(System.Collections.Generic.IEnumerable{System.Uri})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences" />
        <element api="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <topicdata name="SamlAudienceRestrictionCondition" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      <apidata name="SamlAudienceRestrictionCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition">
      <topicdata name="SamlAudienceRestrictionCondition" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      <apidata name="SamlAudienceRestrictionCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences" />
        <element api="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor(System.Collections.Generic.IEnumerable{System.Uri})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.#ctor" />
      <parameters>
        <parameter name="audiences">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences">
      <topicdata group="api" />
      <apidata name="Audiences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Audiences" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Uri" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <topicdata group="api" />
      <apidata name="SamlAuthenticationClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationMethod" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthorityBindings" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.DnsAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.IPAddress" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <topicdata name="SamlAuthenticationClaimResource" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
      <apidata name="SamlAuthenticationClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource">
      <topicdata name="SamlAuthenticationClaimResource" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
      <apidata name="SamlAuthenticationClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationMethod" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthorityBindings" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.DnsAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.IPAddress" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor" />
      <parameters>
        <parameter name="authenticationInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="authenticationMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dnsAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ipAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor" />
      <parameters>
        <parameter name="authenticationInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="authenticationMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dnsAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ipAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorityBindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor(System.DateTime,System.String,System.String,System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.#ctor" />
      <parameters>
        <parameter name="authenticationInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="authenticationMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dnsAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ipAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorityBindings">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationInstant">
      <topicdata group="api" />
      <apidata name="AuthenticationInstant" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthenticationInstant" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthenticationMethod">
      <topicdata group="api" />
      <apidata name="AuthenticationMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthenticationMethod" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.AuthorityBindings">
      <topicdata group="api" />
      <apidata name="AuthorityBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthorityBindings" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.DnsAddress">
      <topicdata group="api" />
      <apidata name="DnsAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DnsAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationClaimResource.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IPAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationClaimResource" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <topicdata group="api" />
      <apidata name="SamlAuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.DateTime,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthorityBindings" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.ClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IPAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <topicdata name="SamlAuthenticationStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      <apidata name="SamlAuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthenticationStatement">
      <topicdata name="SamlAuthenticationStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      <apidata name="SamlAuthenticationStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthorityBindings" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.ClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IPAddress" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.DateTime,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.DateTime,System.String,System.String,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAuthorityBinding})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthenticationStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="authenticationMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationInstant">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="dnsAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ipAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorityBindings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <topicdata group="api" />
      <apidata name="AddClaimsToList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="claims">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationInstant">
      <topicdata group="api" />
      <apidata name="AuthenticationInstant" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationInstant" />
      <setter name="set_AuthenticationInstant" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthenticationMethod">
      <topicdata group="api" />
      <apidata name="AuthenticationMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationMethod" />
      <setter name="set_AuthenticationMethod" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.AuthorityBindings">
      <topicdata group="api" />
      <apidata name="AuthorityBindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthorityBindings" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.ClaimType">
      <topicdata group="api" />
      <apidata name="ClaimType" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.DnsAddress">
      <topicdata group="api" />
      <apidata name="DnsAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DnsAddress" />
      <setter name="set_DnsAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IPAddress">
      <topicdata group="api" />
      <apidata name="IPAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IPAddress" />
      <setter name="set_IPAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthenticationStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthenticationStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <topicdata group="api" />
      <apidata name="SamlAuthorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <topicdata name="SamlAuthorityBinding" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
      <apidata name="SamlAuthorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthorityBinding">
      <topicdata name="SamlAuthorityBinding" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
      <apidata name="SamlAuthorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor(System.Xml.XmlQualifiedName,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorityBinding.#ctor" />
      <parameters>
        <parameter name="authorityKind">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="location">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorityBinding.AuthorityKind">
      <topicdata group="api" />
      <apidata name="AuthorityKind" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthorityKind" />
      <setter name="set_AuthorityKind" />
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Binding">
      <topicdata group="api" />
      <apidata name="Binding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Binding" />
      <setter name="set_Binding" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorityBinding.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorityBinding.Location">
      <topicdata group="api" />
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Location" />
      <setter name="set_Location" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorityBinding.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <topicdata group="api" />
      <apidata name="SamlAuthorizationDecisionClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.#ctor(System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.AccessDecision" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionNamespace" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <topicdata name="SamlAuthorizationDecisionClaimResource" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
      <apidata name="SamlAuthorizationDecisionClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource">
      <topicdata name="SamlAuthorizationDecisionClaimResource" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
      <apidata name="SamlAuthorizationDecisionClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.AccessDecision" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionNamespace" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.#ctor(System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="accessDecision">
          <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
        </parameter>
        <parameter name="actionNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="actionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.AccessDecision">
      <topicdata group="api" />
      <apidata name="AccessDecision" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AccessDecision" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionName">
      <topicdata group="api" />
      <apidata name="ActionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.ActionNamespace">
      <topicdata group="api" />
      <apidata name="ActionNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActionNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource.Resource">
      <topicdata group="api" />
      <apidata name="Resource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Resource" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionClaimResource" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <topicdata group="api" />
      <apidata name="SamlAuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})" />
          <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <topicdata name="SamlAuthorizationDecisionStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      <apidata name="SamlAuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement">
      <topicdata name="SamlAuthorizationDecisionStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      <apidata name="SamlAuthorizationDecisionStatement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource" />
        <element api="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})" />
        <element api="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="accessDecision">
          <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
        </parameter>
        <parameter name="samlActions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor(System.IdentityModel.Tokens.SamlSubject,System.String,System.IdentityModel.Tokens.SamlAccessDecision,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAction},System.IdentityModel.Tokens.SamlEvidence)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="accessDecision">
          <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
        </parameter>
        <parameter name="samlActions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="samlEvidence">
          <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AccessDecision">
      <topicdata group="api" />
      <apidata name="AccessDecision" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AccessDecision" />
      <setter name="set_AccessDecision" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAccessDecision" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <topicdata group="api" />
      <apidata name="AddClaimsToList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="claims">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ClaimType">
      <topicdata group="api" />
      <apidata name="ClaimType" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Evidence">
      <topicdata group="api" />
      <apidata name="Evidence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Evidence" />
      <setter name="set_Evidence" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.Resource">
      <topicdata group="api" />
      <apidata name="Resource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Resource" />
      <setter name="set_Resource" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.SamlActions">
      <topicdata group="api" />
      <apidata name="SamlActions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SamlActions" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlCondition">
      <topicdata group="api" />
      <apidata name="SamlCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlCondition.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlCondition">
      <topicdata name="SamlCondition" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlCondition" />
      <apidata name="SamlCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlCondition">
      <topicdata name="SamlCondition" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlCondition" />
      <apidata name="SamlCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlConditions">
      <topicdata group="api" />
      <apidata name="SamlConditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)" />
          <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.Conditions" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlConditions">
      <topicdata name="SamlConditions" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlConditions" />
      <apidata name="SamlConditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlConditions">
      <topicdata name="SamlConditions" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlConditions" />
      <apidata name="SamlConditions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlConditions.Conditions" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.NotBefore" />
        <element api="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)" />
        <element api="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <parameters>
        <parameter name="notBefore">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="notOnOrAfter">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlCondition})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlConditions.#ctor" />
      <parameters>
        <parameter name="notBefore">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="notOnOrAfter">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="conditions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConditions.Conditions">
      <topicdata group="api" />
      <apidata name="Conditions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Conditions" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConditions.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConditions.NotBefore">
      <topicdata group="api" />
      <apidata name="NotBefore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotBefore" />
      <setter name="set_NotBefore" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConditions.NotOnOrAfter">
      <topicdata group="api" />
      <apidata name="NotOnOrAfter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotOnOrAfter" />
      <setter name="set_NotOnOrAfter" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlConditions.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlConstants">
      <topicdata group="api" />
      <apidata name="SamlConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.SamlConstants.Prefix" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.EmailName" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.EmailNamespace" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.HolderOfKey" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.Namespace" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.SenderVouches" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.UserName" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.UserNameNamespace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlConstants">
      <topicdata name="SamlConstants" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlConstants" />
      <apidata name="SamlConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlConstants.EmailName" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.EmailNamespace" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.HolderOfKey" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.Namespace" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.SenderVouches" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.UserName" />
        <element api="P:System.IdentityModel.Tokens.SamlConstants.UserNameNamespace" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.SamlConstants">
      <topicdata name="SamlConstants" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.SamlConstants" />
      <apidata name="SamlConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SamlConstants.Prefix" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.EmailName">
      <topicdata group="api" />
      <apidata name="EmailName" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EmailName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.EmailNamespace">
      <topicdata group="api" />
      <apidata name="EmailNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EmailNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.HolderOfKey">
      <topicdata group="api" />
      <apidata name="HolderOfKey" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HolderOfKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.MajorVersionValue">
      <topicdata group="api" />
      <apidata name="MajorVersionValue" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MajorVersionValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.MinorVersionValue">
      <topicdata group="api" />
      <apidata name="MinorVersionValue" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinorVersionValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlConstants.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>saml</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.SenderVouches">
      <topicdata group="api" />
      <apidata name="SenderVouches" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SenderVouches" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlConstants.UserNameNamespace">
      <topicdata group="api" />
      <apidata name="UserNameNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserNameNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlConstants" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <topicdata group="api" />
      <apidata name="SamlDoNotCacheCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <topicdata name="SamlDoNotCacheCondition" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
      <apidata name="SamlDoNotCacheCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlDoNotCacheCondition">
      <topicdata name="SamlDoNotCacheCondition" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
      <apidata name="SamlDoNotCacheCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlDoNotCacheCondition.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlCondition.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlDoNotCacheCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlCondition.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlEvidence">
      <topicdata group="api" />
      <apidata name="SamlEvidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
          <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" />
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlEvidence">
      <topicdata name="SamlEvidence" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlEvidence" />
      <apidata name="SamlEvidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlEvidence">
      <topicdata name="SamlEvidence" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlEvidence" />
      <apidata name="SamlEvidence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences" />
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.Assertions" />
        <element api="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <parameters>
        <parameter name="assertions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <parameters>
        <parameter name="assertionIdReferences">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlEvidence.#ctor" />
      <parameters>
        <parameter name="assertionIdReferences">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="assertions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences">
      <topicdata group="api" />
      <apidata name="AssertionIdReferences" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AssertionIdReferences" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlEvidence.Assertions">
      <topicdata group="api" />
      <apidata name="Assertions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertions" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <topicdata group="api" />
      <apidata name="SamlNameIdentifierClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <topicdata name="SamlNameIdentifierClaimResource" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
      <apidata name="SamlNameIdentifierClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.GetHashCode" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource">
      <topicdata name="SamlNameIdentifierClaimResource" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
      <apidata name="SamlNameIdentifierClaimResource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nameQualifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Format">
      <topicdata group="api" />
      <apidata name="Format" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Format" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource.NameQualifier">
      <topicdata group="api" />
      <apidata name="NameQualifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NameQualifier" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlNameIdentifierClaimResource" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="SamlSecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause.#ctor(System.IdentityModel.Tokens.SamlAssertion)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause.Assertion" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause">
      <topicdata name="SamlSecurityKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause" />
      <apidata name="SamlSecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause">
      <topicdata name="SamlSecurityKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause" />
      <apidata name="SamlSecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause.Assertion" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause.#ctor(System.IdentityModel.Tokens.SamlAssertion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause.Assertion">
      <topicdata group="api" />
      <apidata name="Assertion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertion" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSecurityToken">
      <topicdata group="api" />
      <apidata name="SamlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSecurityToken">
      <topicdata name="SamlSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityToken" />
      <apidata name="SamlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlSecurityToken">
      <topicdata name="SamlSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityToken" />
      <apidata name="SamlSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSecurityToken.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.#ctor(System.IdentityModel.Tokens.SamlAssertion)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSecurityToken.#ctor" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.Assertion">
      <topicdata group="api" />
      <apidata name="Assertion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assertion" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.SamlSecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.Initialize(System.IdentityModel.Tokens.SamlAssertion)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="SamlSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion" />
        <element api="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod" />
        <element api="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace" />
        <element api="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
      <topicdata name="SamlSecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" />
      <apidata name="SamlSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
      <topicdata name="SamlSecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" />
      <apidata name="SamlSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.SamlSecurityTokenHandler">
      <topicdata name="SamlSecurityTokenHandler" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" />
      <apidata name="SamlSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion" />
        <element api="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod" />
        <element api="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace" />
        <element api="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken">
      <topicdata name="CanReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken">
      <topicdata name="ReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken">
      <topicdata name="WriteToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor(System.IdentityModel.Tokens.SamlSecurityTokenRequirement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.#ctor" />
      <parameters>
        <parameter name="samlSecurityTokenRequirement">
          <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.AddDelegateToAttributes(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute},System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="AddDelegateToAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Assertion">
      <topicdata group="api" />
      <apidata name="Assertion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>urn:oasis:names:tc:SAML:1.0:assertion</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.BearerConfirmationMethod">
      <topicdata group="api" />
      <apidata name="BearerConfirmationMethod" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>urn:oasis:names:tc:SAML:1.0:cm:bearer</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanValidateToken">
      <topicdata group="api" />
      <apidata name="CanValidateToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanValidateToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CanWriteToken">
      <topicdata group="api" />
      <apidata name="CanWriteToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWriteToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CertificateValidator">
      <topicdata group="api" />
      <apidata name="CertificateValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidator" />
      <setter name="set_CertificateValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CollectAttributeValues(System.Collections.Generic.ICollection{System.IdentityModel.Tokens.SamlAttribute})">
      <topicdata group="api" />
      <apidata name="CollectAttributeValues" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAdvice(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateAdvice" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAssertion(System.String,System.IdentityModel.Tokens.SamlConditions,System.IdentityModel.Tokens.SamlAdvice,System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlStatement})">
      <topicdata group="api" />
      <apidata name="CreateAssertion" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="conditions">
          <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
        </parameter>
        <parameter name="advice">
          <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
        </parameter>
        <parameter name="statements">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttribute(System.Security.Claims.Claim,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="claim">
          <type api="T:System.Security.Claims.Claim" ref="true" />
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAttributeStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateAttributeStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateAuthenticationStatement(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.AuthenticationInformation,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateAuthenticationStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="authInfo">
          <type api="T:System.Security.Claims.AuthenticationInformation" ref="true" />
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateClaims(System.IdentityModel.Tokens.SamlSecurityToken)">
      <topicdata group="api" />
      <apidata name="CreateClaims" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlSecurityToken">
          <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateConditions(System.IdentityModel.Protocols.WSTrust.Lifetime,System.String,System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateConditions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenLifetime">
          <type api="T:System.IdentityModel.Protocols.WSTrust.Lifetime" ref="true" />
        </parameter>
        <parameter name="relyingPartyAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSamlSubject(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateSamlSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="attached">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateStatements(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateStatements" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateWindowsIdentity(System.String)">
      <topicdata group="api" />
      <apidata name="CreateWindowsIdentity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="upn">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.CreateXmlStringFromAttributes(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAttribute})">
      <topicdata group="api" />
      <apidata name="CreateXmlStringFromAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DenormalizeAuthenticationType(System.String)">
      <topicdata group="api" />
      <apidata name="DenormalizeAuthenticationType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="normalizedAuthenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="DetectReplayedToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.FindUpn(System.Security.Claims.ClaimsIdentity)">
      <topicdata group="api" />
      <apidata name="FindUpn" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="claimsIdentity">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetEncryptingCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="GetEncryptingCredentials" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetSigningCredentials(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="GetSigningCredentials" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenReplayCacheEntryExpirationTime(System.IdentityModel.Tokens.SamlSecurityToken)">
      <topicdata group="api" />
      <apidata name="GetTokenReplayCacheEntryExpirationTime" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.GetTokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="GetTokenTypeIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.KeyInfoSerializer">
      <topicdata group="api" />
      <apidata name="KeyInfoSerializer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyInfoSerializer" />
      <setter name="set_KeyInfoSerializer" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
      <topicdata group="api" />
      <apidata name="LoadCustomConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="customConfigElements">
          <type api="T:System.Xml.XmlNodeList" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>urn:oasis:names:tc:SAML:1.0</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.NormalizeAuthenticationType(System.String)">
      <topicdata group="api" />
      <apidata name="NormalizeAuthenticationType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="saml11AuthenticationMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAttributeStatement(System.IdentityModel.Tokens.SamlAttributeStatement,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessAttributeStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlStatement">
          <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthenticationStatement(System.IdentityModel.Tokens.SamlAuthenticationStatement,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessAuthenticationStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlStatement">
          <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessAuthorizationDecisionStatement(System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessAuthorizationDecisionStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlStatement">
          <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessSamlSubject(System.IdentityModel.Tokens.SamlSubject,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessSamlSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ProcessStatement(System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlStatement},System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="ProcessStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="statements">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAction(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAdvice(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAdvice" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAssertion(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAssertion" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttribute(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeStatement(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAttributeStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAttributeValue(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAttribute)">
      <topicdata group="api" />
      <apidata name="ReadAttributeValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAudienceRestrictionCondition(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAudienceRestrictionCondition" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthenticationStatement(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAuthenticationStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorityBinding(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAuthorityBinding" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadAuthorizationDecisionStatement(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadAuthorizationDecisionStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadCondition(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadCondition" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadConditions(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadConditions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadDoNotCacheCondition(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadDoNotCacheCondition" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadEvidence(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadEvidence" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSigningKeyInfo(System.Xml.XmlReader,System.IdentityModel.Tokens.SamlAssertion)">
      <topicdata group="api" />
      <apidata name="ReadSigningKeyInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadStatement(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubject(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadSubjectKeyInfo(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadSubjectKeyInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ResolveIssuerToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
        </parameter>
        <parameter name="issuerResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ResolveSubjectKeyIdentifier(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name="ResolveSubjectKeyIdentifier" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="subjectKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SamlSecurityTokenRequirement">
      <topicdata group="api" />
      <apidata name="SamlSecurityTokenRequirement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SamlSecurityTokenRequirement" />
      <setter name="set_SamlSecurityTokenRequirement" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.SetDelegateFromAttribute(System.IdentityModel.Tokens.SamlAttribute,System.Security.Claims.ClaimsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name="SetDelegateFromAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
        </parameter>
        <parameter name="issuer">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TokenType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.TryResolveIssuerToken(System.IdentityModel.Tokens.SamlAssertion,System.IdentityModel.Selectors.SecurityTokenResolver,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveIssuerToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
        </parameter>
        <parameter name="issuerResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SamlSecurityTokenHandler.UnspecifiedAuthenticationMethod">
      <topicdata group="api" />
      <apidata name="UnspecifiedAuthenticationMethod" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>urn:oasis:names:tc:SAML:1.0:am:unspecified</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateConditions(System.IdentityModel.Tokens.SamlConditions,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ValidateConditions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="conditions">
          <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
        </parameter>
        <parameter name="enforceAudienceRestriction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAction(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAction)">
      <topicdata group="api" />
      <apidata name="WriteAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.IdentityModel.Tokens.SamlAction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAdvice(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAdvice)">
      <topicdata group="api" />
      <apidata name="WriteAdvice" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="advice">
          <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAssertion(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAssertion)">
      <topicdata group="api" />
      <apidata name="WriteAssertion" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="assertion">
          <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttribute(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttribute)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAttributeStatement)">
      <topicdata group="api" />
      <apidata name="WriteAttributeStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="statement">
          <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAttributeValue(System.Xml.XmlWriter,System.String,System.IdentityModel.Tokens.SamlAttribute)">
      <topicdata group="api" />
      <apidata name="WriteAttributeValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAudienceRestrictionCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)">
      <topicdata group="api" />
      <apidata name="WriteAudienceRestrictionCondition" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthenticationStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthenticationStatement)">
      <topicdata group="api" />
      <apidata name="WriteAuthenticationStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="statement">
          <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorityBinding(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorityBinding)">
      <topicdata group="api" />
      <apidata name="WriteAuthorityBinding" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="authorityBinding">
          <type api="T:System.IdentityModel.Tokens.SamlAuthorityBinding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteAuthorizationDecisionStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement)">
      <topicdata group="api" />
      <apidata name="WriteAuthorizationDecisionStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="statement">
          <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlCondition)">
      <topicdata group="api" />
      <apidata name="WriteCondition" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteConditions(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlConditions)">
      <topicdata group="api" />
      <apidata name="WriteConditions" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="conditions">
          <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteDoNotCacheCondition(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlDoNotCacheCondition)">
      <topicdata group="api" />
      <apidata name="WriteDoNotCacheCondition" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="condition">
          <type api="T:System.IdentityModel.Tokens.SamlDoNotCacheCondition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteEvidence(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlEvidence)">
      <topicdata group="api" />
      <apidata name="WriteEvidence" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="evidence">
          <type api="T:System.IdentityModel.Tokens.SamlEvidence" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSigningKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name="WriteSigningKeyInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="signingKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteStatement(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlStatement)">
      <topicdata group="api" />
      <apidata name="WriteStatement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="statement">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubject(System.Xml.XmlWriter,System.IdentityModel.Tokens.SamlSubject)">
      <topicdata group="api" />
      <apidata name="WriteSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="subject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteSubjectKeyInfo(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name="WriteSubjectKeyInfo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="subjectSki">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SamlSecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement">
      <topicdata group="api" />
      <apidata name="SamlSecurityTokenRequirement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor(System.Xml.XmlElement)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.ShouldEnforceAudienceRestriction(System.IdentityModel.Selectors.AudienceUriMode,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.ValidateAudienceRestriction(System.Collections.Generic.IList{System.Uri},System.Collections.Generic.IList{System.Uri})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.MapToWindows" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.NameClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.RoleClaimType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement">
      <topicdata name="SamlSecurityTokenRequirement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" />
      <apidata name="SamlSecurityTokenRequirement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.ShouldEnforceAudienceRestriction(System.IdentityModel.Selectors.AudienceUriMode,System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.ValidateAudienceRestriction(System.Collections.Generic.IList{System.Uri},System.Collections.Generic.IList{System.Uri})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement">
      <topicdata name="SamlSecurityTokenRequirement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" />
      <apidata name="SamlSecurityTokenRequirement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.MapToWindows" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.NameClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.RoleClaimType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor(System.Xml.XmlElement)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor(System.Xml.XmlElement)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.#ctor" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.CertificateValidator">
      <topicdata group="api" />
      <apidata name="CertificateValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidator" />
      <setter name="set_CertificateValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.MapToWindows">
      <topicdata group="api" />
      <apidata name="MapToWindows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MapToWindows" />
      <setter name="set_MapToWindows" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.NameClaimType">
      <topicdata group="api" />
      <apidata name="NameClaimType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NameClaimType" />
      <setter name="set_NameClaimType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.RoleClaimType">
      <topicdata group="api" />
      <apidata name="RoleClaimType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RoleClaimType" />
      <setter name="set_RoleClaimType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.ShouldEnforceAudienceRestriction(System.IdentityModel.Selectors.AudienceUriMode,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ShouldEnforceAudienceRestriction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="audienceUriMode">
          <type api="T:System.IdentityModel.Selectors.AudienceUriMode" ref="false" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSecurityTokenRequirement.ValidateAudienceRestriction(System.Collections.Generic.IList{System.Uri},System.Collections.Generic.IList{System.Uri})">
      <topicdata group="api" />
      <apidata name="ValidateAudienceRestriction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="allowedAudienceUris">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tokenAudiences">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Uri" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenRequirement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSerializer">
      <topicdata group="api" />
      <apidata name="SamlSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSerializer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSerializer">
      <topicdata name="SamlSerializer" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSerializer" />
      <apidata name="SamlSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSerializer.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadAdvice(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadAdvice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAdvice" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadAssertion(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadAssertion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAssertion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadAttribute(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadCondition(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadCondition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlCondition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadConditions(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadConditions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlConditions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.LoadStatement(System.Xml.XmlDictionaryReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="LoadStatement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.PopulateDictionary(System.Xml.IXmlDictionary)">
      <topicdata group="api" />
      <apidata name="PopulateDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Xml.IXmlDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSerializer.WriteToken(System.IdentityModel.Tokens.SamlSecurityToken,System.Xml.XmlWriter,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlStatement">
      <topicdata group="api" />
      <apidata name="SamlStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlStatement">
      <topicdata name="SamlStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlStatement" />
      <apidata name="SamlStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlStatement">
      <topicdata name="SamlStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlStatement" />
      <apidata name="SamlStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <topicdata group="api" />
      <apidata name="CreatePolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="issuer">
          <type api="T:System.IdentityModel.Claims.ClaimSet" ref="true" />
        </parameter>
        <parameter name="samlAuthenticator">
          <type api="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSubject">
      <topicdata group="api" />
      <apidata name="SamlSubject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSubject.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ExtractClaims" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ExtractSubjectKeyClaimSet(System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.Crypto" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSubject">
      <topicdata name="SamlSubject" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSubject" />
      <apidata name="SamlSubject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSubject.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ExtractClaims" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ExtractSubjectKeyClaimSet(System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlSubject">
      <topicdata name="SamlSubject" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlSubject" />
      <apidata name="SamlSubject" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SamlSubject.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.Crypto" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.Name" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameClaimType" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameFormat" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier" />
        <element api="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor" />
      <parameters>
        <parameter name="nameFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nameQualifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubject.#ctor" />
      <parameters>
        <parameter name="nameFormat">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nameQualifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="confirmations">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="confirmationData">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="securityKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.ConfirmationMethods">
      <topicdata group="api" />
      <apidata name="ConfirmationMethods" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConfirmationMethods" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.Crypto">
      <topicdata group="api" />
      <apidata name="Crypto" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Crypto" />
      <setter name="set_Crypto" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.ExtractClaims">
      <topicdata group="api" />
      <apidata name="ExtractClaims" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.ExtractSubjectKeyClaimSet(System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <topicdata group="api" />
      <apidata name="ExtractSubjectKeyClaimSet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="samlAuthenticator">
          <type api="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Claims.ClaimSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.KeyIdentifier">
      <topicdata group="api" />
      <apidata name="KeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyIdentifier" />
      <setter name="set_KeyIdentifier" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.NameClaimType">
      <topicdata group="api" />
      <apidata name="NameClaimType" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NameClaimType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.NameFormat">
      <topicdata group="api" />
      <apidata name="NameFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NameFormat" />
      <setter name="set_NameFormat" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.NameQualifier">
      <topicdata group="api" />
      <apidata name="NameQualifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NameQualifier" />
      <setter name="set_NameQualifier" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlDictionaryReader" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
        <parameter name="outOfBandTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubject.SubjectConfirmationData">
      <topicdata group="api" />
      <apidata name="SubjectConfirmationData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SubjectConfirmationData" />
      <setter name="set_SubjectConfirmationData" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubject.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlDictionaryWriter" ref="true" />
        </parameter>
        <parameter name="samlSerializer">
          <type api="T:System.IdentityModel.Tokens.SamlSerializer" ref="true" />
        </parameter>
        <parameter name="keyInfoSerializer">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenSerializer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <topicdata group="api" />
      <apidata name="SamlSubjectStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.SamlAttributeStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlAuthenticationStatement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="Overload:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <topicdata name="SamlSubjectStatement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
      <apidata name="SamlSubjectStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlStatement.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SamlStatement.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SamlSubjectStatement">
      <topicdata name="SamlSubjectStatement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
      <apidata name="SamlSubjectStatement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor(System.IdentityModel.Tokens.SamlSubject)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SamlSubjectStatement.#ctor" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.AddClaimsToList(System.Collections.Generic.IList{System.IdentityModel.Claims.Claim})">
      <topicdata group="api" />
      <apidata name="AddClaimsToList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="claims">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Claims.Claim" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
      <topicdata group="api" />
      <apidata name="CreatePolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.CreatePolicy(System.IdentityModel.Claims.ClaimSet,System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator)">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="issuer">
          <type api="T:System.IdentityModel.Claims.ClaimSet" ref="true" />
        </parameter>
        <parameter name="samlAuthenticator">
          <type api="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubjectStatement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SamlStatement.IsReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SamlStatement.MakeReadOnly">
          <type api="T:System.IdentityModel.Tokens.SamlStatement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SamlSubjectStatement.SamlSubject">
      <topicdata group="api" />
      <apidata name="SamlSubject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SamlSubject" />
      <setter name="set_SamlSubject" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SamlSubjectStatement.SetSubject(System.IdentityModel.Tokens.SamlSubject)">
      <topicdata group="api" />
      <apidata name="SetSubject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="samlSubject">
          <type api="T:System.IdentityModel.Tokens.SamlSubject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SamlSubjectStatement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityAlgorithms">
      <topicdata group="api" />
      <apidata name="SecurityAlgorithms" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.DesEncryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14n" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14nWithComments" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha256Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivationDec2005" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Ripemd160Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha1Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha256Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha512Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.StrTransform" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TlsSspiKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.WindowsSspiKeyWrap" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.SecurityAlgorithms">
      <topicdata name="SecurityAlgorithms" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.SecurityAlgorithms" />
      <apidata name="SecurityAlgorithms" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.DesEncryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14n" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14nWithComments" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha256Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivationDec2005" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Ripemd160Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha1Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha256Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha512Digest" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.StrTransform" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TlsSspiKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap" />
        <element api="F:System.IdentityModel.Tokens.SecurityAlgorithms.WindowsSspiKeyWrap" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption">
      <topicdata group="api" />
      <apidata name="Aes128Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#aes128-cbc</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap">
      <topicdata group="api" />
      <apidata name="Aes128KeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#kw-aes128</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption">
      <topicdata group="api" />
      <apidata name="Aes192Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#aes192-cbc</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap">
      <topicdata group="api" />
      <apidata name="Aes192KeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#kw-aes192</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption">
      <topicdata group="api" />
      <apidata name="Aes256Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#aes256-cbc</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap">
      <topicdata group="api" />
      <apidata name="Aes256KeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#kw-aes256</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.DesEncryption">
      <topicdata group="api" />
      <apidata name="DesEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#des-cbc</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature">
      <topicdata group="api" />
      <apidata name="DsaSha1Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2000/09/xmldsig#dsa-sha1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14n">
      <topicdata group="api" />
      <apidata name="ExclusiveC14n" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/10/xml-exc-c14n#</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.ExclusiveC14nWithComments">
      <topicdata group="api" />
      <apidata name="ExclusiveC14nWithComments" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/10/xml-exc-c14n#WithComments</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature">
      <topicdata group="api" />
      <apidata name="HmacSha1Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2000/09/xmldsig#hmac-sha1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha256Signature">
      <topicdata group="api" />
      <apidata name="HmacSha256Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmldsig-more#hmac-sha256</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation">
      <topicdata group="api" />
      <apidata name="Psha1KeyDerivation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.xmlsoap.org/ws/2005/02/sc/dk/p_sha1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivationDec2005">
      <topicdata group="api" />
      <apidata name="Psha1KeyDerivationDec2005" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/dk/p_sha1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Ripemd160Digest">
      <topicdata group="api" />
      <apidata name="Ripemd160Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#ripemd160</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap">
      <topicdata group="api" />
      <apidata name="RsaOaepKeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature">
      <topicdata group="api" />
      <apidata name="RsaSha1Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2000/09/xmldsig#rsa-sha1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature">
      <topicdata group="api" />
      <apidata name="RsaSha256Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmldsig-more#rsa-sha256</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap">
      <topicdata group="api" />
      <apidata name="RsaV15KeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#rsa-1_5</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha1Digest">
      <topicdata group="api" />
      <apidata name="Sha1Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2000/09/xmldsig#sha1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha256Digest">
      <topicdata group="api" />
      <apidata name="Sha256Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#sha256</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.Sha512Digest">
      <topicdata group="api" />
      <apidata name="Sha512Digest" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#sha512</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.StrTransform">
      <topicdata group="api" />
      <apidata name="StrTransform" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#STR-Transform</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.TlsSspiKeyWrap">
      <topicdata group="api" />
      <apidata name="TlsSspiKeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.xmlsoap.org/2005/02/trust/tlsnego#TLS_Wrap</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption">
      <topicdata group="api" />
      <apidata name="TripleDesEncryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#tripledes-cbc</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap">
      <topicdata group="api" />
      <apidata name="TripleDesKeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://www.w3.org/2001/04/xmlenc#kw-tripledes</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityAlgorithms.WindowsSspiKeyWrap">
      <topicdata group="api" />
      <apidata name="WindowsSspiKeyWrap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>http://schemas.xmlsoap.org/2005/02/trust/spnego#GSS_Wrap</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityAlgorithms" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKey">
      <topicdata group="api" />
      <apidata name="SecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKey.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityKey">
      <topicdata name="SecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityKey" />
      <apidata name="SecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityKey">
      <topicdata name="SecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityKey" />
      <apidata name="SecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSupportedAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyElement">
      <topicdata group="api" />
      <apidata name="SecurityKeyElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SecurityKeyElement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)" />
          <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyElement.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityKeyElement">
      <topicdata name="SecurityKeyElement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyElement" />
      <apidata name="SecurityKeyElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityKeyElement">
      <topicdata name="SecurityKeyElement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyElement" />
      <apidata name="SecurityKeyElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyElement.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityKeyElement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyElement.#ctor" />
      <parameters>
        <parameter name="securityKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="securityTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyElement.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyElement.#ctor" />
      <parameters>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="securityTokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyElement.DecryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyElement.EncryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyElement.IsAsymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSupportedAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSupportedAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyElement.IsSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyElement.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <topicdata group="api" />
      <apidata name="SecurityKeyIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <topicdata name="SecurityKeyIdentifier" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      <apidata name="SecurityKeyIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityKeyIdentifier">
      <topicdata name="SecurityKeyIdentifier" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      <apidata name="SecurityKeyIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor" />
      <parameters>
        <parameter name="clauses" params="true">
          <arrayOf rank="1">
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="clause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey">
      <topicdata group="api" />
      <apidata name="CanCreateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanCreateKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey">
      <topicdata group="api" />
      <apidata name="CreateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TClause">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="TClause" index="0" api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly">
      <topicdata group="api" />
      <apidata name="MakeReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)">
      <topicdata group="api" />
      <apidata name="TryFind" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TClause">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="clause" out="true">
          <referenceTo>
            <template name="TClause" index="0" api="M:System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.KeyNameIdentifierClause" ref="true" />
          <type api="T:System.ServiceModel.Security.SecurityContextKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.EmptySecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.RsaKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.Saml2AssertionKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.Saml2SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlAssertionKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlSecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <topicdata name="SecurityKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      <apidata name="SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause">
      <topicdata name="SecurityKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      <apidata name="SecurityKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="clauseType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="clauseType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
      <topicdata group="api" />
      <apidata name="CanCreateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanCreateKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType">
      <topicdata group="api" />
      <apidata name="ClauseType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClauseType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
      <topicdata group="api" />
      <apidata name="CreateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength">
      <topicdata group="api" />
      <apidata name="DerivationLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DerivationLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce">
      <topicdata group="api" />
      <apidata name="GetDerivationNonce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer">
      <topicdata group="api" />
      <apidata name="SecurityKeyIdentifierClauseSerializer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer">
      <topicdata name="SecurityKeyIdentifierClauseSerializer" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" />
      <apidata name="SecurityKeyIdentifierClauseSerializer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="CanWriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="WriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyType">
      <topicdata group="api" />
      <apidata name="SecurityKeyType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />
        <element api="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey" />
        <element api="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyType.AsymmetricKey">
      <topicdata group="api" notopic="" />
      <apidata name="AsymmetricKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyType.BearerKey">
      <topicdata group="api" notopic="" />
      <apidata name="BearerKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey">
      <topicdata group="api" notopic="" />
      <apidata name="SymmetricKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyType" ref="false" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityKeyUsage">
      <topicdata group="api" />
      <apidata name="SecurityKeyUsage" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityKeyUsage.Exchange" />
        <element api="F:System.IdentityModel.Tokens.SecurityKeyUsage.Signature" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyUsage.Exchange">
      <topicdata group="api" notopic="" />
      <apidata name="Exchange" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyUsage" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyUsage" ref="false" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityKeyUsage.Signature">
      <topicdata group="api" notopic="" />
      <apidata name="Signature" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyUsage" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityKeyUsage" ref="false" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityToken">
      <topicdata group="api" />
      <apidata name="SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Security.Tokens.BinarySecretSecurityToken" ref="true" />
          <type api="T:System.ServiceModel.Security.Tokens.WrappedKeySecurityToken" ref="true" />
          <type api="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" ref="true" />
          <type api="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.EncryptedSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.GenericXmlSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.KerberosRequestorSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.RsaSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.Saml2SecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityToken">
      <topicdata name="SecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityToken" />
      <apidata name="SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityToken">
      <topicdata name="SecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityToken" />
      <apidata name="SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="ResolveKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenDescriptor">
      <topicdata group="api" />
      <apidata name="SecurityTokenDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenDescriptor">
      <topicdata name="SecurityTokenDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      <apidata name="SecurityTokenDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor" />
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenDescriptor">
      <topicdata name="SecurityTokenDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      <apidata name="SecurityTokenDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims">
      <topicdata name="AddAuthenticationClaims" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddAuthenticationClaims" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String)">
      <topicdata group="api" />
      <apidata name="AddAuthenticationClaims" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="authType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims(System.String,System.DateTime)">
      <topicdata group="api" />
      <apidata name="AddAuthenticationClaims" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenDescriptor.AddAuthenticationClaims" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="authType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="time">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.AppliesToAddress">
      <topicdata group="api" />
      <apidata name="AppliesToAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AppliesToAddress" />
      <setter name="set_AppliesToAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
      <topicdata group="api" />
      <apidata name="ApplyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="response">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.AttachedReference">
      <topicdata group="api" />
      <apidata name="AttachedReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttachedReference" />
      <setter name="set_AttachedReference" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.AuthenticationInfo">
      <topicdata group="api" />
      <apidata name="AuthenticationInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationInfo" />
      <setter name="set_AuthenticationInfo" />
      <returns>
        <type api="T:System.Security.Claims.AuthenticationInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.EncryptingCredentials">
      <topicdata group="api" />
      <apidata name="EncryptingCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EncryptingCredentials" />
      <setter name="set_EncryptingCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Lifetime">
      <topicdata group="api" />
      <apidata name="Lifetime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Lifetime" />
      <setter name="set_Lifetime" />
      <returns>
        <type api="T:System.IdentityModel.Protocols.WSTrust.Lifetime" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Proof">
      <topicdata group="api" />
      <apidata name="Proof" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Proof" />
      <setter name="set_Proof" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.ReplyToAddress">
      <topicdata group="api" />
      <apidata name="ReplyToAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReplyToAddress" />
      <setter name="set_ReplyToAddress" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.SigningCredentials">
      <topicdata group="api" />
      <apidata name="SigningCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SigningCredentials" />
      <setter name="set_SigningCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Subject">
      <topicdata group="api" />
      <apidata name="Subject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Subject" />
      <setter name="set_Subject" />
      <returns>
        <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.Token">
      <topicdata group="api" />
      <apidata name="Token" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Token" />
      <setter name="set_Token" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenIssuerName">
      <topicdata group="api" />
      <apidata name="TokenIssuerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TokenIssuerName" />
      <setter name="set_TokenIssuerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TokenType" />
      <setter name="set_TokenType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenDescriptor.UnattachedReference">
      <topicdata group="api" />
      <apidata name="UnattachedReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UnattachedReference" />
      <setter name="set_UnattachedReference" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenElement">
      <topicdata group="api" />
      <apidata name="SecurityTokenElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenElement.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenElement">
      <topicdata name="SecurityTokenElement" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenElement" />
      <apidata name="SecurityTokenElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenElement">
      <topicdata name="SecurityTokenElement" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenElement" />
      <apidata name="SecurityTokenElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenElement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenElement.#ctor" />
      <parameters>
        <parameter name="securityToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenElement.#ctor(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenElement.#ctor" />
      <parameters>
        <parameter name="securityTokenXml">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
        <parameter name="securityTokenHandlers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenElement.GetIdentities">
      <topicdata group="api" />
      <apidata name="GetIdentities" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenElement.GetSecurityToken">
      <topicdata group="api" />
      <apidata name="GetSecurityToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenElement.ReadSecurityToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)">
      <topicdata group="api" />
      <apidata name="ReadSecurityToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="securityTokenXml">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
        <parameter name="securityTokenHandlers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenElement.SecurityTokenXml">
      <topicdata group="api" />
      <apidata name="SecurityTokenXml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityTokenXml" />
      <returns>
        <type api="T:System.Xml.XmlElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenElement.ValidateToken(System.Xml.XmlElement,System.IdentityModel.Tokens.SecurityTokenHandlerCollection)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="securityTokenXml">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
        <parameter name="securityTokenHandlers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenException">
      <topicdata group="api" />
      <apidata name="SecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.SignatureVerificationFailedException" ref="true" />
          <type api="T:System.IdentityModel.Tokens.EncryptedTokenDecryptionFailedException" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenException">
      <topicdata name="SecurityTokenException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenException" />
      <apidata name="SecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenException">
      <topicdata name="SecurityTokenException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenException" />
      <apidata name="SecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Tokens.SecurityTokenException">
      <topicdata name="SecurityTokenException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenException" />
      <apidata name="SecurityTokenException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenExpiredException">
      <topicdata group="api" />
      <apidata name="SecurityTokenExpiredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenExpiredException">
      <topicdata name="SecurityTokenExpiredException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" />
      <apidata name="SecurityTokenExpiredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenExpiredException">
      <topicdata name="SecurityTokenExpiredException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" />
      <apidata name="SecurityTokenExpiredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Tokens.SecurityTokenExpiredException">
      <topicdata name="SecurityTokenExpiredException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" />
      <apidata name="SecurityTokenExpiredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenExpiredException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.EncryptedSecurityTokenHandler" ref="true" />
          <type api="T:System.IdentityModel.Tokens.KerberosSecurityTokenHandler" ref="true" />
          <type api="T:System.IdentityModel.Tokens.RsaSecurityTokenHandler" ref="true" />
          <type api="T:System.IdentityModel.Tokens.Saml2SecurityTokenHandler" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SamlSecurityTokenHandler" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
          <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
          <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenHandler">
      <topicdata name="SecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      <apidata name="SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenHandler">
      <topicdata name="SecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      <apidata name="SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken">
      <topicdata name="CanReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken">
      <topicdata name="ReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken">
      <topicdata name="WriteToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
      <topicdata group="api" />
      <apidata name="CanValidateToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanValidateToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="CanWriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
      <topicdata group="api" />
      <apidata name="CanWriteToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanWriteToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection">
      <topicdata group="api" />
      <apidata name="ContainingCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContainingCollection" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateSecurityTokenReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="attached">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="DetectReplayedToken" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="GetTokenTypeIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
      <topicdata group="api" />
      <apidata name="LoadCustomConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="nodelist">
          <type api="T:System.Xml.XmlNodeList" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="tokenString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="tokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TokenType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)">
      <topicdata group="api" />
      <apidata name="TraceTokenValidationFailure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="errorMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="TraceTokenValidationSuccess" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="WriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection">
      <topicdata group="api" />
      <apidata name="SecurityTokenHandlerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item">
          <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
          <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)" />
          <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection">
      <topicdata name="SecurityTokenHandlerCollection" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" />
      <apidata name="SecurityTokenHandlerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection">
      <topicdata name="SecurityTokenHandlerCollection" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" />
      <apidata name="SecurityTokenHandlerCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item">
          <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
          <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)" />
          <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)" />
        </element>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken">
      <topicdata name="CanReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection">
      <topicdata name="CreateDefaultSecurityTokenHandlerCollection" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateDefaultSecurityTokenHandlerCollection" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken">
      <topicdata name="ReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken">
      <topicdata name="WriteToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor" />
      <parameters>
        <parameter name="handlers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SecurityTokenHandler},System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor" />
      <parameters>
        <parameter name="handlers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="configuration">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.#ctor" />
      <parameters>
        <parameter name="configuration">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.AddOrReplace(System.IdentityModel.Tokens.SecurityTokenHandler)">
      <topicdata group="api" />
      <apidata name="AddOrReplace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierClauseCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.String)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tokenString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanReadToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CanWriteToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="CanWriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ClearItems">
      <topicdata group="api" />
      <apidata name="ClearItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.ClearItems">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Configuration" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection">
      <topicdata group="api" />
      <apidata name="CreateDefaultSecurityTokenHandlerCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection(System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration)">
      <topicdata group="api" />
      <apidata name="CreateDefaultSecurityTokenHandlerCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateDefaultSecurityTokenHandlerCollection" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="configuration">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.InsertItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="tokenTypeIdentifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item(System.Type)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="tokenType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierClauseCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.String)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tokenString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ReadToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.RemoveItem(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.SetItem(System.Int32,System.IdentityModel.Tokens.SecurityTokenHandler)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="TokenTypeIdentifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TokenTypeIdentifiers" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.TokenTypes">
      <topicdata group="api" />
      <apidata name="TokenTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TokenTypes" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="WriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="WriteKeyIdentifierClauseCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SecurityTokenHandlerCollection.WriteToken" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager">
      <topicdata group="api" />
      <apidata name="SecurityTokenHandlerCollectionManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager">
      <topicdata name="SecurityTokenHandlerCollectionManager" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" />
      <apidata name="SecurityTokenHandlerCollectionManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager">
      <topicdata name="SecurityTokenHandlerCollectionManager" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" />
      <apidata name="SecurityTokenHandlerCollectionManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ContainsKey(System.String)">
      <topicdata group="api" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="usage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateDefaultSecurityTokenHandlerCollectionManager">
      <topicdata group="api" />
      <apidata name="CreateDefaultSecurityTokenHandlerCollectionManager" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.CreateEmptySecurityTokenHandlerCollectionManager">
      <topicdata group="api" />
      <apidata name="CreateEmptySecurityTokenHandlerCollectionManager" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="usage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.SecurityTokenHandlerCollections">
      <topicdata group="api" />
      <apidata name="SecurityTokenHandlerCollections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityTokenHandlerCollections" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollection" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.ServiceName">
      <topicdata group="api" />
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage">
      <topicdata group="api" />
      <apidata name="Usage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage.ActAs" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage.Default" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage.OnBehalfOf" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage">
      <topicdata name="Usage" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage" />
      <apidata name="Usage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage.ActAs" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage.Default" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage.OnBehalfOf" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage.ActAs">
      <topicdata group="api" />
      <apidata name="ActAs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>ActAs</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage" ref="true">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage" ref="true">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
        </type>
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage.OnBehalfOf">
      <topicdata group="api" />
      <apidata name="OnBehalfOf" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>OnBehalfOf</value>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager.Usage" ref="true">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerCollectionManager" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration">
      <topicdata group="api" />
      <apidata name="SecurityTokenHandlerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultCertificateValidationMode" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultCertificateValidator" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultDetectReplayedTokens" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultIssuerNameRegistry" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultIssuerTokenResolver" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultMaxClockSkew" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultRevocationMode" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultSaveBootstrapContext" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultTokenReplayCacheExpirationPeriod" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultTrustedStoreLocation" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.CertificateValidationMode" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DetectReplayedTokens" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerTokenResolver" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.MaxClockSkew" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.RevocationMode" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCacheExpirationPeriod" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration">
      <topicdata name="SecurityTokenHandlerConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />
      <apidata name="SecurityTokenHandlerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration">
      <topicdata name="SecurityTokenHandlerConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />
      <apidata name="SecurityTokenHandlerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.CertificateValidationMode" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DetectReplayedTokens" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerTokenResolver" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.MaxClockSkew" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.RevocationMode" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCacheExpirationPeriod" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration">
      <topicdata name="SecurityTokenHandlerConfiguration" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />
      <apidata name="SecurityTokenHandlerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.#ctor" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultCertificateValidationMode" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultCertificateValidator" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultDetectReplayedTokens" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultIssuerNameRegistry" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultIssuerTokenResolver" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultMaxClockSkew" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultRevocationMode" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultSaveBootstrapContext" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultTokenReplayCacheExpirationPeriod" />
        <element api="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultTrustedStoreLocation" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.AudienceRestriction">
      <topicdata group="api" />
      <apidata name="AudienceRestriction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AudienceRestriction" />
      <setter name="set_AudienceRestriction" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.AudienceRestriction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.Caches">
      <topicdata group="api" />
      <apidata name="Caches" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Caches" />
      <setter name="set_Caches" />
      <returns>
        <type api="T:System.IdentityModel.Configuration.IdentityModelCaches" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.CertificateValidationMode">
      <topicdata group="api" />
      <apidata name="CertificateValidationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidationMode" />
      <setter name="set_CertificateValidationMode" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.CertificateValidator">
      <topicdata group="api" />
      <apidata name="CertificateValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidator" />
      <setter name="set_CertificateValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultCertificateValidationMode">
      <topicdata group="api" />
      <apidata name="DefaultCertificateValidationMode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Security.X509CertificateValidationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultCertificateValidator">
      <topicdata group="api" />
      <apidata name="DefaultCertificateValidator" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultDetectReplayedTokens">
      <topicdata group="api" />
      <apidata name="DefaultDetectReplayedTokens" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultIssuerNameRegistry">
      <topicdata group="api" />
      <apidata name="DefaultIssuerNameRegistry" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultIssuerTokenResolver">
      <topicdata group="api" />
      <apidata name="DefaultIssuerTokenResolver" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultMaxClockSkew">
      <topicdata group="api" />
      <apidata name="DefaultMaxClockSkew" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultRevocationMode">
      <topicdata group="api" />
      <apidata name="DefaultRevocationMode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultSaveBootstrapContext">
      <topicdata group="api" />
      <apidata name="DefaultSaveBootstrapContext" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultTokenReplayCacheExpirationPeriod">
      <topicdata group="api" />
      <apidata name="DefaultTokenReplayCacheExpirationPeriod" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DefaultTrustedStoreLocation">
      <topicdata group="api" />
      <apidata name="DefaultTrustedStoreLocation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.DetectReplayedTokens">
      <topicdata group="api" />
      <apidata name="DetectReplayedTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DetectReplayedTokens" />
      <setter name="set_DetectReplayedTokens" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerNameRegistry">
      <topicdata group="api" />
      <apidata name="IssuerNameRegistry" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssuerNameRegistry" />
      <setter name="set_IssuerNameRegistry" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.IssuerNameRegistry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.IssuerTokenResolver">
      <topicdata group="api" />
      <apidata name="IssuerTokenResolver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IssuerTokenResolver" />
      <setter name="set_IssuerTokenResolver" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.MaxClockSkew">
      <topicdata group="api" />
      <apidata name="MaxClockSkew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxClockSkew" />
      <setter name="set_MaxClockSkew" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.RevocationMode">
      <topicdata group="api" />
      <apidata name="RevocationMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RevocationMode" />
      <setter name="set_RevocationMode" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509RevocationMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.SaveBootstrapContext">
      <topicdata group="api" />
      <apidata name="SaveBootstrapContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SaveBootstrapContext" />
      <setter name="set_SaveBootstrapContext" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.ServiceTokenResolver">
      <topicdata group="api" />
      <apidata name="ServiceTokenResolver" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceTokenResolver" />
      <setter name="set_ServiceTokenResolver" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TokenReplayCacheExpirationPeriod">
      <topicdata group="api" />
      <apidata name="TokenReplayCacheExpirationPeriod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TokenReplayCacheExpirationPeriod" />
      <setter name="set_TokenReplayCacheExpirationPeriod" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration.TrustedStoreLocation">
      <topicdata group="api" />
      <apidata name="TrustedStoreLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrustedStoreLocation" />
      <setter name="set_TrustedStoreLocation" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException">
      <topicdata group="api" />
      <apidata name="SecurityTokenNotYetValidException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException">
      <topicdata name="SecurityTokenNotYetValidException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" />
      <apidata name="SecurityTokenNotYetValidException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException">
      <topicdata name="SecurityTokenNotYetValidException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" />
      <apidata name="SecurityTokenNotYetValidException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException">
      <topicdata name="SecurityTokenNotYetValidException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" />
      <apidata name="SecurityTokenNotYetValidException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenNotYetValidException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException">
      <topicdata group="api" />
      <apidata name="SecurityTokenReplayDetectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException">
      <topicdata name="SecurityTokenReplayDetectedException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" />
      <apidata name="SecurityTokenReplayDetectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException">
      <topicdata name="SecurityTokenReplayDetectedException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" />
      <apidata name="SecurityTokenReplayDetectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException">
      <topicdata name="SecurityTokenReplayDetectedException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" />
      <apidata name="SecurityTokenReplayDetectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenTypes">
      <topicdata group="api" />
      <apidata name="SecurityTokenTypes" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Saml" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.UserName" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenTypes">
      <topicdata name="SecurityTokenTypes" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenTypes" />
      <apidata name="SecurityTokenTypes" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.Saml" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.UserName" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.Kerberos">
      <topicdata group="api" />
      <apidata name="Kerberos" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Kerberos" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.Rsa">
      <topicdata group="api" />
      <apidata name="Rsa" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Rsa" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.Saml">
      <topicdata group="api" />
      <apidata name="Saml" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Saml" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate">
      <topicdata group="api" />
      <apidata name="X509Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_X509Certificate" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenTypes" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <topicdata group="api" />
      <apidata name="SecurityTokenValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.AudienceUriValidationFailedException" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityTokenExpiredException" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityTokenNotYetValidException" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityTokenReplayDetectedException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <topicdata name="SecurityTokenValidationException" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      <apidata name="SecurityTokenValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <topicdata name="SecurityTokenValidationException" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      <apidata name="SecurityTokenValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      </containers>
    </api>
    <api id="Events.T:System.IdentityModel.Tokens.SecurityTokenValidationException">
      <topicdata name="SecurityTokenValidationException" group="list" subgroup="Events" typeTopicId="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      <apidata name="SecurityTokenValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SecurityTokenValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SecurityTokenValidationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SessionSecurityToken">
      <topicdata group="api" />
      <apidata name="SessionSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SessionSecurityToken">
      <topicdata name="SessionSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SessionSecurityToken" />
      <apidata name="SessionSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SessionSecurityToken">
      <topicdata name="SessionSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SessionSecurityToken" />
      <apidata name="SessionSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor" />
      <parameters>
        <parameter name="claimsPrincipal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor" />
      <parameters>
        <parameter name="claimsPrincipal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor" />
      <parameters>
        <parameter name="claimsPrincipal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="validFrom">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="validTo">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor" />
      <parameters>
        <parameter name="claimsPrincipal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="validFrom">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="validTo">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor" />
      <parameters>
        <parameter name="claimsPrincipal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="lifetime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor" />
      <parameters>
        <parameter name="claimsPrincipal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="validFrom">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="lifetime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="key">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor" />
      <parameters>
        <parameter name="claimsPrincipal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="validFrom">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="validTo">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityToken.#ctor" />
      <parameters>
        <parameter name="claimsPrincipal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lifetime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="key">
          <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal">
      <topicdata group="api" />
      <apidata name="ClaimsPrincipal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClaimsPrincipal" />
      <returns>
        <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.Context">
      <topicdata group="api" />
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Context" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.ContextId">
      <topicdata group="api" />
      <apidata name="ContextId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContextId" />
      <returns>
        <type api="T:System.Xml.UniqueId" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId">
      <topicdata group="api" />
      <apidata name="EndpointId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndpointId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent">
      <topicdata group="api" />
      <apidata name="IsPersistent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsPersistent" />
      <setter name="set_IsPersistent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode">
      <topicdata group="api" />
      <apidata name="IsReferenceMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsReferenceMode" />
      <setter name="set_IsReferenceMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime">
      <topicdata group="api" />
      <apidata name="KeyEffectiveTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyEffectiveTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime">
      <topicdata group="api" />
      <apidata name="KeyExpirationTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyExpirationTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration">
      <topicdata group="api" />
      <apidata name="KeyGeneration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyGeneration" />
      <returns>
        <type api="T:System.Xml.UniqueId" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion">
      <topicdata group="api" />
      <apidata name="SecureConversationVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecureConversationVersion" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SessionSecurityTokenCache">
      <topicdata group="api" />
      <apidata name="SessionSecurityTokenCache" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll">
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SessionSecurityTokenCache">
      <topicdata name="SessionSecurityTokenCache" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
      <apidata name="SessionSecurityTokenCache" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll">
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll">
      <topicdata name="RemoveAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.AddOrUpdate(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityToken,System.DateTime)">
      <topicdata group="api" />
      <apidata name="AddOrUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
        <parameter name="expiryTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Get(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.GetAll(System.String,System.Xml.UniqueId)">
      <topicdata group="api" />
      <apidata name="GetAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.LoadCustomConfiguration(System.Xml.XmlNodeList)">
      <topicdata group="api" />
      <apidata name="LoadCustomConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="nodelist">
          <type api="T:System.Xml.XmlNodeList" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.Remove(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll(System.String,System.Xml.UniqueId)">
      <topicdata group="api" />
      <apidata name="RemoveAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenCache.RemoveAll" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCache" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey">
      <topicdata group="api" />
      <apidata name="SessionSecurityTokenCacheKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey">
      <topicdata name="SessionSecurityTokenCacheKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      <apidata name="SessionSecurityTokenCacheKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </containers>
    </api>
    <api id="Operators.T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey">
      <topicdata name="SessionSecurityTokenCacheKey" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      <apidata name="SessionSecurityTokenCacheKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey">
      <topicdata name="SessionSecurityTokenCacheKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      <apidata name="SessionSecurityTokenCacheKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contextId">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
        <parameter name="keyGeneration">
          <type api="T:System.Xml.UniqueId" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId">
      <topicdata group="api" />
      <apidata name="ContextId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContextId" />
      <returns>
        <type api="T:System.Xml.UniqueId" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId">
      <topicdata group="api" />
      <apidata name="EndpointId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndpointId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration">
      <topicdata group="api" />
      <apidata name="IgnoreKeyGeneration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreKeyGeneration" />
      <setter name="set_IgnoreKeyGeneration" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration">
      <topicdata group="api" />
      <apidata name="KeyGeneration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyGeneration" />
      <returns>
        <type api="T:System.Xml.UniqueId" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="first">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
        </parameter>
        <parameter name="second">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="first">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
        </parameter>
        <parameter name="second">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="SessionSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Services.Tokens.MachineKeySessionSecurityTokenHandler" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
        <element api="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken">
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
      <topicdata name="SessionSecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
      <apidata name="SessionSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken">
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
      <topicdata name="SessionSecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
      <apidata name="SessionSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Fields.T:System.IdentityModel.Tokens.SessionSecurityTokenHandler">
      <topicdata name="SessionSecurityTokenHandler" group="list" subgroup="Fields" typeTopicId="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
      <apidata name="SessionSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <elements>
        <element api="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms" />
        <element api="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken">
      <topicdata name="CanReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken">
      <topicdata name="ReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken">
      <topicdata name="ValidateToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken">
      <topicdata name="WriteToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <parameters>
        <parameter name="transforms">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.CookieTransform" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.CookieTransform},System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.#ctor" />
      <parameters>
        <parameter name="transforms">
          <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.CookieTransform" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tokenLifetime">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ApplyTransforms(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="ApplyTransforms" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outbound">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanValidateToken">
      <topicdata group="api" />
      <apidata name="CanValidateToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanValidateToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CanWriteToken">
      <topicdata group="api" />
      <apidata name="CanWriteToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWriteToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieElementName">
      <topicdata group="api" />
      <apidata name="CookieElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CookieElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CookieNamespace">
      <topicdata group="api" />
      <apidata name="CookieNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CookieNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateSessionSecurityToken(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.DateTime,System.DateTime)">
      <topicdata group="api" />
      <apidata name="CreateSessionSecurityToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="principal">
          <type api="T:System.Security.Claims.ClaimsPrincipal" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="validFrom">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="validTo">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
      <topicdata group="api" />
      <apidata name="CreateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="tokenDescriptor">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultCookieTransforms">
      <topicdata group="api" />
      <apidata name="DefaultCookieTransforms" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.CookieTransform" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="F:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultLifetime">
      <topicdata group="api" />
      <apidata name="DefaultLifetime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime">
      <topicdata group="api" />
      <apidata name="DefaultTokenLifetime" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultTokenLifetime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.GetTokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="GetTokenTypeIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
      <topicdata group="api" />
      <apidata name="LoadCustomConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="customConfigElements">
          <type api="T:System.Xml.XmlNodeList" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Byte[],System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="tokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="tokenResolver">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.SetTransforms(System.Collections.Generic.IEnumerable{System.IdentityModel.CookieTransform})">
      <topicdata group="api" />
      <apidata name="SetTransforms" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transforms">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.IdentityModel.CookieTransform" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime">
      <topicdata group="api" />
      <apidata name="TokenLifetime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TokenLifetime" />
      <setter name="set_TokenLifetime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TokenType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SessionSecurityTokenHandler.Transforms">
      <topicdata group="api" />
      <apidata name="Transforms" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Transforms" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.CookieTransform" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateSession(System.IdentityModel.Tokens.SessionSecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateSession" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="securityToken">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SessionSecurityToken,System.String)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.ValidateToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
        <parameter name="endpointId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SessionSecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.IdentityModel.Tokens.SessionSecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SigningCredentials">
      <topicdata group="api" />
      <apidata name="SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.X509SigningCredentials" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SigningCredentials.#ctor">
          <element api="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)" />
          <element api="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SigningCredentials">
      <topicdata name="SigningCredentials" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SigningCredentials" />
      <apidata name="SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SigningCredentials">
      <topicdata name="SigningCredentials" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SigningCredentials" />
      <apidata name="SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SigningCredentials.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SigningCredentials.#ctor" />
      <parameters>
        <parameter name="signingKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </parameter>
        <parameter name="signatureAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="digestAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SigningCredentials.#ctor(System.IdentityModel.Tokens.SecurityKey,System.String,System.String,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SigningCredentials.#ctor" />
      <parameters>
        <parameter name="signingKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </parameter>
        <parameter name="signatureAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="digestAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="signingKeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm">
      <topicdata group="api" />
      <apidata name="DigestAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DigestAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm">
      <topicdata group="api" />
      <apidata name="SignatureAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SignatureAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey">
      <topicdata group="api" />
      <apidata name="SigningKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SigningKey" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier">
      <topicdata group="api" />
      <apidata name="SigningKeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SigningKeyIdentifier" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SymmetricProofDescriptor">
      <topicdata group="api" />
      <apidata name="SymmetricProofDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor">
          <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)" />
          <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
          <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)" />
          <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
          <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)" />
          <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SymmetricProofDescriptor">
      <topicdata name="SymmetricProofDescriptor" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
      <apidata name="SymmetricProofDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SymmetricProofDescriptor">
      <topicdata name="SymmetricProofDescriptor" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
      <apidata name="SymmetricProofDescriptor" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials" />
        <element api="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="targetWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.IdentityModel.Tokens.EncryptingCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor" />
      <parameters>
        <parameter name="targetWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor" />
      <parameters>
        <parameter name="keySizeInBits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="targetWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor" />
      <parameters>
        <parameter name="keySizeInBits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="targetWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
        <parameter name="requestorWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor" />
      <parameters>
        <parameter name="keySizeInBits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="targetWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
        <parameter name="requestorWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
        <parameter name="sourceEntropy">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.Byte[],System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor" />
      <parameters>
        <parameter name="keySizeInBits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="targetWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
        <parameter name="requestorWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
        <parameter name="sourceEntropy">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="encryptWith">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor(System.Int32,System.IdentityModel.Tokens.EncryptingCredentials,System.IdentityModel.Tokens.EncryptingCredentials,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.SymmetricProofDescriptor.#ctor" />
      <parameters>
        <parameter name="keySizeInBits">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="targetWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
        <parameter name="requestorWrappingCredentials">
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
        </parameter>
        <parameter name="encryptWith">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
      <topicdata group="api" />
      <apidata name="ApplyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.ProofDescriptor.ApplyTo(System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse)">
          <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="response">
          <type api="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetKeyBytes">
      <topicdata group="api" />
      <apidata name="GetKeyBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetSourceEntropy">
      <topicdata group="api" />
      <apidata name="GetSourceEntropy" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricProofDescriptor.GetTargetEntropy">
      <topicdata group="api" />
      <apidata name="GetTargetEntropy" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.KeyIdentifier">
      <topicdata group="api" />
      <apidata name="KeyIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.ProofDescriptor.KeyIdentifier">
          <type api="T:System.IdentityModel.Tokens.ProofDescriptor" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeyIdentifier" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.RequestorEncryptingCredentials">
      <topicdata group="api" />
      <apidata name="RequestorEncryptingCredentials" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RequestorEncryptingCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.SymmetricProofDescriptor.TargetEncryptingCredentials">
      <topicdata group="api" />
      <apidata name="TargetEncryptingCredentials" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetEncryptingCredentials" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricProofDescriptor" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <topicdata group="api" />
      <apidata name="SymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.InMemorySymmetricSecurityKey" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <topicdata name="SymmetricSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
      <apidata name="SymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.SymmetricSecurityKey">
      <topicdata name="SymmetricSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
      <apidata name="SymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GenerateDerivedKey(System.String,System.Byte[],System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GenerateDerivedKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="label">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="nonce">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="derivedKeyLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetDecryptionTransform(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="GetDecryptionTransform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetEncryptionTransform(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="GetEncryptionTransform" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetIVSize(System.String)">
      <topicdata group="api" />
      <apidata name="GetIVSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetKeyedHashAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="GetKeyedHashAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="GetSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.SymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.SymmetricSecurityKey.GetSymmetricKey">
      <topicdata group="api" />
      <apidata name="GetSymmetricKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.SymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.TokenReplayCache">
      <topicdata group="api" />
      <apidata name="TokenReplayCache" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.#ctor" />
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)" />
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)" />
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)" />
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.TokenReplayCache">
      <topicdata name="TokenReplayCache" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.TokenReplayCache" />
      <apidata name="TokenReplayCache" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)" />
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)" />
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)" />
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.TokenReplayCache" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.TokenReplayCache.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.TokenReplayCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.TokenReplayCache.AddOrUpdate(System.String,System.IdentityModel.Tokens.SecurityToken,System.DateTime)">
      <topicdata group="api" />
      <apidata name="AddOrUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="securityToken">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.TokenReplayCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.TokenReplayCache.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.TokenReplayCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.TokenReplayCache.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.TokenReplayCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.TokenReplayCache.LoadCustomConfiguration(System.Xml.XmlNodeList)">
      <topicdata group="api" />
      <apidata name="LoadCustomConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="nodelist">
          <type api="T:System.Xml.XmlNodeList" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.TokenReplayCache" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.TokenReplayCache.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.TokenReplayCache" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <topicdata group="api" />
      <apidata name="UserNameSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <topicdata name="UserNameSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.UserNameSecurityToken" />
      <apidata name="UserNameSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.UserNameSecurityToken">
      <topicdata name="UserNameSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.UserNameSecurityToken" />
      <apidata name="UserNameSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor" />
      <parameters>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.UserNameSecurityToken.#ctor" />
      <parameters>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.UserName">
      <topicdata group="api" />
      <apidata name="UserName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="UserNameSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" ref="true" />
          <type api="T:System.IdentityModel.Services.Tokens.MembershipUserNameSecurityTokenHandler" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor" />
        <element api="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler">
      <topicdata name="UserNameSecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" />
      <apidata name="UserNameSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler">
      <topicdata name="UserNameSecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" />
      <apidata name="UserNameSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken">
      <topicdata name="CanReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken">
      <topicdata name="ReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken">
      <topicdata name="WriteToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken">
      <topicdata group="api" />
      <apidata name="CanWriteToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWriteToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="GetTokenTypeIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword">
      <topicdata group="api" />
      <apidata name="RetainPassword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RetainPassword" />
      <setter name="set_RetainPassword" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TokenType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <topicdata group="api" />
      <apidata name="WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.KerberosReceiverSecurityToken" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <topicdata name="WindowsSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      <apidata name="WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize">
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.WindowsSecurityToken">
      <topicdata name="WindowsSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      <apidata name="WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize">
      <topicdata name="Initialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor(System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthenticationType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="effectiveTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="clone">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize(System.String,System.String,System.DateTime,System.DateTime,System.Security.Principal.WindowsIdentity,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.WindowsSecurityToken.Initialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="effectiveTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="expirationTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="clone">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsSecurityToken.ThrowIfDisposed">
      <topicdata group="api" />
      <apidata name="ThrowIfDisposed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsSecurityToken.WindowsIdentity">
      <topicdata group="api" />
      <apidata name="WindowsIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_WindowsIdentity" />
      <returns>
        <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="WindowsUserNameSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.UserNameSecurityTokenHandler" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor" />
        <element api="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler">
      <topicdata name="WindowsUserNameSecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" />
      <apidata name="WindowsUserNameSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="Overload:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler">
      <topicdata name="WindowsUserNameSecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" />
      <apidata name="WindowsUserNameSecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.RetainPassword" />
        <element api="P:System.IdentityModel.Tokens.UserNameSecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.CanValidateToken">
      <topicdata group="api" />
      <apidata name="CanValidateToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanValidateToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.WindowsUserNameSecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <topicdata group="api" />
      <apidata name="X509AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <topicdata name="X509AsymmetricSecurityKey" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
      <apidata name="X509AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey">
      <topicdata name="X509AsymmetricSecurityKey" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
      <apidata name="X509AsymmetricSecurityKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="DecryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.DecryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="EncryptKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.EncryptKey(System.String,System.Byte[])">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="privateKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
      <topicdata group="api" />
      <apidata name="GetHashAlgorithmForSignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureDeformatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureDeformatter(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureDeformatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
      <topicdata group="api" />
      <apidata name="GetSignatureFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.GetSignatureFormatter(System.String)">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Cryptography.AsymmetricSignatureFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey">
      <topicdata group="api" />
      <apidata name="HasPrivateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.AsymmetricSecurityKey.HasPrivateKey">
          <type api="T:System.IdentityModel.Tokens.AsymmetricSecurityKey" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsAsymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsAsymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSupportedAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSupportedAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)">
      <topicdata group="api" />
      <apidata name="IsSymmetricAlgorithm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKey.IsSymmetricAlgorithm(System.String)">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="algorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize">
      <topicdata group="api" />
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKey.KeySize">
          <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver">
      <topicdata group="api" />
      <apidata name="X509CertificateStoreTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.ResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
          <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)" />
          <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore">
          <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation" />
        <element api="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver">
      <topicdata name="X509CertificateStoreTokenResolver" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" />
      <apidata name="X509CertificateStoreTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.ResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        </element>
        <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveToken">
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
        <element api="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore">
          <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
          <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver">
      <topicdata name="X509CertificateStoreTokenResolver" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" />
      <apidata name="X509CertificateStoreTokenResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation" />
        <element api="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
        <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)" />
        <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore">
      <topicdata name="TryResolveTokenCore" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
        <element api="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
      <parameters>
        <parameter name="storeName">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreName" ref="false" />
        </parameter>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor(System.String,System.Security.Cryptography.X509Certificates.StoreLocation)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.#ctor" />
      <parameters>
        <parameter name="storeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="storeLocation">
          <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreLocation">
      <topicdata group="api" />
      <apidata name="StoreLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StoreLocation" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.StoreLocation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.StoreName">
      <topicdata group="api" />
      <apidata name="StoreName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StoreName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
      <topicdata group="api" />
      <apidata name="TryResolveSecurityKeyCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="key" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifier">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
      <topicdata group="api" />
      <apidata name="TryResolveTokenCore" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver.TryResolveTokenCore" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)">
          <type api="T:System.IdentityModel.Selectors.SecurityTokenResolver" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
        <parameter name="token" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509CertificateStoreTokenResolver" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer">
      <topicdata group="api" />
      <apidata name="X509DataSecurityKeyIdentifierClauseSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor" />
        <element api="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer">
      <topicdata name="X509DataSecurityKeyIdentifierClauseSerializer" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" />
      <apidata name="X509DataSecurityKeyIdentifierClauseSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="CanWriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="WriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509EncryptingCredentials">
      <topicdata group="api" />
      <apidata name="X509EncryptingCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.EncryptingCredentials" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)" />
          <element api="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.Algorithm" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.X509EncryptingCredentials.Certificate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509EncryptingCredentials">
      <topicdata name="X509EncryptingCredentials" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509EncryptingCredentials" />
      <apidata name="X509EncryptingCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509EncryptingCredentials">
      <topicdata name="X509EncryptingCredentials" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509EncryptingCredentials" />
      <apidata name="X509EncryptingCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.Algorithm" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKey" />
        <element api="P:System.IdentityModel.Tokens.EncryptingCredentials.SecurityKeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.X509EncryptingCredentials.Certificate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="ski">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="ski">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="keyWrappingAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509EncryptingCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="keyWrappingAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509EncryptingCredentials.Certificate">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Certificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509EncryptingCredentials" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="X509IssuerSerialKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.String,System.String)" />
        </element>
        <element api="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" />
        <element api="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <topicdata name="X509IssuerSerialKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      <apidata name="X509IssuerSerialKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause">
      <topicdata name="X509IssuerSerialKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      <apidata name="X509IssuerSerialKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName" />
        <element api="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="issuerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="issuerSerialNumber">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerName">
      <topicdata group="api" />
      <apidata name="IssuerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IssuerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.IssuerSerialNumber">
      <topicdata group="api" />
      <apidata name="IssuerSerialNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IssuerSerialNumber" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="issuerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="issuerSerialNumber">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator">
      <topicdata group="api" />
      <apidata name="X509NTAuthChainTrustValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="Overload:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor" />
          <element api="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator">
      <topicdata name="X509NTAuthChainTrustValidator" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" />
      <apidata name="X509NTAuthChainTrustValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor" />
        <element api="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.#ctor" />
      <parameters>
        <parameter name="useMachineContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="chainPolicy">
          <type api="T:System.Security.Cryptography.X509Certificates.X509ChainPolicy" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
          <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="X509RawDataKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData" />
        <element api="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <topicdata name="X509RawDataKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      <apidata name="X509RawDataKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData" />
        <element api="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause">
      <topicdata name="X509RawDataKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      <apidata name="X509RawDataKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
        <element api="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="certificateRawData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CanCreateKey">
      <topicdata group="api" />
      <apidata name="CanCreateKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanCreateKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.CreateKey">
      <topicdata group="api" />
      <apidata name="CreateKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.GetX509RawData">
      <topicdata group="api" />
      <apidata name="GetX509RawData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509SecurityToken">
      <topicdata group="api" />
      <apidata name="X509SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.X509SecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509SecurityToken">
      <topicdata name="X509SecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509SecurityToken" />
      <apidata name="X509SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509SecurityToken">
      <topicdata name="X509SecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509SecurityToken" />
      <apidata name="X509SecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509SecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CanCreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Certificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1">
      <topicdata group="api" />
      <apidata name="CreateKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.Id">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="MatchesKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="keyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys">
      <topicdata group="api" />
      <apidata name="SecurityKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SecurityKeys" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Tokens.SecurityKey" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed">
      <topicdata group="api" />
      <apidata name="ThrowIfDisposed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom">
      <topicdata group="api" />
      <apidata name="ValidFrom" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidFrom">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidFrom" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo">
      <topicdata group="api" />
      <apidata name="ValidTo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityToken.ValidTo">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidTo" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509SecurityTokenHandler">
      <topicdata group="api" />
      <apidata name="X509SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509SecurityTokenHandler">
      <topicdata name="X509SecurityTokenHandler" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />
      <apidata name="X509SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)" />
        <element api="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken">
          <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
          <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509SecurityTokenHandler">
      <topicdata name="X509SecurityTokenHandler" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />
      <apidata name="X509SecurityTokenHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration" />
        <element api="P:System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken">
      <topicdata name="CanReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken">
      <topicdata name="ReadToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)" />
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken">
      <topicdata name="WriteToken" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <parameters>
        <parameter name="mapToWindows">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <parameters>
        <parameter name="mapToWindows">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="certificateValidator">
          <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor" />
      <parameters>
        <parameter name="certificateValidator">
          <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken">
      <topicdata group="api" />
      <apidata name="CanValidateToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanValidateToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanValidateToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="CanWriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken">
      <topicdata group="api" />
      <apidata name="CanWriteToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.CanWriteToken">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWriteToken" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator">
      <topicdata group="api" />
      <apidata name="CertificateValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CertificateValidator" />
      <setter name="set_CertificateValidator" />
      <returns>
        <type api="T:System.IdentityModel.Selectors.X509CertificateValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers">
      <topicdata group="api" />
      <apidata name="GetTokenTypeIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.GetTokenTypeIdentifiers">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
      <topicdata group="api" />
      <apidata name="LoadCustomConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="customConfigElements">
          <type api="T:System.Xml.XmlNodeList" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.IdentityModel.Configuration.ICustomIdentityConfiguration.LoadCustomConfiguration(System.Xml.XmlNodeList)">
          <type api="T:System.IdentityModel.Configuration.ICustomIdentityConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows">
      <topicdata group="api" />
      <apidata name="MapToWindows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MapToWindows" />
      <setter name="set_MapToWindows" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType">
      <topicdata group="api" />
      <apidata name="TokenType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IdentityModel.Tokens.SecurityTokenHandler.TokenType">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TokenType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="ValidateToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Security.Claims.ClaimsIdentity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <topicdata group="api" />
      <apidata name="WriteKeyIdentifierClause" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="securityKeyIdentifierClause">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <topicdata group="api" />
      <apidata name="WriteToken" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
          <type api="T:System.IdentityModel.Tokens.SecurityTokenHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="token">
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes">
      <topicdata group="api" />
      <apidata name="WriteXmlDSigDefinedClauseTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WriteXmlDSigDefinedClauseTypes" />
      <setter name="set_WriteXmlDSigDefinedClauseTypes" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator">
      <topicdata group="api" />
      <apidata name="X509NTAuthChainTrustValidator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_X509NTAuthChainTrustValidator" />
      <setter name="set_X509NTAuthChainTrustValidator" />
      <returns>
        <type api="T:System.IdentityModel.Tokens.X509NTAuthChainTrustValidator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SecurityTokenHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509SigningCredentials">
      <topicdata group="api" />
      <apidata name="X509SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.SigningCredentials" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IdentityModel.Tokens.X509SigningCredentials.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
          <element api="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String)" />
          <element api="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.X509SigningCredentials.Certificate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509SigningCredentials">
      <topicdata name="X509SigningCredentials" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509SigningCredentials" />
      <apidata name="X509SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SigningCredentials" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509SigningCredentials">
      <topicdata name="X509SigningCredentials" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509SigningCredentials" />
      <apidata name="X509SigningCredentials" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.DigestAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SignatureAlgorithm" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKey" />
        <element api="P:System.IdentityModel.Tokens.SigningCredentials.SigningKeyIdentifier" />
        <element api="P:System.IdentityModel.Tokens.X509SigningCredentials.Certificate" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SigningCredentials" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509SigningCredentials.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
        <element api="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SigningCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SigningCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="ski">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.SecurityKeyIdentifier,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SigningCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="ski">
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" ref="true" />
        </parameter>
        <parameter name="signatureAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="digestAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SigningCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509SigningCredentials.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="signatureAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="digestAlgorithm">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509SigningCredentials.Certificate">
      <topicdata group="api" />
      <apidata name="Certificate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Certificate" />
      <returns>
        <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SigningCredentials" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="X509SubjectKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier" />
        <element api="Overload:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <topicdata name="X509SubjectKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
      <apidata name="X509SubjectKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier" />
        <element api="Overload:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause">
      <topicdata name="X509SubjectKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
      <apidata name="X509SubjectKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="ski">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="CanCreateFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier">
      <topicdata group="api" />
      <apidata name="GetX509SubjectKeyIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)">
      <topicdata group="api" />
      <apidata name="TryCreateFrom" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="keyIdentifierClause" out="true">
          <referenceTo>
            <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <topicdata group="api" />
      <apidata name="X509ThumbprintKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint" />
        <element api="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <topicdata name="X509ThumbprintKeyIdentifierClause" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      <apidata name="X509ThumbprintKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey" />
        <element api="M:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce" />
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint" />
        <element api="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches">
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
          <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
          <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause">
      <topicdata name="X509ThumbprintKeyIdentifierClause" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      <apidata name="X509ThumbprintKeyIdentifierClause" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength" />
        <element api="P:System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches">
      <topicdata name="Matches" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Matches" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
        <element api="M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="thumbprint">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.GetX509Thumbprint">
      <topicdata group="api" />
      <apidata name="GetX509Thumbprint" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <topicdata group="api" />
      <apidata name="Matches" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.Matches" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause" ref="true" />
      </containers>
    </api>
    <api id="T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <topicdata group="api" />
      <apidata name="X509WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
          <type api="T:System.IdentityModel.Tokens.SecurityToken" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />
        <element api="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor">
          <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity)" />
          <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String)" />
          <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String,System.String)" />
        </element>
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.AuthenticationType" />
        <element api="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
      </containers>
    </api>
    <api id="Methods.T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <topicdata name="X509WindowsSecurityToken" group="list" subgroup="Methods" typeTopicId="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      <apidata name="X509WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CanCreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.CreateKeyIdentifierClause``1" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)" />
        <element api="M:System.IdentityModel.Tokens.X509SecurityToken.ThrowIfDisposed" />
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.Dispose" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      </containers>
    </api>
    <api id="Properties.T:System.IdentityModel.Tokens.X509WindowsSecurityToken">
      <topicdata name="X509WindowsSecurityToken" group="list" subgroup="Properties" typeTopicId="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      <apidata name="X509WindowsSecurityToken" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Certificate" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.Id" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.SecurityKeys" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidFrom" />
        <element api="P:System.IdentityModel.Tokens.X509SecurityToken.ValidTo" />
        <element api="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.AuthenticationType" />
        <element api="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" />
      </containers>
    </api>
    <api id="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity)" />
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String)" />
        <element api="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Principal.WindowsIdentity,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IdentityModel.Tokens.X509WindowsSecurityToken.#ctor" />
      <parameters>
        <parameter name="certificate">
          <type api="T:System.Security.Cryptography.X509Certificates.X509Certificate2" ref="true" />
        </parameter>
        <parameter name="windowsIdentity">
          <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AuthenticationType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="M:System.IdentityModel.Tokens.X509WindowsSecurityToken.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IdentityModel.Tokens.X509SecurityToken.Dispose">
          <type api="T:System.IdentityModel.Tokens.X509SecurityToken" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
    </api>
    <api id="P:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity">
      <topicdata group="api" />
      <apidata name="WindowsIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WindowsIdentity" />
      <returns>
        <type api="T:System.Security.Principal.WindowsIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.IdentityModel" module="System.IdentityModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IdentityModel.Tokens" />
        <type api="T:System.IdentityModel.Tokens.X509WindowsSecurityToken" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>