<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="PresentationCore">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationCore.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationCore.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationCore.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Windows.Media.Effects">
      <topicdata group="api" />
      <apidata name="System.Windows.Media.Effects" group="namespace" />
      <elements>
        <element api="T:System.Windows.Media.Effects.ShaderEffect" />
        <element api="T:System.Windows.Media.Effects.BlurEffect" />
        <element api="T:System.Windows.Media.Effects.DropShadowEffect" />
        <element api="T:System.Windows.Media.Effects.BitmapEffect" />
        <element api="T:System.Windows.Media.Effects.BitmapEffectGroup" />
        <element api="T:System.Windows.Media.Effects.BitmapEffectInput" />
        <element api="T:System.Windows.Media.Effects.BevelBitmapEffect" />
        <element api="T:System.Windows.Media.Effects.BlurBitmapEffect" />
        <element api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
        <element api="T:System.Windows.Media.Effects.Effect" />
        <element api="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
        <element api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
        <element api="T:System.Windows.Media.Effects.SamplingMode" />
        <element api="T:System.Windows.Media.Effects.PixelShader" />
        <element api="T:System.Windows.Media.Effects.BitmapEffectCollection" />
        <element api="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" />
        <element api="T:System.Windows.Media.Effects.KernelType" />
        <element api="T:System.Windows.Media.Effects.EdgeProfile" />
        <element api="T:System.Windows.Media.Effects.ShaderRenderMode" />
        <element api="T:System.Windows.Media.Effects.RenderingBias" />
      </elements>
    </api>
    <api id="T:System.Windows.Media.Effects.BevelBitmapEffect">
      <topicdata group="api" />
      <apidata name="BevelBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty" />
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty" />
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty" />
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty" />
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BevelBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BevelBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BevelBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BevelBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor" />
        <element api="M:System.Windows.Media.Effects.BevelBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.Relief" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.BevelBitmapEffect">
      <topicdata name="BevelBitmapEffect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.BevelBitmapEffect" />
      <apidata name="BevelBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BevelBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BevelBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BevelBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BevelBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BevelBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.BevelBitmapEffect">
      <topicdata name="BevelBitmapEffect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.BevelBitmapEffect" />
      <apidata name="BevelBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.Relief" />
        <element api="P:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.BevelBitmapEffect">
      <topicdata name="BevelBitmapEffect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.BevelBitmapEffect" />
      <apidata name="BevelBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.BevelBitmapEffect">
      <topicdata name="BevelBitmapEffect" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.BevelBitmapEffect" />
      <apidata name="BevelBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor" />
      <elements>
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty" />
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty" />
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty" />
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty" />
        <element api="F:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BevelBitmapEffect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidth">
      <topicdata group="api" />
      <apidata name="BevelWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BevelWidth" />
      <setter name="set_BevelWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthProperty">
      <topicdata group="api" />
      <apidata name="BevelWidthProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BevelBitmapEffect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BevelBitmapEffect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfile">
      <topicdata group="api" />
      <apidata name="EdgeProfile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EdgeProfile" />
      <setter name="set_EdgeProfile" />
      <returns>
        <type api="T:System.Windows.Media.Effects.EdgeProfile" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BevelBitmapEffect.EdgeProfileProperty">
      <topicdata group="api" />
      <apidata name="EdgeProfileProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BevelBitmapEffect.LightAngle">
      <topicdata group="api" />
      <apidata name="LightAngle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LightAngle" />
      <setter name="set_LightAngle" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BevelBitmapEffect.LightAngleProperty">
      <topicdata group="api" />
      <apidata name="LightAngleProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BevelBitmapEffect.Relief">
      <topicdata group="api" />
      <apidata name="Relief" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Relief" />
      <setter name="set_Relief" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BevelBitmapEffect.ReliefProperty">
      <topicdata group="api" />
      <apidata name="ReliefProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BevelBitmapEffect.Smoothness">
      <topicdata group="api" />
      <apidata name="Smoothness" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Smoothness" />
      <setter name="set_Smoothness" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessProperty">
      <topicdata group="api" />
      <apidata name="SmoothnessProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.BitmapEffect">
      <topicdata group="api" />
      <apidata name="BitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" ref="true" />
          <type api="T:System.Windows.Media.Effects.BevelBitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.CreateInstance" />
        <element api="M:System.Windows.Freezable.CreateInstanceCore" />
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.OnChanged" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.OnFreezablePropertyChanged">
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        </element>
        <element api="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Freezable.ReadPreamble" />
        <element api="M:System.Windows.Freezable.WritePostscript" />
        <element api="M:System.Windows.Freezable.WritePreamble" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.#ctor" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
          <element api="M:System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)" />
        </element>
        <element api="M:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.BitmapEffect">
      <topicdata name="BitmapEffect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.BitmapEffect" />
      <apidata name="BitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.CreateInstance" />
        <element api="M:System.Windows.Freezable.CreateInstanceCore" />
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.OnChanged" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.OnFreezablePropertyChanged">
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        </element>
        <element api="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Freezable.ReadPreamble" />
        <element api="M:System.Windows.Freezable.WritePostscript" />
        <element api="M:System.Windows.Freezable.WritePreamble" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
          <element api="M:System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)" />
        </element>
        <element api="M:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.BitmapEffect">
      <topicdata name="BitmapEffect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.BitmapEffect" />
      <apidata name="BitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.BitmapEffect">
      <topicdata name="BitmapEffect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.BitmapEffect" />
      <apidata name="BitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Media.Effects.BitmapEffect.SetValue">
      <topicdata name="SetValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter">
      <topicdata group="api" />
      <apidata name="CreateBitmapEffectOuter" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect">
      <topicdata group="api" />
      <apidata name="CreateUnmanagedEffect" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)">
      <topicdata group="api" />
      <apidata name="GetOutput" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Media.Imaging.BitmapSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)">
      <topicdata group="api" />
      <apidata name="InitializeBitmapEffect" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="outerObject">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
        <parameter name="innerObject">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Windows.Media.Effects.BitmapEffect.SetValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="effect">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityTreatAsSafeAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)">
      <topicdata group="api" />
      <apidata name="UpdateUnmanagedPropertyState" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="unmanagedEffect">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Media.Effects.BitmapEffectCollection">
      <topicdata group="api" />
      <apidata name="BitmapEffectCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectCollection.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectCollection.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectCollection.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectCollection.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectCollection.#ctor">
          <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor" />
          <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect})" />
          <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Int32)" />
        </element>
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Add(System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Clear" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Clone" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Contains(System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(System.Windows.Media.Effects.BitmapEffect[],System.Int32)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.GetEnumerator" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Insert(System.Int32,System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Remove(System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Effects#BitmapEffect}#GetEnumerator" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.Count" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.Item(System.Int32)" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#ICollection{System#Windows#Media#Effects#BitmapEffect}#IsReadOnly" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.BitmapEffectCollection">
      <topicdata name="BitmapEffectCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectCollection" />
      <apidata name="BitmapEffectCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectCollection.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectCollection.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectCollection.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectCollection.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Add(System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Clear" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Clone" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Contains(System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(System.Windows.Media.Effects.BitmapEffect[],System.Int32)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.GetEnumerator" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Insert(System.Int32,System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Remove(System.Windows.Media.Effects.BitmapEffect)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Effects#BitmapEffect}#GetEnumerator" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.BitmapEffectCollection">
      <topicdata name="BitmapEffectCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectCollection" />
      <apidata name="BitmapEffectCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.Count" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.Item(System.Int32)" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#ICollection{System#Windows#Media#Effects#BitmapEffect}#IsReadOnly" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.BitmapEffectCollection">
      <topicdata name="BitmapEffectCollection" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectCollection" />
      <apidata name="BitmapEffectCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Media.Effects.BitmapEffectCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect})" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Media.Effects.BitmapEffectCollection.#ctor" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Media.Effects.BitmapEffectCollection.#ctor" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Media.Effects.BitmapEffectCollection.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.Add(System.Windows.Media.Effects.BitmapEffect)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.Contains(System.Windows.Media.Effects.BitmapEffect)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(System.Windows.Media.Effects.BitmapEffect[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" ref="false">
          <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(System.Windows.Media.Effects.BitmapEffect)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.Insert(System.Int32,System.Windows.Media.Effects.BitmapEffect)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.Remove(System.Windows.Media.Effects.BitmapEffect)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#ICollection{System#Windows#Media#Effects#BitmapEffect}#IsReadOnly">
      <topicdata group="api" eiiName="ICollection`1.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.Windows.Media.Effects.BitmapEffect&gt;.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Effects#BitmapEffect}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable`1.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator">
      <topicdata group="api" />
      <apidata name="Enumerator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.MoveNext" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.Reset" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.System#IDisposable#Dispose" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.Current" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.System#Collections#IEnumerator#Current" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator">
      <topicdata name="Enumerator" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" />
      <apidata name="Enumerator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.MoveNext" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.Reset" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.System#IDisposable#Dispose" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator">
      <topicdata name="Enumerator" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" />
      <apidata name="Enumerator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.Current" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.System#Collections#IEnumerator#Current" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" ref="false">
          <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" ref="false">
          <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" ref="false">
          <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.System#Collections#IEnumerator#Current">
      <topicdata group="api" eiiName="IEnumerator.Current" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IEnumerator.Current" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" ref="false">
          <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator" ref="false">
          <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.BitmapEffectGroup">
      <topicdata group="api" />
      <apidata name="BitmapEffectGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectGroup.#ctor" contentProperty="P:System.Windows.Media.Effects.BitmapEffectGroup.Children" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectGroup.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectGroup.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectGroup.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectGroup.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectGroup.#ctor" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectGroup.Clone" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectGroup.Children" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Children</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.BitmapEffectGroup">
      <topicdata name="BitmapEffectGroup" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectGroup" />
      <apidata name="BitmapEffectGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectGroup.#ctor" contentProperty="P:System.Windows.Media.Effects.BitmapEffectGroup.Children" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectGroup.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectGroup.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectGroup.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectGroup.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectGroup.Clone" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.BitmapEffectGroup">
      <topicdata name="BitmapEffectGroup" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectGroup" />
      <apidata name="BitmapEffectGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectGroup.#ctor" contentProperty="P:System.Windows.Media.Effects.BitmapEffectGroup.Children" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectGroup.Children" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.BitmapEffectGroup">
      <topicdata name="BitmapEffectGroup" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectGroup" />
      <apidata name="BitmapEffectGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectGroup.#ctor" contentProperty="P:System.Windows.Media.Effects.BitmapEffectGroup.Children" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.BitmapEffectGroup">
      <topicdata name="BitmapEffectGroup" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectGroup" />
      <apidata name="BitmapEffectGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectGroup.#ctor" contentProperty="P:System.Windows.Media.Effects.BitmapEffectGroup.Children" />
      <elements>
        <element api="F:System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectGroup.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Children" />
      <setter name="set_Children" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffectCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BitmapEffectGroup.ChildrenProperty">
      <topicdata group="api" />
      <apidata name="ChildrenProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectGroup.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectGroup.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectGroup" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.BitmapEffectInput">
      <topicdata group="api" />
      <apidata name="BitmapEffectInput" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectProperty" />
        <element api="F:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnitsProperty" />
        <element api="F:System.Windows.Media.Effects.BitmapEffectInput.InputProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectInput.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectInput.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectInput.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectInput.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectInput.#ctor">
          <element api="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor" />
          <element api="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor(System.Windows.Media.Imaging.BitmapSource)" />
        </element>
        <element api="M:System.Windows.Media.Effects.BitmapEffectInput.Clone" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectInput.CloneCurrentValue" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffect" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnits" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectInput.ContextInputSource" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectInput.Input" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.BitmapEffectInput">
      <topicdata name="BitmapEffectInput" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectInput" />
      <apidata name="BitmapEffectInput" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectInput.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectInput.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectInput.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BitmapEffectInput.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectInput.Clone" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectInput.CloneCurrentValue" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.BitmapEffectInput">
      <topicdata name="BitmapEffectInput" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectInput" />
      <apidata name="BitmapEffectInput" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffect" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnits" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectInput.ContextInputSource" />
        <element api="P:System.Windows.Media.Effects.BitmapEffectInput.Input" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.BitmapEffectInput">
      <topicdata name="BitmapEffectInput" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectInput" />
      <apidata name="BitmapEffectInput" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.BitmapEffectInput">
      <topicdata name="BitmapEffectInput" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.BitmapEffectInput" />
      <apidata name="BitmapEffectInput" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor" />
      <elements>
        <element api="F:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectProperty" />
        <element api="F:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnitsProperty" />
        <element api="F:System.Windows.Media.Effects.BitmapEffectInput.InputProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Media.Effects.BitmapEffectInput.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor" />
        <element api="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor(System.Windows.Media.Imaging.BitmapSource)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Media.Effects.BitmapEffectInput.#ctor" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectInput.#ctor(System.Windows.Media.Imaging.BitmapSource)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Media.Effects.BitmapEffectInput.#ctor" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Windows.Media.Imaging.BitmapSource" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffect">
      <topicdata group="api" />
      <apidata name="AreaToApplyEffect" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AreaToApplyEffect" />
      <setter name="set_AreaToApplyEffect" />
      <returns>
        <type api="T:System.Windows.Rect" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectProperty">
      <topicdata group="api" />
      <apidata name="AreaToApplyEffectProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnits">
      <topicdata group="api" />
      <apidata name="AreaToApplyEffectUnits" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AreaToApplyEffectUnits" />
      <setter name="set_AreaToApplyEffectUnits" />
      <returns>
        <type api="T:System.Windows.Media.BrushMappingMode" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectUnitsProperty">
      <topicdata group="api" />
      <apidata name="AreaToApplyEffectUnitsProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectInput.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BitmapEffectInput.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectInput.ContextInputSource">
      <topicdata group="api" />
      <apidata name="ContextInputSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContextInputSource" />
      <returns>
        <type api="T:System.Windows.Media.Imaging.BitmapSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BitmapEffectInput.Input">
      <topicdata group="api" />
      <apidata name="Input" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Input" />
      <setter name="set_Input" />
      <returns>
        <type api="T:System.Windows.Media.Imaging.BitmapSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BitmapEffectInput.InputProperty">
      <topicdata group="api" />
      <apidata name="InputProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BitmapEffectInput" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.BlurBitmapEffect">
      <topicdata group="api" />
      <apidata name="BlurBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurBitmapEffect.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.BlurBitmapEffect.KernelTypeProperty" />
        <element api="F:System.Windows.Media.Effects.BlurBitmapEffect.RadiusProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BlurBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BlurBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BlurBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BlurBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.BlurBitmapEffect.#ctor" />
        <element api="M:System.Windows.Media.Effects.BlurBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.BlurBitmapEffect.CloneCurrentValue" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BlurBitmapEffect.KernelType" />
        <element api="P:System.Windows.Media.Effects.BlurBitmapEffect.Radius" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.BlurBitmapEffect">
      <topicdata name="BlurBitmapEffect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.BlurBitmapEffect" />
      <apidata name="BlurBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurBitmapEffect.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BlurBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BlurBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BlurBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BlurBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.BlurBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.BlurBitmapEffect.CloneCurrentValue" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.BlurBitmapEffect">
      <topicdata name="BlurBitmapEffect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.BlurBitmapEffect" />
      <apidata name="BlurBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurBitmapEffect.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BlurBitmapEffect.KernelType" />
        <element api="P:System.Windows.Media.Effects.BlurBitmapEffect.Radius" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.BlurBitmapEffect">
      <topicdata name="BlurBitmapEffect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.BlurBitmapEffect" />
      <apidata name="BlurBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurBitmapEffect.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.BlurBitmapEffect">
      <topicdata name="BlurBitmapEffect" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.BlurBitmapEffect" />
      <apidata name="BlurBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurBitmapEffect.#ctor" />
      <elements>
        <element api="F:System.Windows.Media.Effects.BlurBitmapEffect.KernelTypeProperty" />
        <element api="F:System.Windows.Media.Effects.BlurBitmapEffect.RadiusProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BlurBitmapEffect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BlurBitmapEffect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BlurBitmapEffect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BlurBitmapEffect.KernelType">
      <topicdata group="api" />
      <apidata name="KernelType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KernelType" />
      <setter name="set_KernelType" />
      <returns>
        <type api="T:System.Windows.Media.Effects.KernelType" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BlurBitmapEffect.KernelTypeProperty">
      <topicdata group="api" />
      <apidata name="KernelTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BlurBitmapEffect.Radius">
      <topicdata group="api" />
      <apidata name="Radius" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Radius" />
      <setter name="set_Radius" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BlurBitmapEffect.RadiusProperty">
      <topicdata group="api" />
      <apidata name="RadiusProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.BlurEffect">
      <topicdata group="api" />
      <apidata name="BlurEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurEffect.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.BlurEffect.KernelTypeProperty" />
        <element api="F:System.Windows.Media.Effects.BlurEffect.RadiusProperty" />
        <element api="F:System.Windows.Media.Effects.BlurEffect.RenderingBiasProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BlurEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BlurEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BlurEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BlurEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BlurEffect.#ctor" />
        <element api="M:System.Windows.Media.Effects.BlurEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.BlurEffect.CloneCurrentValue" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BlurEffect.KernelType" />
        <element api="P:System.Windows.Media.Effects.BlurEffect.Radius" />
        <element api="P:System.Windows.Media.Effects.BlurEffect.RenderingBias" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.BlurEffect">
      <topicdata name="BlurEffect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.BlurEffect" />
      <apidata name="BlurEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurEffect.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.BlurEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.BlurEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.BlurEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.BlurEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BlurEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.BlurEffect.CloneCurrentValue" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.BlurEffect">
      <topicdata name="BlurEffect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.BlurEffect" />
      <apidata name="BlurEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurEffect.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.BlurEffect.KernelType" />
        <element api="P:System.Windows.Media.Effects.BlurEffect.Radius" />
        <element api="P:System.Windows.Media.Effects.BlurEffect.RenderingBias" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.BlurEffect">
      <topicdata name="BlurEffect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.BlurEffect" />
      <apidata name="BlurEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurEffect.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.BlurEffect">
      <topicdata name="BlurEffect" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.BlurEffect" />
      <apidata name="BlurEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.BlurEffect.#ctor" />
      <elements>
        <element api="F:System.Windows.Media.Effects.BlurEffect.KernelTypeProperty" />
        <element api="F:System.Windows.Media.Effects.BlurEffect.RadiusProperty" />
        <element api="F:System.Windows.Media.Effects.BlurEffect.RenderingBiasProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BlurEffect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BlurEffect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.BlurEffect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BlurEffect.KernelType">
      <topicdata group="api" />
      <apidata name="KernelType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KernelType" />
      <setter name="set_KernelType" />
      <returns>
        <type api="T:System.Windows.Media.Effects.KernelType" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BlurEffect.KernelTypeProperty">
      <topicdata group="api" />
      <apidata name="KernelTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BlurEffect.Radius">
      <topicdata group="api" />
      <apidata name="Radius" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Radius" />
      <setter name="set_Radius" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BlurEffect.RadiusProperty">
      <topicdata group="api" />
      <apidata name="RadiusProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.BlurEffect.RenderingBias">
      <topicdata group="api" />
      <apidata name="RenderingBias" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RenderingBias" />
      <setter name="set_RenderingBias" />
      <returns>
        <type api="T:System.Windows.Media.Effects.RenderingBias" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.BlurEffect.RenderingBiasProperty">
      <topicdata group="api" />
      <apidata name="RenderingBiasProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.DropShadowBitmapEffect">
      <topicdata group="api" />
      <apidata name="DropShadowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowBitmapEffect.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.ColorProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.DirectionProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.NoiseProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.OpacityProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepthProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.SoftnessProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.DropShadowBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.DropShadowBitmapEffect.#ctor" />
        <element api="M:System.Windows.Media.Effects.DropShadowBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.DropShadowBitmapEffect.CloneCurrentValue" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Color" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Direction" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Noise" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Opacity" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepth" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Softness" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.DropShadowBitmapEffect">
      <topicdata name="DropShadowBitmapEffect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
      <apidata name="DropShadowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowBitmapEffect.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.DropShadowBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.DropShadowBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.DropShadowBitmapEffect.CloneCurrentValue" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.DropShadowBitmapEffect">
      <topicdata name="DropShadowBitmapEffect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
      <apidata name="DropShadowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowBitmapEffect.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Color" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Direction" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Noise" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Opacity" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepth" />
        <element api="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Softness" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.DropShadowBitmapEffect">
      <topicdata name="DropShadowBitmapEffect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
      <apidata name="DropShadowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowBitmapEffect.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.DropShadowBitmapEffect">
      <topicdata name="DropShadowBitmapEffect" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
      <apidata name="DropShadowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowBitmapEffect.#ctor" />
      <elements>
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.ColorProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.DirectionProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.NoiseProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.OpacityProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepthProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowBitmapEffect.SoftnessProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.DropShadowBitmapEffect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.DropShadowBitmapEffect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.DropShadowBitmapEffect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Color">
      <topicdata group="api" />
      <apidata name="Color" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Color" />
      <setter name="set_Color" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowBitmapEffect.ColorProperty">
      <topicdata group="api" />
      <apidata name="ColorProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Direction" />
      <setter name="set_Direction" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowBitmapEffect.DirectionProperty">
      <topicdata group="api" />
      <apidata name="DirectionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Noise">
      <topicdata group="api" />
      <apidata name="Noise" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Noise" />
      <setter name="set_Noise" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowBitmapEffect.NoiseProperty">
      <topicdata group="api" />
      <apidata name="NoiseProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Opacity">
      <topicdata group="api" />
      <apidata name="Opacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Opacity" />
      <setter name="set_Opacity" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowBitmapEffect.OpacityProperty">
      <topicdata group="api" />
      <apidata name="OpacityProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepth">
      <topicdata group="api" />
      <apidata name="ShadowDepth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ShadowDepth" />
      <setter name="set_ShadowDepth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepthProperty">
      <topicdata group="api" />
      <apidata name="ShadowDepthProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowBitmapEffect.Softness">
      <topicdata group="api" />
      <apidata name="Softness" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Softness" />
      <setter name="set_Softness" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowBitmapEffect.SoftnessProperty">
      <topicdata group="api" />
      <apidata name="SoftnessProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.DropShadowEffect">
      <topicdata group="api" />
      <apidata name="DropShadowEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowEffect.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.BlurRadiusProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.ColorProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.DirectionProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.OpacityProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.RenderingBiasProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.ShadowDepthProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.DropShadowEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.DropShadowEffect.#ctor" />
        <element api="M:System.Windows.Media.Effects.DropShadowEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.DropShadowEffect.CloneCurrentValue" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.Color" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.Direction" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.Opacity" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.RenderingBias" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.DropShadowEffect">
      <topicdata name="DropShadowEffect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.DropShadowEffect" />
      <apidata name="DropShadowEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowEffect.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.DropShadowEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.DropShadowEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.DropShadowEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.DropShadowEffect.CloneCurrentValue" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.DropShadowEffect">
      <topicdata name="DropShadowEffect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.DropShadowEffect" />
      <apidata name="DropShadowEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowEffect.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.Color" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.Direction" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.Opacity" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.RenderingBias" />
        <element api="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.DropShadowEffect">
      <topicdata name="DropShadowEffect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.DropShadowEffect" />
      <apidata name="DropShadowEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowEffect.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.DropShadowEffect">
      <topicdata name="DropShadowEffect" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.DropShadowEffect" />
      <apidata name="DropShadowEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.DropShadowEffect.#ctor" />
      <elements>
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.BlurRadiusProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.ColorProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.DirectionProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.OpacityProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.RenderingBiasProperty" />
        <element api="F:System.Windows.Media.Effects.DropShadowEffect.ShadowDepthProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.DropShadowEffect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowEffect.BlurRadius">
      <topicdata group="api" />
      <apidata name="BlurRadius" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BlurRadius" />
      <setter name="set_BlurRadius" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowEffect.BlurRadiusProperty">
      <topicdata group="api" />
      <apidata name="BlurRadiusProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.DropShadowEffect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.DropShadowEffect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowEffect.Color">
      <topicdata group="api" />
      <apidata name="Color" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Color" />
      <setter name="set_Color" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowEffect.ColorProperty">
      <topicdata group="api" />
      <apidata name="ColorProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowEffect.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Direction" />
      <setter name="set_Direction" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowEffect.DirectionProperty">
      <topicdata group="api" />
      <apidata name="DirectionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowEffect.Opacity">
      <topicdata group="api" />
      <apidata name="Opacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Opacity" />
      <setter name="set_Opacity" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowEffect.OpacityProperty">
      <topicdata group="api" />
      <apidata name="OpacityProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowEffect.RenderingBias">
      <topicdata group="api" />
      <apidata name="RenderingBias" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RenderingBias" />
      <setter name="set_RenderingBias" />
      <returns>
        <type api="T:System.Windows.Media.Effects.RenderingBias" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowEffect.RenderingBiasProperty">
      <topicdata group="api" />
      <apidata name="RenderingBiasProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.DropShadowEffect.ShadowDepth">
      <topicdata group="api" />
      <apidata name="ShadowDepth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ShadowDepth" />
      <setter name="set_ShadowDepth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.DropShadowEffect.ShadowDepthProperty">
      <topicdata group="api" />
      <apidata name="ShadowDepthProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.EdgeProfile">
      <topicdata group="api" />
      <apidata name="EdgeProfile" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Media.Effects.EdgeProfile.Linear" />
        <element api="F:System.Windows.Media.Effects.EdgeProfile.CurvedIn" />
        <element api="F:System.Windows.Media.Effects.EdgeProfile.CurvedOut" />
        <element api="F:System.Windows.Media.Effects.EdgeProfile.BulgedUp" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.EdgeProfile.BulgedUp">
      <topicdata group="api" notopic="" />
      <apidata name="BulgedUp" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.EdgeProfile" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EdgeProfile" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.EdgeProfile.CurvedIn">
      <topicdata group="api" notopic="" />
      <apidata name="CurvedIn" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.EdgeProfile" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EdgeProfile" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.EdgeProfile.CurvedOut">
      <topicdata group="api" notopic="" />
      <apidata name="CurvedOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.EdgeProfile" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EdgeProfile" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.EdgeProfile.Linear">
      <topicdata group="api" notopic="" />
      <apidata name="Linear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.EdgeProfile" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EdgeProfile" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.Effect">
      <topicdata group="api" />
      <apidata name="Effect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
          <type api="T:System.Windows.Media.Effects.BlurEffect" ref="true" />
          <type api="T:System.Windows.Media.Effects.DropShadowEffect" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.Effect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.Effect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.CreateInstance" />
        <element api="M:System.Windows.Freezable.CreateInstanceCore" />
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.OnChanged" />
        <element api="Overload:System.Windows.Media.Effects.Effect.OnFreezablePropertyChanged">
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        </element>
        <element api="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Freezable.ReadPreamble" />
        <element api="M:System.Windows.Freezable.WritePostscript" />
        <element api="M:System.Windows.Freezable.WritePreamble" />
        <element api="Overload:System.Windows.Media.Effects.Effect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.Effect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.Effect.#ctor" />
        <element api="M:System.Windows.Media.Effects.Effect.Clone" />
        <element api="M:System.Windows.Media.Effects.Effect.CloneCurrentValue" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.Effect.EffectMapping" />
        <element api="P:System.Windows.Media.Effects.Effect.ImplicitInput" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.Effect">
      <topicdata name="Effect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.Effect" />
      <apidata name="Effect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.Effect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.Effect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.CreateInstance" />
        <element api="M:System.Windows.Freezable.CreateInstanceCore" />
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Freezable.OnChanged" />
        <element api="Overload:System.Windows.Media.Effects.Effect.OnFreezablePropertyChanged">
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        </element>
        <element api="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Freezable.ReadPreamble" />
        <element api="M:System.Windows.Freezable.WritePostscript" />
        <element api="M:System.Windows.Freezable.WritePreamble" />
        <element api="Overload:System.Windows.Media.Effects.Effect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.Effect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.Effect.Clone" />
        <element api="M:System.Windows.Media.Effects.Effect.CloneCurrentValue" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.Effect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.Effect">
      <topicdata name="Effect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.Effect" />
      <apidata name="Effect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.Effect.EffectMapping" />
        <element api="P:System.Windows.Media.Effects.Effect.ImplicitInput" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.Effect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.Effect">
      <topicdata name="Effect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.Effect" />
      <apidata name="Effect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.Effect" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.Effect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.Effect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.Effect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.Effect.EffectMapping">
      <topicdata group="api" />
      <apidata name="EffectMapping" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_EffectMapping" />
      <returns>
        <type api="T:System.Windows.Media.GeneralTransform" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.Effect.ImplicitInput">
      <topicdata group="api" />
      <apidata name="ImplicitInput" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ImplicitInput" />
      <returns>
        <type api="T:System.Windows.Media.Brush" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Media.Effects.EmbossBitmapEffect">
      <topicdata group="api" />
      <apidata name="EmbossBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.EmbossBitmapEffect.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty" />
        <element api="F:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.EmbossBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.EmbossBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.EmbossBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.EmbossBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.EmbossBitmapEffect.#ctor" />
        <element api="M:System.Windows.Media.Effects.EmbossBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle" />
        <element api="P:System.Windows.Media.Effects.EmbossBitmapEffect.Relief" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.EmbossBitmapEffect">
      <topicdata name="EmbossBitmapEffect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
      <apidata name="EmbossBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.EmbossBitmapEffect.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.EmbossBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.EmbossBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.EmbossBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.EmbossBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.EmbossBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.EmbossBitmapEffect">
      <topicdata name="EmbossBitmapEffect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
      <apidata name="EmbossBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.EmbossBitmapEffect.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle" />
        <element api="P:System.Windows.Media.Effects.EmbossBitmapEffect.Relief" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.EmbossBitmapEffect">
      <topicdata name="EmbossBitmapEffect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
      <apidata name="EmbossBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.EmbossBitmapEffect.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.EmbossBitmapEffect">
      <topicdata name="EmbossBitmapEffect" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
      <apidata name="EmbossBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.EmbossBitmapEffect.#ctor" />
      <elements>
        <element api="F:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty" />
        <element api="F:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.EmbossBitmapEffect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.EmbossBitmapEffect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.EmbossBitmapEffect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngle">
      <topicdata group="api" />
      <apidata name="LightAngle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LightAngle" />
      <setter name="set_LightAngle" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.EmbossBitmapEffect.LightAngleProperty">
      <topicdata group="api" />
      <apidata name="LightAngleProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.EmbossBitmapEffect.Relief">
      <topicdata group="api" />
      <apidata name="Relief" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Relief" />
      <setter name="set_Relief" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefProperty">
      <topicdata group="api" />
      <apidata name="ReliefProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.EmbossBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.KernelType">
      <topicdata group="api" />
      <apidata name="KernelType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Media.Effects.KernelType.Gaussian" />
        <element api="F:System.Windows.Media.Effects.KernelType.Box" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.KernelType.Box">
      <topicdata group="api" notopic="" />
      <apidata name="Box" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.KernelType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.KernelType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.KernelType.Gaussian">
      <topicdata group="api" notopic="" />
      <apidata name="Gaussian" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.KernelType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.KernelType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.OuterGlowBitmapEffect">
      <topicdata group="api" />
      <apidata name="OuterGlowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Effects.BitmapEffect" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty" />
        <element api="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty" />
        <element api="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty" />
        <element api="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.OuterGlowBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.OuterGlowBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.OuterGlowBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.OuterGlowBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor" />
        <element api="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CloneCurrentValue" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" />
        <element api="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" />
        <element api="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" />
        <element api="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.OuterGlowBitmapEffect">
      <topicdata name="OuterGlowBitmapEffect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
      <apidata name="OuterGlowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.OuterGlowBitmapEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.OuterGlowBitmapEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.OuterGlowBitmapEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.OuterGlowBitmapEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)" />
        <element api="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CloneCurrentValue" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.OuterGlowBitmapEffect">
      <topicdata name="OuterGlowBitmapEffect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
      <apidata name="OuterGlowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" />
        <element api="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" />
        <element api="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" />
        <element api="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.OuterGlowBitmapEffect">
      <topicdata name="OuterGlowBitmapEffect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
      <apidata name="OuterGlowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.OuterGlowBitmapEffect">
      <topicdata name="OuterGlowBitmapEffect" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
      <apidata name="OuterGlowBitmapEffect" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor" />
      <elements>
        <element api="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty" />
        <element api="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty" />
        <element api="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty" />
        <element api="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor">
      <topicdata group="api" />
      <apidata name="GlowColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GlowColor" />
      <setter name="set_GlowColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty">
      <topicdata group="api" />
      <apidata name="GlowColorProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize">
      <topicdata group="api" />
      <apidata name="GlowSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GlowSize" />
      <setter name="set_GlowSize" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty">
      <topicdata group="api" />
      <apidata name="GlowSizeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise">
      <topicdata group="api" />
      <apidata name="Noise" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Noise" />
      <setter name="set_Noise" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty">
      <topicdata group="api" />
      <apidata name="NoiseProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity">
      <topicdata group="api" />
      <apidata name="Opacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Opacity" />
      <setter name="set_Opacity" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty">
      <topicdata group="api" />
      <apidata name="OpacityProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.PixelShader">
      <topicdata group="api" />
      <apidata name="PixelShader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.PixelShader.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="E:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered" />
        <element api="F:System.Windows.Media.Effects.PixelShader.ShaderRenderModeProperty" />
        <element api="F:System.Windows.Media.Effects.PixelShader.UriSourceProperty" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.PixelShader.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.PixelShader.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.PixelShader.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.PixelShader.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.PixelShader.#ctor" />
        <element api="M:System.Windows.Media.Effects.PixelShader.Clone" />
        <element api="M:System.Windows.Media.Effects.PixelShader.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.PixelShader.SetStreamSource(System.IO.Stream)" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.PixelShader.ShaderRenderMode" />
        <element api="P:System.Windows.Media.Effects.PixelShader.UriSource" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.PixelShader">
      <topicdata name="PixelShader" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.PixelShader" />
      <apidata name="PixelShader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.PixelShader.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.PixelShader.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.PixelShader.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="Overload:System.Windows.Media.Effects.PixelShader.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.PixelShader.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.PixelShader.Clone" />
        <element api="M:System.Windows.Media.Effects.PixelShader.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.PixelShader.SetStreamSource(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.PixelShader">
      <topicdata name="PixelShader" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.PixelShader" />
      <apidata name="PixelShader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.PixelShader.#ctor" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.PixelShader.ShaderRenderMode" />
        <element api="P:System.Windows.Media.Effects.PixelShader.UriSource" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.PixelShader">
      <topicdata name="PixelShader" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.PixelShader" />
      <apidata name="PixelShader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.PixelShader.#ctor" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="E:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.PixelShader">
      <topicdata name="PixelShader" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.PixelShader" />
      <apidata name="PixelShader" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Windows.Media.Effects.PixelShader.#ctor" />
      <elements>
        <element api="F:System.Windows.Media.Effects.PixelShader.ShaderRenderModeProperty" />
        <element api="F:System.Windows.Media.Effects.PixelShader.UriSourceProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.PixelShader.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.PixelShader.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.PixelShader.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered">
      <topicdata group="api" />
      <apidata name="InvalidPixelShaderEncountered" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_InvalidPixelShaderEncountered" />
      <remover name="remove_InvalidPixelShaderEncountered" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.PixelShader.SetStreamSource(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="SetStreamSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.PixelShader.ShaderRenderMode">
      <topicdata group="api" />
      <apidata name="ShaderRenderMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ShaderRenderMode" />
      <setter name="set_ShaderRenderMode" />
      <returns>
        <type api="T:System.Windows.Media.Effects.ShaderRenderMode" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.PixelShader.ShaderRenderModeProperty">
      <topicdata group="api" />
      <apidata name="ShaderRenderModeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.PixelShader.UriSource">
      <topicdata group="api" />
      <apidata name="UriSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UriSource" />
      <setter name="set_UriSource" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.PixelShader.UriSourceProperty">
      <topicdata group="api" />
      <apidata name="UriSourceProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.RenderingBias">
      <topicdata group="api" />
      <apidata name="RenderingBias" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Media.Effects.RenderingBias.Performance" />
        <element api="F:System.Windows.Media.Effects.RenderingBias.Quality" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.RenderingBias.Performance">
      <topicdata group="api" notopic="" />
      <apidata name="Performance" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.RenderingBias" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.RenderingBias" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.RenderingBias.Quality">
      <topicdata group="api" notopic="" />
      <apidata name="Quality" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.RenderingBias" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.RenderingBias" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.SamplingMode">
      <topicdata group="api" />
      <apidata name="SamplingMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Media.Effects.SamplingMode.NearestNeighbor" />
        <element api="F:System.Windows.Media.Effects.SamplingMode.Bilinear" />
        <element api="F:System.Windows.Media.Effects.SamplingMode.Auto" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.SamplingMode.Auto">
      <topicdata group="api" notopic="" />
      <apidata name="Auto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.SamplingMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.SamplingMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.SamplingMode.Bilinear">
      <topicdata group="api" notopic="" />
      <apidata name="Bilinear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.SamplingMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.SamplingMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.SamplingMode.NearestNeighbor">
      <topicdata group="api" notopic="" />
      <apidata name="NearestNeighbor" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.SamplingMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.SamplingMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.ShaderEffect">
      <topicdata group="api" />
      <apidata name="ShaderEffect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Media.Effects.Effect" ref="true" />
          <type api="T:System.Windows.Media.Animation.Animatable" ref="true" />
          <type api="T:System.Windows.Freezable" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
        <element api="F:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Freezable.CreateInstance" />
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="M:System.Windows.Freezable.OnChanged" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.OnFreezablePropertyChanged">
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        </element>
        <element api="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Freezable.ReadPreamble" />
        <element api="M:System.Windows.Freezable.WritePostscript" />
        <element api="M:System.Windows.Freezable.WritePreamble" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.#ctor" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback">
          <element api="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)" />
          <element api="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty">
          <element api="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)" />
          <element api="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)" />
        </element>
        <element api="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.Effect.EffectMapping" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PaddingBottom" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PaddingLeft" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PaddingRight" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PaddingTop" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Media.Effects.ShaderEffect">
      <topicdata name="ShaderEffect" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Media.Effects.ShaderEffect" />
      <apidata name="ShaderEffect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Freezable.CreateInstance" />
        <element api="M:System.Windows.Freezable.Freeze" />
        <element api="M:System.Windows.Freezable.GetAsFrozen" />
        <element api="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
        <element api="M:System.Windows.Freezable.OnChanged" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.OnFreezablePropertyChanged">
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
          <element api="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        </element>
        <element api="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.Freezable.ReadPreamble" />
        <element api="M:System.Windows.Freezable.WritePostscript" />
        <element api="M:System.Windows.Freezable.WritePreamble" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.ApplyAnimationClock">
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
          <element api="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.BeginAnimation">
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
          <element api="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
        </element>
        <element api="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)" />
        <element api="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.Clone" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)" />
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback">
          <element api="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)" />
          <element api="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)" />
        </element>
        <element api="Overload:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty">
          <element api="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)" />
          <element api="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)" />
        </element>
        <element api="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Media.Effects.ShaderEffect">
      <topicdata name="ShaderEffect" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Media.Effects.ShaderEffect" />
      <apidata name="ShaderEffect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Freezable.CanFreeze" />
        <element api="P:System.Windows.Freezable.IsFrozen" />
        <element api="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties" />
        <element api="P:System.Windows.Media.Effects.Effect.EffectMapping" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PaddingBottom" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PaddingLeft" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PaddingRight" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PaddingTop" />
        <element api="P:System.Windows.Media.Effects.ShaderEffect.PixelShader" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Media.Effects.ShaderEffect">
      <topicdata name="ShaderEffect" group="list" subgroup="Events" typeTopicId="T:System.Windows.Media.Effects.ShaderEffect" />
      <apidata name="ShaderEffect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.Freezable.Changed" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Media.Effects.ShaderEffect">
      <topicdata name="ShaderEffect" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Media.Effects.ShaderEffect" />
      <apidata name="ShaderEffect" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback">
      <topicdata name="PixelShaderSamplerCallback" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="PixelShaderSamplerCallback" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty">
      <topicdata name="RegisterPixelShaderSamplerProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RegisterPixelShaderSamplerProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)" />
        <element api="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.CloneCore(System.Windows.Freezable)">
      <topicdata group="api" />
      <apidata name="CloneCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceFreezable">
          <type api="T:System.Windows.Freezable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValue">
      <topicdata group="api" />
      <apidata name="CloneCurrentValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore(System.Windows.Freezable)">
      <topicdata group="api" />
      <apidata name="CloneCurrentValueCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceFreezable">
          <type api="T:System.Windows.Freezable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.CreateInstanceCore">
      <topicdata group="api" />
      <apidata name="CreateInstanceCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.CreateInstanceCore">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.Freezable" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex">
      <topicdata group="api" />
      <apidata name="DdxUvDdyUvRegisterIndex" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DdxUvDdyUvRegisterIndex" />
      <setter name="set_DdxUvDdyUvRegisterIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore(System.Windows.Freezable)">
      <topicdata group="api" />
      <apidata name="GetAsFrozenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceFreezable">
          <type api="T:System.Windows.Freezable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
      <topicdata group="api" />
      <apidata name="GetCurrentValueAsFrozenCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <type api="T:System.Windows.Freezable" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceFreezable">
          <type api="T:System.Windows.Freezable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.ShaderEffect.PaddingBottom">
      <topicdata group="api" />
      <apidata name="PaddingBottom" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PaddingBottom" />
      <setter name="set_PaddingBottom" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.ShaderEffect.PaddingLeft">
      <topicdata group="api" />
      <apidata name="PaddingLeft" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PaddingLeft" />
      <setter name="set_PaddingLeft" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.ShaderEffect.PaddingRight">
      <topicdata group="api" />
      <apidata name="PaddingRight" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PaddingRight" />
      <setter name="set_PaddingRight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.ShaderEffect.PaddingTop">
      <topicdata group="api" />
      <apidata name="PaddingTop" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PaddingTop" />
      <setter name="set_PaddingTop" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Media.Effects.ShaderEffect.PixelShader">
      <topicdata group="api" />
      <apidata name="PixelShader" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PixelShader" />
      <setter name="set_PixelShader" />
      <returns>
        <type api="T:System.Windows.Media.Effects.PixelShader" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)">
      <topicdata group="api" />
      <apidata name="PixelShaderConstantCallback" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="floatRegisterIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.PropertyChangedCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.ShaderEffect.PixelShaderProperty">
      <topicdata group="api" />
      <apidata name="PixelShaderProperty" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)">
      <topicdata group="api" />
      <apidata name="PixelShaderSamplerCallback" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="samplerRegisterIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.PropertyChangedCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)">
      <topicdata group="api" />
      <apidata name="PixelShaderSamplerCallback" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="samplerRegisterIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="samplingMode">
          <type api="T:System.Windows.Media.Effects.SamplingMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.PropertyChangedCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32)">
      <topicdata group="api" />
      <apidata name="RegisterPixelShaderSamplerProperty" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dpName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="samplerRegisterIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty(System.String,System.Type,System.Int32,System.Windows.Media.Effects.SamplingMode)">
      <topicdata group="api" />
      <apidata name="RegisterPixelShaderSamplerProperty" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dpName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="samplerRegisterIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="samplingMode">
          <type api="T:System.Windows.Media.Effects.SamplingMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderValue(System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="UpdateShaderValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderEffect" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Media.Effects.ShaderRenderMode">
      <topicdata group="api" />
      <apidata name="ShaderRenderMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Media.Effects.ShaderRenderMode.Auto" />
        <element api="F:System.Windows.Media.Effects.ShaderRenderMode.SoftwareOnly" />
        <element api="F:System.Windows.Media.Effects.ShaderRenderMode.HardwareOnly" />
      </elements>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.ShaderRenderMode.Auto">
      <topicdata group="api" notopic="" />
      <apidata name="Auto" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.ShaderRenderMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderRenderMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.ShaderRenderMode.HardwareOnly">
      <topicdata group="api" notopic="" />
      <apidata name="HardwareOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.ShaderRenderMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderRenderMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Media.Effects.ShaderRenderMode.SoftwareOnly">
      <topicdata group="api" notopic="" />
      <apidata name="SoftwareOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Media.Effects.ShaderRenderMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationCore" module="PresentationCore" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.0" />
        </library>
        <namespace api="N:System.Windows.Media.Effects" />
        <type api="T:System.Windows.Media.Effects.ShaderRenderMode" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>