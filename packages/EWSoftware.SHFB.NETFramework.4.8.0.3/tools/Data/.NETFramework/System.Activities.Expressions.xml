<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Activities">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>97bdccfe-43bf-4c17-991d-c797c2ef2243</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Activities.Expressions">
      <topicdata group="api" />
      <apidata name="System.Activities.Expressions" group="namespace" />
      <elements>
        <element api="T:System.Activities.Expressions.ExpressionServices" />
        <element api="T:System.Activities.Expressions.CompiledExpressionInvoker" />
        <element api="T:System.Activities.Expressions.Add`3" />
        <element api="T:System.Activities.Expressions.AssemblyReference" />
        <element api="T:System.Activities.Expressions.Subtract`3" />
        <element api="T:System.Activities.Expressions.Multiply`3" />
        <element api="T:System.Activities.Expressions.Divide`3" />
        <element api="T:System.Activities.Expressions.AndAlso" />
        <element api="T:System.Activities.Expressions.OrElse" />
        <element api="T:System.Activities.Expressions.Not`2" />
        <element api="T:System.Activities.Expressions.PropertyReference`2" />
        <element api="T:System.Activities.Expressions.PropertyValue`2" />
        <element api="T:System.Activities.Expressions.And`3" />
        <element api="T:System.Activities.Expressions.Equal`3" />
        <element api="T:System.Activities.Expressions.GreaterThan`3" />
        <element api="T:System.Activities.Expressions.GreaterThanOrEqual`3" />
        <element api="T:System.Activities.Expressions.LessThan`3" />
        <element api="T:System.Activities.Expressions.LessThanOrEqual`3" />
        <element api="T:System.Activities.Expressions.NotEqual`3" />
        <element api="T:System.Activities.Expressions.Or`3" />
        <element api="T:System.Activities.Expressions.ArrayItemValue`1" />
        <element api="T:System.Activities.Expressions.ArrayItemReference`1" />
        <element api="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
        <element api="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
        <element api="T:System.Activities.Expressions.FieldReference`2" />
        <element api="T:System.Activities.Expressions.FieldValue`2" />
        <element api="T:System.Activities.Expressions.Cast`2" />
        <element api="T:System.Activities.Expressions.As`2" />
        <element api="T:System.Activities.Expressions.New`1" />
        <element api="T:System.Activities.Expressions.NewArray`1" />
        <element api="T:System.Activities.Expressions.LambdaSerializationException" />
        <element api="T:System.Activities.Expressions.LambdaReference`1" />
        <element api="T:System.Activities.Expressions.LambdaValue`1" />
        <element api="T:System.Activities.Expressions.Literal`1" />
        <element api="T:System.Activities.Expressions.ArgumentReference`1" />
        <element api="T:System.Activities.Expressions.ArgumentValue`1" />
        <element api="T:System.Activities.Expressions.DelegateArgumentReference`1" />
        <element api="T:System.Activities.Expressions.DelegateArgumentValue`1" />
        <element api="T:System.Activities.Expressions.VariableReference`1" />
        <element api="T:System.Activities.Expressions.VariableValue`1" />
        <element api="T:System.Activities.Expressions.InvokeMethod`1" />
        <element api="T:System.Activities.Expressions.InvokeFunc`1" />
        <element api="T:System.Activities.Expressions.InvokeFunc`2" />
        <element api="T:System.Activities.Expressions.InvokeFunc`3" />
        <element api="T:System.Activities.Expressions.InvokeFunc`4" />
        <element api="T:System.Activities.Expressions.InvokeFunc`5" />
        <element api="T:System.Activities.Expressions.InvokeFunc`6" />
        <element api="T:System.Activities.Expressions.InvokeFunc`7" />
        <element api="T:System.Activities.Expressions.InvokeFunc`8" />
        <element api="T:System.Activities.Expressions.InvokeFunc`9" />
        <element api="T:System.Activities.Expressions.InvokeFunc`10" />
        <element api="T:System.Activities.Expressions.InvokeFunc`11" />
        <element api="T:System.Activities.Expressions.InvokeFunc`12" />
        <element api="T:System.Activities.Expressions.InvokeFunc`13" />
        <element api="T:System.Activities.Expressions.InvokeFunc`14" />
        <element api="T:System.Activities.Expressions.InvokeFunc`15" />
        <element api="T:System.Activities.Expressions.InvokeFunc`16" />
        <element api="T:System.Activities.Expressions.InvokeFunc`17" />
        <element api="T:System.Activities.Expressions.IndexerReference`2" />
        <element api="T:System.Activities.Expressions.ITextExpression" />
        <element api="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />
        <element api="T:System.Activities.Expressions.TextExpression" />
        <element api="T:System.Activities.Expressions.ValueTypeFieldReference`2" />
        <element api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />
        <element api="T:System.Activities.Expressions.ValueTypePropertyReference`2" />
      </elements>
    </api>
    <api id="T:System.Activities.Expressions.Add`3">
      <topicdata group="api" />
      <apidata name="Add" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Add`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Add`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Add`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.Add`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Add`3.Checked" />
        <element api="P:System.Activities.Expressions.Add`3.Left" />
        <element api="P:System.Activities.Expressions.Add`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.Add`3">
      <topicdata name="Add" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.Add`3" />
      <apidata name="Add" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Add`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Add`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.Add`3">
      <topicdata name="Add" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.Add`3" />
      <apidata name="Add" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Add`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Add`3.Checked" />
        <element api="P:System.Activities.Expressions.Add`3.Left" />
        <element api="P:System.Activities.Expressions.Add`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Add`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Add`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Add`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.Add`3.Checked">
      <topicdata group="api" />
      <apidata name="Checked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Checked" />
      <setter name="set_Checked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Add`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Add`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.Add`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Add`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Add`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.Add`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Add`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.And`3">
      <topicdata group="api" />
      <apidata name="And" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.And`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.And`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.And`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.And`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.And`3.Left" />
        <element api="P:System.Activities.Expressions.And`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.And`3">
      <topicdata name="And" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.And`3" />
      <apidata name="And" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.And`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.And`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.And`3">
      <topicdata name="And" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.And`3" />
      <apidata name="And" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.And`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.And`3.Left" />
        <element api="P:System.Activities.Expressions.And`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.And`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.And`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.And`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.And`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.And`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.And`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.And`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.And`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.And`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.AndAlso">
      <topicdata group="api" />
      <apidata name="AndAlso" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.AndAlso.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.AndAlso.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.AndAlso.Left" />
        <element api="P:System.Activities.Expressions.AndAlso.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.AndAlso">
      <topicdata name="AndAlso" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.AndAlso" />
      <apidata name="AndAlso" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.AndAlso.#ctor" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AndAlso" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.AndAlso">
      <topicdata name="AndAlso" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.AndAlso" />
      <apidata name="AndAlso" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.AndAlso.#ctor" />
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.AndAlso.Left" />
        <element api="P:System.Activities.Expressions.AndAlso.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AndAlso" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.AndAlso.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AndAlso" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.AndAlso.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AndAlso" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.AndAlso.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AndAlso" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.ArgumentReference`1">
      <topicdata group="api" />
      <apidata name="ArgumentReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArgumentReference`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.ArgumentReference`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.ArgumentReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.ArgumentReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.Expressions.ArgumentReference`1.#ctor">
          <element api="M:System.Activities.Expressions.ArgumentReference`1.#ctor" />
          <element api="M:System.Activities.Expressions.ArgumentReference`1.#ctor(System.String)" />
        </element>
        <element api="M:System.Activities.Expressions.ArgumentReference`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ArgumentReference`1.ArgumentName" />
        <element api="P:System.Activities.Expressions.ArgumentReference`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.ArgumentReference`1">
      <topicdata name="ArgumentReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.ArgumentReference`1" />
      <apidata name="ArgumentReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArgumentReference`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Expressions.ArgumentReference`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentReference`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.ArgumentReference`1">
      <topicdata name="ArgumentReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.ArgumentReference`1" />
      <apidata name="ArgumentReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArgumentReference`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ArgumentReference`1.ArgumentName" />
        <element api="P:System.Activities.Expressions.ArgumentReference`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentReference`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.ArgumentReference`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.Expressions.ArgumentReference`1.#ctor" />
        <element api="M:System.Activities.Expressions.ArgumentReference`1.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ArgumentReference`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.ArgumentReference`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ArgumentReference`1.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.ArgumentReference`1.#ctor" />
      <parameters>
        <parameter name="argumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ArgumentReference`1.ArgumentName">
      <topicdata group="api" />
      <apidata name="ArgumentName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ArgumentName" />
      <setter name="set_ArgumentName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ArgumentReference`1.LocationReference">
      <topicdata group="api" />
      <apidata name="LocationReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference">
          <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.ArgumentReference`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LocationReference" />
      <returns>
        <type api="T:System.Activities.LocationReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ArgumentReference`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.Activity.ToString">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.ArgumentValue`1">
      <topicdata group="api" />
      <apidata name="ArgumentValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArgumentValue`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.ArgumentValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.ArgumentValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.ArgumentValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.Expressions.ArgumentValue`1.#ctor">
          <element api="M:System.Activities.Expressions.ArgumentValue`1.#ctor" />
          <element api="M:System.Activities.Expressions.ArgumentValue`1.#ctor(System.String)" />
        </element>
        <element api="M:System.Activities.Expressions.ArgumentValue`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ArgumentValue`1.ArgumentName" />
        <element api="P:System.Activities.Expressions.ArgumentValue`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.ArgumentValue`1">
      <topicdata name="ArgumentValue" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.ArgumentValue`1" />
      <apidata name="ArgumentValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArgumentValue`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Expressions.ArgumentValue`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentValue`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.ArgumentValue`1">
      <topicdata name="ArgumentValue" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.ArgumentValue`1" />
      <apidata name="ArgumentValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArgumentValue`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ArgumentValue`1.ArgumentName" />
        <element api="P:System.Activities.Expressions.ArgumentValue`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentValue`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.ArgumentValue`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.Expressions.ArgumentValue`1.#ctor" />
        <element api="M:System.Activities.Expressions.ArgumentValue`1.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ArgumentValue`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.ArgumentValue`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ArgumentValue`1.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.ArgumentValue`1.#ctor" />
      <parameters>
        <parameter name="argumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ArgumentValue`1.ArgumentName">
      <topicdata group="api" />
      <apidata name="ArgumentName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ArgumentName" />
      <setter name="set_ArgumentName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ArgumentValue`1.LocationReference">
      <topicdata group="api" />
      <apidata name="LocationReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference">
          <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.ArgumentValue`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LocationReference" />
      <returns>
        <type api="T:System.Activities.LocationReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ArgumentValue`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.Activity.ToString">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.ArrayItemReference`1">
      <topicdata group="api" />
      <apidata name="ArrayItemReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArrayItemReference`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TItem" index="0" api="T:System.Activities.Expressions.ArrayItemReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TItem" index="0" api="T:System.Activities.Expressions.ArrayItemReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.ArrayItemReference`1.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ArrayItemReference`1.Array" />
        <element api="P:System.Activities.Expressions.ArrayItemReference`1.Index" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.ArrayItemReference`1">
      <topicdata name="ArrayItemReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.ArrayItemReference`1" />
      <apidata name="ArrayItemReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArrayItemReference`1.#ctor" />
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemReference`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.ArrayItemReference`1">
      <topicdata name="ArrayItemReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.ArrayItemReference`1" />
      <apidata name="ArrayItemReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArrayItemReference`1.#ctor" />
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ArrayItemReference`1.Array" />
        <element api="P:System.Activities.Expressions.ArrayItemReference`1.Index" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemReference`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ArrayItemReference`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ArrayItemReference`1.Array">
      <topicdata group="api" />
      <apidata name="Array" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Array" />
      <setter name="set_Array" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <template name="TItem" index="0" api="T:System.Activities.Expressions.ArrayItemReference`1" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemReference`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.ArrayItemReference`1.Index">
      <topicdata group="api" />
      <apidata name="Index" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Index" />
      <setter name="set_Index" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemReference`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.ArrayItemValue`1">
      <topicdata group="api" />
      <apidata name="ArrayItemValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArrayItemValue`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TItem" index="0" api="T:System.Activities.Expressions.ArrayItemValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TItem" index="0" api="T:System.Activities.Expressions.ArrayItemValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.ArrayItemValue`1.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ArrayItemValue`1.Array" />
        <element api="P:System.Activities.Expressions.ArrayItemValue`1.Index" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.ArrayItemValue`1">
      <topicdata name="ArrayItemValue" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.ArrayItemValue`1" />
      <apidata name="ArrayItemValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArrayItemValue`1.#ctor" />
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemValue`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.ArrayItemValue`1">
      <topicdata name="ArrayItemValue" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.ArrayItemValue`1" />
      <apidata name="ArrayItemValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ArrayItemValue`1.#ctor" />
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ArrayItemValue`1.Array" />
        <element api="P:System.Activities.Expressions.ArrayItemValue`1.Index" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemValue`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ArrayItemValue`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemValue`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ArrayItemValue`1.Array">
      <topicdata group="api" />
      <apidata name="Array" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Array" />
      <setter name="set_Array" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <template name="TItem" index="0" api="T:System.Activities.Expressions.ArrayItemValue`1" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemValue`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.ArrayItemValue`1.Index">
      <topicdata group="api" />
      <apidata name="Index" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Index" />
      <setter name="set_Index" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ArrayItemValue`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.As`2">
      <topicdata group="api" />
      <apidata name="As" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.As`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.As`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.As`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.As`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.As`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.As`2">
      <topicdata name="As" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.As`2" />
      <apidata name="As" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.As`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.As`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.As`2">
      <topicdata name="As" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.As`2" />
      <apidata name="As" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.As`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.As`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.As`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.As`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.As`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.As`2.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operand" />
      <setter name="set_Operand" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.As`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.As`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.AssemblyReference">
      <topicdata group="api" />
      <apidata name="AssemblyReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.Expressions.AssemblyReference.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Expressions.AssemblyReference.#ctor" />
        <element api="M:System.Activities.Expressions.AssemblyReference.LoadAssembly" />
        <element api="Overload:System.Activities.Expressions.AssemblyReference.op_Implicit">
          <element api="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.Assembly)~System.Activities.Expressions.AssemblyReference" />
          <element api="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.AssemblyName)~System.Activities.Expressions.AssemblyReference" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Expressions.AssemblyReference.Assembly" />
        <element api="P:System.Activities.Expressions.AssemblyReference.AssemblyName" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.AssemblyReferenceConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.AssemblyReference">
      <topicdata name="AssemblyReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.AssemblyReference" />
      <apidata name="AssemblyReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.Expressions.AssemblyReference.#ctor" />
      <elements>
        <element api="M:System.Activities.Expressions.AssemblyReference.LoadAssembly" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" />
      </containers>
    </api>
    <api id="Operators.T:System.Activities.Expressions.AssemblyReference">
      <topicdata name="AssemblyReference" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Activities.Expressions.AssemblyReference" />
      <apidata name="AssemblyReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.Expressions.AssemblyReference.#ctor" />
      <elements>
        <element api="Overload:System.Activities.Expressions.AssemblyReference.op_Implicit">
          <element api="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.Assembly)~System.Activities.Expressions.AssemblyReference" />
          <element api="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.AssemblyName)~System.Activities.Expressions.AssemblyReference" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.AssemblyReference">
      <topicdata name="AssemblyReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.AssemblyReference" />
      <apidata name="AssemblyReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.Expressions.AssemblyReference.#ctor" />
      <elements>
        <element api="P:System.Activities.Expressions.AssemblyReference.Assembly" />
        <element api="P:System.Activities.Expressions.AssemblyReference.AssemblyName" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.AssemblyReference.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.Assembly)~System.Activities.Expressions.AssemblyReference" />
        <element api="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.AssemblyName)~System.Activities.Expressions.AssemblyReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.AssemblyReference.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.AssemblyReference.Assembly">
      <topicdata group="api" />
      <apidata name="Assembly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Assembly" />
      <setter name="set_Assembly" />
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.AssemblyReference.AssemblyName">
      <topicdata group="api" />
      <apidata name="AssemblyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblyName" />
      <setter name="set_AssemblyName" />
      <returns>
        <type api="T:System.Reflection.AssemblyName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.AssemblyReference.LoadAssembly">
      <topicdata group="api" />
      <apidata name="LoadAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.Assembly)~System.Activities.Expressions.AssemblyReference">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.Expressions.AssemblyReference.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.AssemblyReference.op_Implicit(System.Reflection.AssemblyName)~System.Activities.Expressions.AssemblyReference">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.Expressions.AssemblyReference.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assemblyName">
          <type api="T:System.Reflection.AssemblyName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.Cast`2">
      <topicdata group="api" />
      <apidata name="Cast" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Cast`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.Cast`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.Cast`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.Cast`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Cast`2.Checked" />
        <element api="P:System.Activities.Expressions.Cast`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.Cast`2">
      <topicdata name="Cast" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.Cast`2" />
      <apidata name="Cast" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Cast`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Cast`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.Cast`2">
      <topicdata name="Cast" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.Cast`2" />
      <apidata name="Cast" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Cast`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Cast`2.Checked" />
        <element api="P:System.Activities.Expressions.Cast`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Cast`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Cast`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Cast`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.Cast`2.Checked">
      <topicdata group="api" />
      <apidata name="Checked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Checked" />
      <setter name="set_Checked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Cast`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Cast`2.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operand" />
      <setter name="set_Operand" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.Cast`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Cast`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.CompiledExpressionInvoker">
      <topicdata group="api" />
      <apidata name="CompiledExpressionInvoker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.#ctor(System.Activities.Expressions.ITextExpression,System.Boolean,System.Activities.CodeActivityMetadata)" />
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRoot(System.Object)" />
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRootForImplementation(System.Object)" />
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.InvokeExpression(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRoot(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)" />
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRootForImplementation(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Expressions.CompiledExpressionInvoker.IsStaticallyCompiled" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.CompiledExpressionInvoker">
      <topicdata name="CompiledExpressionInvoker" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.CompiledExpressionInvoker" />
      <apidata name="CompiledExpressionInvoker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRoot(System.Object)" />
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRootForImplementation(System.Object)" />
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.InvokeExpression(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRoot(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)" />
        <element api="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRootForImplementation(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.CompiledExpressionInvoker" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.CompiledExpressionInvoker">
      <topicdata name="CompiledExpressionInvoker" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.CompiledExpressionInvoker" />
      <apidata name="CompiledExpressionInvoker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.Expressions.CompiledExpressionInvoker.IsStaticallyCompiled" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.CompiledExpressionInvoker" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.CompiledExpressionInvoker.#ctor(System.Activities.Expressions.ITextExpression,System.Boolean,System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Expressions.ITextExpression" ref="true" />
        </parameter>
        <parameter name="isReference">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="metadata">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.CompiledExpressionInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRoot(System.Object)">
      <topicdata group="api" />
      <apidata name="GetCompiledExpressionRoot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.CompiledExpressionInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.CompiledExpressionInvoker.GetCompiledExpressionRootForImplementation(System.Object)">
      <topicdata group="api" />
      <apidata name="GetCompiledExpressionRootForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.CompiledExpressionInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.CompiledExpressionInvoker.InvokeExpression(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="InvokeExpression" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activityContext">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.CompiledExpressionInvoker" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.CompiledExpressionInvoker.IsStaticallyCompiled">
      <topicdata group="api" />
      <apidata name="IsStaticallyCompiled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsStaticallyCompiled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.CompiledExpressionInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRoot(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)">
      <topicdata group="api" />
      <apidata name="SetCompiledExpressionRoot" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="compiledExpressionRoot">
          <type api="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.CompiledExpressionInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.CompiledExpressionInvoker.SetCompiledExpressionRootForImplementation(System.Object,System.Activities.XamlIntegration.ICompiledExpressionRoot)">
      <topicdata group="api" />
      <apidata name="SetCompiledExpressionRootForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="compiledExpressionRoot">
          <type api="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.CompiledExpressionInvoker" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.DelegateArgumentReference`1">
      <topicdata group="api" />
      <apidata name="DelegateArgumentReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor" contentProperty="P:System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.DelegateArgumentReference`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.DelegateArgumentReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.DelegateArgumentReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="Overload:System.Activities.Expressions.DelegateArgumentReference`1.#ctor">
          <element api="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor" />
          <element api="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor(System.Activities.DelegateArgument)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument" />
        <element api="P:System.Activities.Expressions.DelegateArgumentReference`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DelegateArgument</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.DelegateArgumentReference`1">
      <topicdata name="DelegateArgumentReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.DelegateArgumentReference`1" />
      <apidata name="DelegateArgumentReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor" contentProperty="P:System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentReference`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.DelegateArgumentReference`1">
      <topicdata name="DelegateArgumentReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.DelegateArgumentReference`1" />
      <apidata name="DelegateArgumentReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor" contentProperty="P:System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument" />
        <element api="P:System.Activities.Expressions.DelegateArgumentReference`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentReference`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.DelegateArgumentReference`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor" />
        <element api="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor(System.Activities.DelegateArgument)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.DelegateArgumentReference`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.DelegateArgumentReference`1.#ctor(System.Activities.DelegateArgument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.DelegateArgumentReference`1.#ctor" />
      <parameters>
        <parameter name="delegateArgument">
          <type api="T:System.Activities.DelegateArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.DelegateArgumentReference`1.DelegateArgument">
      <topicdata group="api" />
      <apidata name="DelegateArgument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DelegateArgument" />
      <setter name="set_DelegateArgument" />
      <returns>
        <type api="T:System.Activities.DelegateArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.DelegateArgumentReference`1.LocationReference">
      <topicdata group="api" />
      <apidata name="LocationReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference">
          <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.DelegateArgumentReference`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LocationReference" />
      <returns>
        <type api="T:System.Activities.LocationReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentReference`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.DelegateArgumentValue`1">
      <topicdata group="api" />
      <apidata name="DelegateArgumentValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor" contentProperty="P:System.Activities.Expressions.DelegateArgumentValue`1.DelegateArgument" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.DelegateArgumentValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.DelegateArgumentValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.DelegateArgumentValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="Overload:System.Activities.Expressions.DelegateArgumentValue`1.#ctor">
          <element api="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor" />
          <element api="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor(System.Activities.DelegateArgument)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.DelegateArgumentValue`1.DelegateArgument" />
        <element api="P:System.Activities.Expressions.DelegateArgumentValue`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DelegateArgument</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.DelegateArgumentValue`1">
      <topicdata name="DelegateArgumentValue" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.DelegateArgumentValue`1" />
      <apidata name="DelegateArgumentValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor" contentProperty="P:System.Activities.Expressions.DelegateArgumentValue`1.DelegateArgument" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentValue`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.DelegateArgumentValue`1">
      <topicdata name="DelegateArgumentValue" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.DelegateArgumentValue`1" />
      <apidata name="DelegateArgumentValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor" contentProperty="P:System.Activities.Expressions.DelegateArgumentValue`1.DelegateArgument" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.DelegateArgumentValue`1.DelegateArgument" />
        <element api="P:System.Activities.Expressions.DelegateArgumentValue`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentValue`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.DelegateArgumentValue`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor" />
        <element api="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor(System.Activities.DelegateArgument)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.DelegateArgumentValue`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.DelegateArgumentValue`1.#ctor(System.Activities.DelegateArgument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.DelegateArgumentValue`1.#ctor" />
      <parameters>
        <parameter name="delegateArgument">
          <type api="T:System.Activities.DelegateArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.DelegateArgumentValue`1.DelegateArgument">
      <topicdata group="api" />
      <apidata name="DelegateArgument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DelegateArgument" />
      <setter name="set_DelegateArgument" />
      <returns>
        <type api="T:System.Activities.DelegateArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.DelegateArgumentValue`1.LocationReference">
      <topicdata group="api" />
      <apidata name="LocationReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference">
          <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.DelegateArgumentValue`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LocationReference" />
      <returns>
        <type api="T:System.Activities.LocationReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.DelegateArgumentValue`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.Divide`3">
      <topicdata group="api" />
      <apidata name="Divide" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Divide`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Divide`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Divide`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.Divide`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Divide`3.Left" />
        <element api="P:System.Activities.Expressions.Divide`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.Divide`3">
      <topicdata name="Divide" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.Divide`3" />
      <apidata name="Divide" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Divide`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Divide`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.Divide`3">
      <topicdata name="Divide" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.Divide`3" />
      <apidata name="Divide" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Divide`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Divide`3.Left" />
        <element api="P:System.Activities.Expressions.Divide`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Divide`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Divide`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Divide`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.Divide`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.Divide`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Divide`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Divide`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.Divide`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Divide`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.EnvironmentLocationReference`1">
      <topicdata group="api" />
      <apidata name="EnvironmentLocationReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Expressions.ArgumentReference`1" ref="true" />
          <type api="T:System.Activities.Expressions.DelegateArgumentReference`1" ref="true" />
          <type api="T:System.Activities.Expressions.VariableReference`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="Overload:System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata">
          <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.Expressions.EnvironmentLocationReference`1.Execute(System.Activities.CodeActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.CodeActivity`1.Implementation" />
        <element api="P:System.Activities.CodeActivity`1.ImplementationVersion" />
        <element api="P:System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.EnvironmentLocationReference`1">
      <topicdata name="EnvironmentLocationReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
      <apidata name="EnvironmentLocationReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="Overload:System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata">
          <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.Expressions.EnvironmentLocationReference`1.Execute(System.Activities.CodeActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.EnvironmentLocationReference`1">
      <topicdata name="EnvironmentLocationReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
      <apidata name="EnvironmentLocationReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.CodeActivity`1.Implementation" />
        <element api="P:System.Activities.CodeActivity`1.ImplementationVersion" />
        <element api="P:System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.Expressions.EnvironmentLocationReference`1.CacheMetadata" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.EnvironmentLocationReference`1.Execute(System.Activities.CodeActivityContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.CodeActivity`1.Execute(System.Activities.CodeActivityContext)">
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.CodeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationReference`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference">
      <topicdata group="api" />
      <apidata name="LocationReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_LocationReference" />
      <returns>
        <type api="T:System.Activities.LocationReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.EnvironmentLocationValue`1">
      <topicdata group="api" />
      <apidata name="EnvironmentLocationValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Expressions.ArgumentValue`1" ref="true" />
          <type api="T:System.Activities.Expressions.DelegateArgumentValue`1" ref="true" />
          <type api="T:System.Activities.Expressions.VariableValue`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="Overload:System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata">
          <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.CodeActivity`1.Implementation" />
        <element api="P:System.Activities.CodeActivity`1.ImplementationVersion" />
        <element api="P:System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.EnvironmentLocationValue`1">
      <topicdata name="EnvironmentLocationValue" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
      <apidata name="EnvironmentLocationValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="Overload:System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata">
          <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.EnvironmentLocationValue`1">
      <topicdata name="EnvironmentLocationValue" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
      <apidata name="EnvironmentLocationValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.CodeActivity`1.Implementation" />
        <element api="P:System.Activities.CodeActivity`1.ImplementationVersion" />
        <element api="P:System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.Expressions.EnvironmentLocationValue`1.CacheMetadata" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.EnvironmentLocationValue`1.Execute(System.Activities.CodeActivityContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.CodeActivity`1.Execute(System.Activities.CodeActivityContext)">
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.CodeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Activities.Expressions.EnvironmentLocationValue`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference">
      <topicdata group="api" />
      <apidata name="LocationReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_LocationReference" />
      <returns>
        <type api="T:System.Activities.LocationReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.Equal`3">
      <topicdata group="api" />
      <apidata name="Equal" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Equal`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Equal`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Equal`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.Equal`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Equal`3.Left" />
        <element api="P:System.Activities.Expressions.Equal`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.Equal`3">
      <topicdata name="Equal" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.Equal`3" />
      <apidata name="Equal" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Equal`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Equal`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.Equal`3">
      <topicdata name="Equal" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.Equal`3" />
      <apidata name="Equal" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Equal`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Equal`3.Left" />
        <element api="P:System.Activities.Expressions.Equal`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Equal`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Equal`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Equal`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.Equal`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.Equal`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Equal`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Equal`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.Equal`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Equal`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.ExpressionServices">
      <topicdata group="api" />
      <apidata name="ExpressionServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})" />
        <element api="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})" />
        <element api="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)" />
        <element api="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.ExpressionServices">
      <topicdata name="ExpressionServices" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.ExpressionServices" />
      <apidata name="ExpressionServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})" />
        <element api="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})" />
        <element api="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)" />
        <element api="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ExpressionServices" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="TResult" index="0" api="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Activities.Expressions.ExpressionServices.Convert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ExpressionServices" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})">
      <topicdata group="api" />
      <apidata name="ConvertReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="TResult" index="0" api="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Location`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Activities.Expressions.ExpressionServices.ConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ExpressionServices" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)">
      <topicdata group="api" />
      <apidata name="TryConvert" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="TResult" index="0" api="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Activities.Activity`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Activities.Expressions.ExpressionServices.TryConvert``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{``0}@)" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ExpressionServices" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)">
      <topicdata group="api" />
      <apidata name="TryConvertReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="TResult" index="0" api="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Activities.Activity`1" ref="true">
              <specialization>
                <type api="T:System.Activities.Location`1" ref="true">
                  <specialization>
                    <template name="TResult" index="0" api="M:System.Activities.Expressions.ExpressionServices.TryConvertReference``1(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,``0}},System.Activities.Activity{System.Activities.Location{``0}}@)" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ExpressionServices" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.FieldReference`2">
      <topicdata group="api" />
      <apidata name="FieldReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.FieldReference`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:System.Activities.Expressions.FieldReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:System.Activities.Expressions.FieldReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.FieldReference`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.FieldReference`2.FieldName" />
        <element api="P:System.Activities.Expressions.FieldReference`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.FieldReference`2">
      <topicdata name="FieldReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.FieldReference`2" />
      <apidata name="FieldReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.FieldReference`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldReference`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.FieldReference`2">
      <topicdata name="FieldReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.FieldReference`2" />
      <apidata name="FieldReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.FieldReference`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.FieldReference`2.FieldName" />
        <element api="P:System.Activities.Expressions.FieldReference`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldReference`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.FieldReference`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldReference`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.FieldReference`2.FieldName">
      <topicdata group="api" />
      <apidata name="FieldName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FieldName" />
      <setter name="set_FieldName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.FieldReference`2.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operand" />
      <setter name="set_Operand" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.FieldReference`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.FieldValue`2">
      <topicdata group="api" />
      <apidata name="FieldValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.FieldValue`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.FieldValue`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.FieldValue`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.FieldValue`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.FieldValue`2.FieldName" />
        <element api="P:System.Activities.Expressions.FieldValue`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.FieldValue`2">
      <topicdata name="FieldValue" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.FieldValue`2" />
      <apidata name="FieldValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.FieldValue`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldValue`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.FieldValue`2">
      <topicdata name="FieldValue" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.FieldValue`2" />
      <apidata name="FieldValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.FieldValue`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.FieldValue`2.FieldName" />
        <element api="P:System.Activities.Expressions.FieldValue`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldValue`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.FieldValue`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldValue`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.FieldValue`2.FieldName">
      <topicdata group="api" />
      <apidata name="FieldName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FieldName" />
      <setter name="set_FieldName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldValue`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.FieldValue`2.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operand" />
      <setter name="set_Operand" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.FieldValue`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.FieldValue`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.GreaterThan`3">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.GreaterThan`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.GreaterThan`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.GreaterThan`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.GreaterThan`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.GreaterThan`3.Left" />
        <element api="P:System.Activities.Expressions.GreaterThan`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.GreaterThan`3">
      <topicdata name="GreaterThan" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.GreaterThan`3" />
      <apidata name="GreaterThan" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.GreaterThan`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThan`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.GreaterThan`3">
      <topicdata name="GreaterThan" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.GreaterThan`3" />
      <apidata name="GreaterThan" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.GreaterThan`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.GreaterThan`3.Left" />
        <element api="P:System.Activities.Expressions.GreaterThan`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThan`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.GreaterThan`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThan`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.GreaterThan`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.GreaterThan`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThan`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.GreaterThan`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.GreaterThan`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThan`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.GreaterThanOrEqual`3">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.GreaterThanOrEqual`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.GreaterThanOrEqual`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.GreaterThanOrEqual`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.GreaterThanOrEqual`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.GreaterThanOrEqual`3.Left" />
        <element api="P:System.Activities.Expressions.GreaterThanOrEqual`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.GreaterThanOrEqual`3">
      <topicdata name="GreaterThanOrEqual" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.GreaterThanOrEqual`3" />
      <apidata name="GreaterThanOrEqual" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.GreaterThanOrEqual`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThanOrEqual`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.GreaterThanOrEqual`3">
      <topicdata name="GreaterThanOrEqual" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.GreaterThanOrEqual`3" />
      <apidata name="GreaterThanOrEqual" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.GreaterThanOrEqual`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.GreaterThanOrEqual`3.Left" />
        <element api="P:System.Activities.Expressions.GreaterThanOrEqual`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThanOrEqual`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.GreaterThanOrEqual`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThanOrEqual`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.GreaterThanOrEqual`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.GreaterThanOrEqual`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThanOrEqual`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.GreaterThanOrEqual`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.GreaterThanOrEqual`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.GreaterThanOrEqual`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.IndexerReference`2">
      <topicdata group="api" />
      <apidata name="IndexerReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.IndexerReference`2.#ctor" contentProperty="P:System.Activities.Expressions.IndexerReference`2.Indices" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TItem" index="1" api="T:System.Activities.Expressions.IndexerReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TItem" index="1" api="T:System.Activities.Expressions.IndexerReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.IndexerReference`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.IndexerReference`2.Indices" />
        <element api="P:System.Activities.Expressions.IndexerReference`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Indices</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.IndexerReference`2">
      <topicdata name="IndexerReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.IndexerReference`2" />
      <apidata name="IndexerReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.IndexerReference`2.#ctor" contentProperty="P:System.Activities.Expressions.IndexerReference`2.Indices" />
      <templates>
        <template name="TOperand" />
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.IndexerReference`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.IndexerReference`2">
      <topicdata name="IndexerReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.IndexerReference`2" />
      <apidata name="IndexerReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.IndexerReference`2.#ctor" contentProperty="P:System.Activities.Expressions.IndexerReference`2.Indices" />
      <templates>
        <template name="TOperand" />
        <template name="TItem" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.IndexerReference`2.Indices" />
        <element api="P:System.Activities.Expressions.IndexerReference`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.IndexerReference`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.IndexerReference`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.IndexerReference`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.IndexerReference`2.Indices">
      <topicdata group="api" />
      <apidata name="Indices" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Indices" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.InArgument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.IndexerReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.IndexerReference`2.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operand" />
      <setter name="set_Operand" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.IndexerReference`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.IndexerReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`1">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`1.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`1.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.InvokeFunc`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.InvokeFunc`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`1.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`1.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`1">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`1" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`1.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`1.Func" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`1">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`1" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`1.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`1.Func" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`1.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`1.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Activities.Expressions.InvokeFunc`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`10">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`10.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`10.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="9" api="T:System.Activities.Expressions.InvokeFunc`10" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="9" api="T:System.Activities.Expressions.InvokeFunc`10" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`10.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`10">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`10" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`10.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`10.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`10">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`10" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`10.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`10.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`10.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`10.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`10.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`10" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`10" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`10" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`10" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`10" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`10" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`10" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`10" />
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`10" />
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`10" />
            <template name="TResult" index="9" api="T:System.Activities.Expressions.InvokeFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`11">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`11.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`11.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="10" api="T:System.Activities.Expressions.InvokeFunc`11" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="10" api="T:System.Activities.Expressions.InvokeFunc`11" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`11.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`11">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`11" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`11.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`11.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`11">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`11" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`11.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`11.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`11.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`11.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`11.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`11" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`11" />
            <template name="TResult" index="10" api="T:System.Activities.Expressions.InvokeFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`12">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`12.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`12.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="11" api="T:System.Activities.Expressions.InvokeFunc`12" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="11" api="T:System.Activities.Expressions.InvokeFunc`12" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`12.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`12">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`12" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`12.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`12.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`12">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`12" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`12.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`12.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`12.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`12.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`12.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`12" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`12" />
            <template name="TResult" index="11" api="T:System.Activities.Expressions.InvokeFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`13">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`13.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`13.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="12" api="T:System.Activities.Expressions.InvokeFunc`13" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="12" api="T:System.Activities.Expressions.InvokeFunc`13" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`13.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`13">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`13" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`13.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`13.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`13">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`13" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`13.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`13.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`13.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`13.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`13.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`13" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`13" />
            <template name="TResult" index="12" api="T:System.Activities.Expressions.InvokeFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`14">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`14.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`14.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="13" api="T:System.Activities.Expressions.InvokeFunc`14" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="13" api="T:System.Activities.Expressions.InvokeFunc`14" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`14.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument13" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`14">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`14" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`14.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`14.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`14">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`14" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`14.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`14.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument13" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`14.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`14.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`14.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`14" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="T13" index="12" api="T:System.Activities.Expressions.InvokeFunc`14" />
            <template name="TResult" index="13" api="T:System.Activities.Expressions.InvokeFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`15">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`15.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`15.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="14" api="T:System.Activities.Expressions.InvokeFunc`15" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="14" api="T:System.Activities.Expressions.InvokeFunc`15" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`15.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument13" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument14" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`15">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`15" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`15.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`15.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`15">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`15" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`15.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`15.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument13" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument14" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`15.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`15.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument14">
      <topicdata group="api" />
      <apidata name="Argument14" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument14" />
      <setter name="set_Argument14" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T14" index="13" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`15.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`15" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T13" index="12" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="T14" index="13" api="T:System.Activities.Expressions.InvokeFunc`15" />
            <template name="TResult" index="14" api="T:System.Activities.Expressions.InvokeFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`16">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`16.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`16.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="15" api="T:System.Activities.Expressions.InvokeFunc`16" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="15" api="T:System.Activities.Expressions.InvokeFunc`16" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`16.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument13" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument14" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument15" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`16">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`16" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`16.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`16.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`16">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`16" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`16.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`16.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument13" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument14" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument15" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`16.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`16.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument14">
      <topicdata group="api" />
      <apidata name="Argument14" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument14" />
      <setter name="set_Argument14" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T14" index="13" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument15">
      <topicdata group="api" />
      <apidata name="Argument15" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument15" />
      <setter name="set_Argument15" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T15" index="14" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`16.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`16" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T13" index="12" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T14" index="13" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="T15" index="14" api="T:System.Activities.Expressions.InvokeFunc`16" />
            <template name="TResult" index="15" api="T:System.Activities.Expressions.InvokeFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`17">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`17.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`17.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="16" api="T:System.Activities.Expressions.InvokeFunc`17" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="16" api="T:System.Activities.Expressions.InvokeFunc`17" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`17.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument13" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument14" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument15" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument16" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`17">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`17" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`17.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`17.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`17">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`17" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`17.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`17.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument10" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument11" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument12" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument13" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument14" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument15" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument16" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Argument9" />
        <element api="P:System.Activities.Expressions.InvokeFunc`17.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`17.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument14">
      <topicdata group="api" />
      <apidata name="Argument14" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument14" />
      <setter name="set_Argument14" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T14" index="13" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument15">
      <topicdata group="api" />
      <apidata name="Argument15" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument15" />
      <setter name="set_Argument15" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T15" index="14" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument16">
      <topicdata group="api" />
      <apidata name="Argument16" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument16" />
      <setter name="set_Argument16" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T16" index="15" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`17.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`17" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T9" index="8" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T10" index="9" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T11" index="10" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T12" index="11" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T13" index="12" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T14" index="13" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T15" index="14" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="T16" index="15" api="T:System.Activities.Expressions.InvokeFunc`17" />
            <template name="TResult" index="16" api="T:System.Activities.Expressions.InvokeFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`2">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`2.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`2.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.InvokeFunc`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.InvokeFunc`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`2.Argument" />
        <element api="P:System.Activities.Expressions.InvokeFunc`2.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`2">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`2" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`2.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`2.Func" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`2">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`2" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`2.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`2.Func" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`2.Argument" />
        <element api="P:System.Activities.Expressions.InvokeFunc`2.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`2.Argument">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument" />
      <setter name="set_Argument" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.Expressions.InvokeFunc`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`2.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.Expressions.InvokeFunc`2" />
            <template name="TResult" index="1" api="T:System.Activities.Expressions.InvokeFunc`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`2" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`3">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`3.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`3.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.InvokeFunc`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.InvokeFunc`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`3.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`3.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`3.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`3">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`3" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`3.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`3.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`3">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`3" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`3.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`3.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`3.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`3.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`3.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`3.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`3.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`3.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`3" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`3" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`3" />
            <template name="TResult" index="2" api="T:System.Activities.Expressions.InvokeFunc`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`4">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`4.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`4.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="3" api="T:System.Activities.Expressions.InvokeFunc`4" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="3" api="T:System.Activities.Expressions.InvokeFunc`4" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`4.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`4.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`4.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`4.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`4.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`4">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`4" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`4.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`4.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`4" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`4">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`4" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`4.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`4.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`4.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`4.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`4.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`4.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`4" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`4.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`4" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`4.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`4.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`4.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`4.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`4" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`4" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`4" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`4" />
            <template name="TResult" index="3" api="T:System.Activities.Expressions.InvokeFunc`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`5">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`5.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`5.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="4" api="T:System.Activities.Expressions.InvokeFunc`5" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="4" api="T:System.Activities.Expressions.InvokeFunc`5" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`5.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`5">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`5" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`5.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`5.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`5" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`5">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`5" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`5.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`5.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`5.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`5" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`5.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`5" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`5.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`5.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`5.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`5.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`5.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`5" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`5" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`5" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`5" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`5" />
            <template name="TResult" index="4" api="T:System.Activities.Expressions.InvokeFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`6">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`6.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`6.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="5" api="T:System.Activities.Expressions.InvokeFunc`6" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="5" api="T:System.Activities.Expressions.InvokeFunc`6" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`6.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`6">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`6" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`6.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`6.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`6" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`6">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`6" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`6.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`6.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`6.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`6" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`6.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`6" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`6.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`6.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`6.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`6.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`6.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`6.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`6" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`6" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`6" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`6" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`6" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`6" />
            <template name="TResult" index="5" api="T:System.Activities.Expressions.InvokeFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`7">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`7.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`7.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="6" api="T:System.Activities.Expressions.InvokeFunc`7" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="6" api="T:System.Activities.Expressions.InvokeFunc`7" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`7.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`7">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`7" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`7.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`7.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`7">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`7" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`7.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`7.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`7.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`7.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`7.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`7.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`7.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`7.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`7.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`7.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`7.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`7" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`7" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`7" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`7" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`7" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`7" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`7" />
            <template name="TResult" index="6" api="T:System.Activities.Expressions.InvokeFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`8">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`8.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`8.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="7" api="T:System.Activities.Expressions.InvokeFunc`8" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="7" api="T:System.Activities.Expressions.InvokeFunc`8" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`8.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`8">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`8" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`8.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`8.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`8">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`8" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`8.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`8.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`8.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`8.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`8.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`8.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`8.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`8.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`8.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`8.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`8.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`8.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`8" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`8" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`8" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`8" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`8" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`8" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`8" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`8" />
            <template name="TResult" index="7" api="T:System.Activities.Expressions.InvokeFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeFunc`9">
      <topicdata group="api" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`9.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`9.Func" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="8" api="T:System.Activities.Expressions.InvokeFunc`9" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="8" api="T:System.Activities.Expressions.InvokeFunc`9" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeFunc`9.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Func</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeFunc`9">
      <topicdata name="InvokeFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeFunc`9" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`9.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`9.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeFunc`9">
      <topicdata name="InvokeFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeFunc`9" />
      <apidata name="InvokeFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeFunc`9.#ctor" contentProperty="P:System.Activities.Expressions.InvokeFunc`9.Func" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument1" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument2" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument3" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument4" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument5" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument6" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument7" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Argument8" />
        <element api="P:System.Activities.Expressions.InvokeFunc`9.Func" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeFunc`9.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`9.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`9.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`9.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`9.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`9.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`9.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`9.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`9.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeFunc`9.Func">
      <topicdata group="api" />
      <apidata name="Func" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Func" />
      <setter name="set_Func" />
      <returns>
        <type api="T:System.Activities.ActivityFunc`9" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.Expressions.InvokeFunc`9" />
            <template name="T2" index="1" api="T:System.Activities.Expressions.InvokeFunc`9" />
            <template name="T3" index="2" api="T:System.Activities.Expressions.InvokeFunc`9" />
            <template name="T4" index="3" api="T:System.Activities.Expressions.InvokeFunc`9" />
            <template name="T5" index="4" api="T:System.Activities.Expressions.InvokeFunc`9" />
            <template name="T6" index="5" api="T:System.Activities.Expressions.InvokeFunc`9" />
            <template name="T7" index="6" api="T:System.Activities.Expressions.InvokeFunc`9" />
            <template name="T8" index="7" api="T:System.Activities.Expressions.InvokeFunc`9" />
            <template name="TResult" index="8" api="T:System.Activities.Expressions.InvokeFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.InvokeMethod`1">
      <topicdata group="api" />
      <apidata name="InvokeMethod" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeMethod`1.#ctor" contentProperty="P:System.Activities.Expressions.InvokeMethod`1.Parameters" />
      <family>
        <ancestors>
          <type api="T:System.Activities.AsyncCodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.InvokeMethod`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.InvokeMethod`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.InvokeMethod`1.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.MethodName" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.Parameters" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.RunAsynchronously" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.TargetObject" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.TargetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Parameters</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.InvokeMethod`1">
      <topicdata name="InvokeMethod" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.InvokeMethod`1" />
      <apidata name="InvokeMethod" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeMethod`1.#ctor" contentProperty="P:System.Activities.Expressions.InvokeMethod`1.Parameters" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeMethod`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.InvokeMethod`1">
      <topicdata name="InvokeMethod" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.InvokeMethod`1" />
      <apidata name="InvokeMethod" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.InvokeMethod`1.#ctor" contentProperty="P:System.Activities.Expressions.InvokeMethod`1.Parameters" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.MethodName" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.Parameters" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.RunAsynchronously" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.TargetObject" />
        <element api="P:System.Activities.Expressions.InvokeMethod`1.TargetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeMethod`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.InvokeMethod`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeMethod`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeMethod`1.GenericTypeArguments">
      <topicdata group="api" />
      <apidata name="GenericTypeArguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GenericTypeArguments" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeMethod`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeMethod`1.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MethodName" />
      <setter name="set_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeMethod`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeMethod`1.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Argument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeMethod`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.InvokeMethod`1.RunAsynchronously">
      <topicdata group="api" />
      <apidata name="RunAsynchronously" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RunAsynchronously" />
      <setter name="set_RunAsynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeMethod`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeMethod`1.TargetObject">
      <topicdata group="api" />
      <apidata name="TargetObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetObject" />
      <setter name="set_TargetObject" />
      <returns>
        <type api="T:System.Activities.InArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeMethod`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.InvokeMethod`1.TargetType">
      <topicdata group="api" />
      <apidata name="TargetType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetType" />
      <setter name="set_TargetType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.InvokeMethod`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.ITextExpression">
      <topicdata group="api" />
      <apidata name="ITextExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" ref="true" />
        <type api="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" ref="true" />
        <type api="T:Microsoft.CSharp.Activities.CSharpReference`1" ref="true" />
        <type api="T:Microsoft.CSharp.Activities.CSharpValue`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Activities.Expressions.ITextExpression.GetExpressionTree" />
        <element api="P:System.Activities.Expressions.ITextExpression.ExpressionText" />
        <element api="P:System.Activities.Expressions.ITextExpression.Language" />
        <element api="P:System.Activities.Expressions.ITextExpression.RequiresCompilation" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.ITextExpression">
      <topicdata name="ITextExpression" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.ITextExpression" />
      <apidata name="ITextExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Expressions.ITextExpression.GetExpressionTree" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ITextExpression" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.ITextExpression">
      <topicdata name="ITextExpression" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.ITextExpression" />
      <apidata name="ITextExpression" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Expressions.ITextExpression.ExpressionText" />
        <element api="P:System.Activities.Expressions.ITextExpression.Language" />
        <element api="P:System.Activities.Expressions.ITextExpression.RequiresCompilation" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ITextExpression" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ITextExpression.ExpressionText">
      <topicdata group="api" />
      <apidata name="ExpressionText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ExpressionText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ITextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ITextExpression.GetExpressionTree">
      <topicdata group="api" />
      <apidata name="GetExpressionTree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ITextExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ITextExpression.Language">
      <topicdata group="api" />
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Language" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ITextExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ITextExpression.RequiresCompilation">
      <topicdata group="api" />
      <apidata name="RequiresCompilation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequiresCompilation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ITextExpression" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.LambdaReference`1">
      <topicdata group="api" />
      <apidata name="LambdaReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.LambdaReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.LambdaReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Activities.XamlIntegration.IValueSerializableExpression" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
        <element api="M:System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.LambdaReference`1">
      <topicdata name="LambdaReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.LambdaReference`1" />
      <apidata name="LambdaReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaReference`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.LambdaReference`1">
      <topicdata name="LambdaReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.LambdaReference`1" />
      <apidata name="LambdaReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaReference`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaReference`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="locationExpression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="T" index="0" api="T:System.Activities.Expressions.LambdaReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaReference`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <topicdata group="api" />
      <apidata name="CanConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Windows.Markup.IValueSerializerContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Activities.XamlIntegration.IValueSerializableExpression.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
          <type api="T:System.Activities.XamlIntegration.IValueSerializableExpression" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaReference`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <topicdata group="api" />
      <apidata name="ConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Windows.Markup.IValueSerializerContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Activities.XamlIntegration.IValueSerializableExpression.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
          <type api="T:System.Activities.XamlIntegration.IValueSerializableExpression" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaReference`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.LambdaSerializationException">
      <topicdata group="api" />
      <apidata name="LambdaSerializationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.Expressions.LambdaSerializationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Activities.Expressions.LambdaSerializationException.#ctor">
          <element api="M:System.Activities.Expressions.LambdaSerializationException.#ctor" />
          <element api="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String)" />
          <element api="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.LambdaSerializationException">
      <topicdata name="LambdaSerializationException" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.LambdaSerializationException" />
      <apidata name="LambdaSerializationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.Expressions.LambdaSerializationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaSerializationException" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.LambdaSerializationException">
      <topicdata name="LambdaSerializationException" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.LambdaSerializationException" />
      <apidata name="LambdaSerializationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.Expressions.LambdaSerializationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaSerializationException" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.Expressions.LambdaSerializationException">
      <topicdata name="LambdaSerializationException" group="list" subgroup="Events" typeTopicId="T:System.Activities.Expressions.LambdaSerializationException" />
      <apidata name="LambdaSerializationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.Expressions.LambdaSerializationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaSerializationException" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.LambdaSerializationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.Expressions.LambdaSerializationException.#ctor" />
        <element api="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String)" />
        <element api="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaSerializationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaSerializationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.LambdaSerializationException.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaSerializationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Activities.Expressions.LambdaSerializationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaSerializationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.LambdaSerializationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaSerializationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaSerializationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.LambdaSerializationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaSerializationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.LambdaValue`1">
      <topicdata group="api" />
      <apidata name="LambdaValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.LambdaValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.LambdaValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <implements>
        <type api="T:System.Activities.XamlIntegration.IValueSerializableExpression" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.LambdaValue`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
        <element api="M:System.Activities.Expressions.LambdaValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Activities.Expressions.LambdaValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.LambdaValue`1">
      <topicdata name="LambdaValue" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.LambdaValue`1" />
      <apidata name="LambdaValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.LambdaValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Activities.Expressions.LambdaValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaValue`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.LambdaValue`1">
      <topicdata name="LambdaValue" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.LambdaValue`1" />
      <apidata name="LambdaValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaValue`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaValue`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="lambdaValue">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="TResult" index="0" api="T:System.Activities.Expressions.LambdaValue`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaValue`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <topicdata group="api" />
      <apidata name="CanConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Windows.Markup.IValueSerializerContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Activities.XamlIntegration.IValueSerializableExpression.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
          <type api="T:System.Activities.XamlIntegration.IValueSerializableExpression" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LambdaValue`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <topicdata group="api" />
      <apidata name="ConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Windows.Markup.IValueSerializerContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Activities.XamlIntegration.IValueSerializableExpression.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
          <type api="T:System.Activities.XamlIntegration.IValueSerializableExpression" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LambdaValue`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.LessThan`3">
      <topicdata group="api" />
      <apidata name="LessThan" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.LessThan`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.LessThan`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.LessThan`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.LessThan`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.LessThan`3.Left" />
        <element api="P:System.Activities.Expressions.LessThan`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.LessThan`3">
      <topicdata name="LessThan" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.LessThan`3" />
      <apidata name="LessThan" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.LessThan`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThan`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.LessThan`3">
      <topicdata name="LessThan" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.LessThan`3" />
      <apidata name="LessThan" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.LessThan`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.LessThan`3.Left" />
        <element api="P:System.Activities.Expressions.LessThan`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThan`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LessThan`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThan`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.LessThan`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.LessThan`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThan`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.LessThan`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.LessThan`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThan`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.LessThanOrEqual`3">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.LessThanOrEqual`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.LessThanOrEqual`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.LessThanOrEqual`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.LessThanOrEqual`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.LessThanOrEqual`3.Left" />
        <element api="P:System.Activities.Expressions.LessThanOrEqual`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.LessThanOrEqual`3">
      <topicdata name="LessThanOrEqual" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.LessThanOrEqual`3" />
      <apidata name="LessThanOrEqual" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.LessThanOrEqual`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThanOrEqual`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.LessThanOrEqual`3">
      <topicdata name="LessThanOrEqual" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.LessThanOrEqual`3" />
      <apidata name="LessThanOrEqual" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.LessThanOrEqual`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.LessThanOrEqual`3.Left" />
        <element api="P:System.Activities.Expressions.LessThanOrEqual`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThanOrEqual`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.LessThanOrEqual`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThanOrEqual`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.LessThanOrEqual`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.LessThanOrEqual`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThanOrEqual`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.LessThanOrEqual`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.LessThanOrEqual`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.LessThanOrEqual`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.Literal`1">
      <topicdata group="api" />
      <apidata name="Literal" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Literal`1.#ctor" contentProperty="P:System.Activities.Expressions.Literal`1.Value" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.Literal`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.Literal`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Activities.XamlIntegration.IValueSerializableExpression" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Activities.Expressions.Literal`1.#ctor">
          <element api="M:System.Activities.Expressions.Literal`1.#ctor" />
          <element api="M:System.Activities.Expressions.Literal`1.#ctor(`0)" />
        </element>
        <element api="M:System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Activities.Expressions.Literal`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Literal`1.Value" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Value</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.Literal`1">
      <topicdata name="Literal" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.Literal`1" />
      <apidata name="Literal" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Literal`1.#ctor" contentProperty="P:System.Activities.Expressions.Literal`1.Value" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)" />
        <element api="M:System.Activities.Expressions.Literal`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Literal`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.Literal`1">
      <topicdata name="Literal" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.Literal`1" />
      <apidata name="Literal" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Literal`1.#ctor" contentProperty="P:System.Activities.Expressions.Literal`1.Value" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Literal`1.Value" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Literal`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.Literal`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.Expressions.Literal`1.#ctor" />
        <element api="M:System.Activities.Expressions.Literal`1.#ctor(`0)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Literal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Literal`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.Literal`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Literal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Literal`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.Literal`1.#ctor" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Activities.Expressions.Literal`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Literal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Literal`1.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <topicdata group="api" />
      <apidata name="CanConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Windows.Markup.IValueSerializerContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Activities.XamlIntegration.IValueSerializableExpression.CanConvertToString(System.Windows.Markup.IValueSerializerContext)">
          <type api="T:System.Activities.XamlIntegration.IValueSerializableExpression" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Literal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Literal`1.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
      <topicdata group="api" />
      <apidata name="ConvertToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Windows.Markup.IValueSerializerContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Activities.XamlIntegration.IValueSerializableExpression.ConvertToString(System.Windows.Markup.IValueSerializerContext)">
          <type api="T:System.Activities.XamlIntegration.IValueSerializableExpression" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Literal`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Literal`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.Activity.ToString">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Literal`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.Literal`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="T" index="0" api="T:System.Activities.Expressions.Literal`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Literal`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1">
      <topicdata group="api" />
      <apidata name="MultidimensionalArrayItemReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.#ctor" contentProperty="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Indices" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TItem" index="0" api="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TItem" index="0" api="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Array" />
        <element api="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Indices" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Indices</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.MultidimensionalArrayItemReference`1">
      <topicdata name="MultidimensionalArrayItemReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />
      <apidata name="MultidimensionalArrayItemReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.#ctor" contentProperty="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Indices" />
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.MultidimensionalArrayItemReference`1">
      <topicdata name="MultidimensionalArrayItemReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />
      <apidata name="MultidimensionalArrayItemReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.#ctor" contentProperty="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Indices" />
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Array" />
        <element api="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Indices" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.MultidimensionalArrayItemReference`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Array">
      <topicdata group="api" />
      <apidata name="Array" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Array" />
      <setter name="set_Array" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <type api="T:System.Array" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.MultidimensionalArrayItemReference`1.Indices">
      <topicdata group="api" />
      <apidata name="Indices" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Indices" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.InArgument`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.Multiply`3">
      <topicdata group="api" />
      <apidata name="Multiply" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Multiply`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Multiply`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Multiply`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.Multiply`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Multiply`3.Checked" />
        <element api="P:System.Activities.Expressions.Multiply`3.Left" />
        <element api="P:System.Activities.Expressions.Multiply`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.Multiply`3">
      <topicdata name="Multiply" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.Multiply`3" />
      <apidata name="Multiply" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Multiply`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Multiply`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.Multiply`3">
      <topicdata name="Multiply" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.Multiply`3" />
      <apidata name="Multiply" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Multiply`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Multiply`3.Checked" />
        <element api="P:System.Activities.Expressions.Multiply`3.Left" />
        <element api="P:System.Activities.Expressions.Multiply`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Multiply`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Multiply`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Multiply`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.Multiply`3.Checked">
      <topicdata group="api" />
      <apidata name="Checked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Checked" />
      <setter name="set_Checked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Multiply`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Multiply`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.Multiply`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Multiply`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Multiply`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.Multiply`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Multiply`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.New`1">
      <topicdata group="api" />
      <apidata name="New" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.New`1.#ctor" contentProperty="P:System.Activities.Expressions.New`1.Arguments" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.New`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.New`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.New`1.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.New`1.Arguments" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Arguments</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.New`1">
      <topicdata name="New" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.New`1" />
      <apidata name="New" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.New`1.#ctor" contentProperty="P:System.Activities.Expressions.New`1.Arguments" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.New`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.New`1">
      <topicdata name="New" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.New`1" />
      <apidata name="New" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.New`1.#ctor" contentProperty="P:System.Activities.Expressions.New`1.Arguments" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.New`1.Arguments" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.New`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.New`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.New`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.New`1.Arguments">
      <topicdata group="api" />
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Argument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.New`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.NewArray`1">
      <topicdata group="api" />
      <apidata name="NewArray" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.NewArray`1.#ctor" contentProperty="P:System.Activities.Expressions.NewArray`1.Bounds" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.NewArray`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Expressions.NewArray`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.NewArray`1.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.NewArray`1.Bounds" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Bounds</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.NewArray`1">
      <topicdata name="NewArray" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.NewArray`1" />
      <apidata name="NewArray" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.NewArray`1.#ctor" contentProperty="P:System.Activities.Expressions.NewArray`1.Bounds" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.NewArray`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.NewArray`1">
      <topicdata name="NewArray" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.NewArray`1" />
      <apidata name="NewArray" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.NewArray`1.#ctor" contentProperty="P:System.Activities.Expressions.NewArray`1.Bounds" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.NewArray`1.Bounds" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.NewArray`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.NewArray`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.NewArray`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.NewArray`1.Bounds">
      <topicdata group="api" />
      <apidata name="Bounds" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bounds" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Argument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.NewArray`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.Not`2">
      <topicdata group="api" />
      <apidata name="Not" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Not`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.Not`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.Not`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.Not`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Not`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.Not`2">
      <topicdata name="Not" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.Not`2" />
      <apidata name="Not" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Not`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Not`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.Not`2">
      <topicdata name="Not" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.Not`2" />
      <apidata name="Not" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Not`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Not`2.Operand" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Not`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Not`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Not`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.Not`2.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operand" />
      <setter name="set_Operand" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.Not`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Not`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.NotEqual`3">
      <topicdata group="api" />
      <apidata name="NotEqual" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.NotEqual`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.NotEqual`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.NotEqual`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.NotEqual`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.NotEqual`3.Left" />
        <element api="P:System.Activities.Expressions.NotEqual`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.NotEqual`3">
      <topicdata name="NotEqual" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.NotEqual`3" />
      <apidata name="NotEqual" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.NotEqual`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.NotEqual`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.NotEqual`3">
      <topicdata name="NotEqual" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.NotEqual`3" />
      <apidata name="NotEqual" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.NotEqual`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.NotEqual`3.Left" />
        <element api="P:System.Activities.Expressions.NotEqual`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.NotEqual`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.NotEqual`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.NotEqual`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.NotEqual`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.NotEqual`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.NotEqual`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.NotEqual`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.NotEqual`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.NotEqual`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.Or`3">
      <topicdata group="api" />
      <apidata name="Or" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Or`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Or`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Or`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.Or`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Or`3.Left" />
        <element api="P:System.Activities.Expressions.Or`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.Or`3">
      <topicdata name="Or" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.Or`3" />
      <apidata name="Or" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Or`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Or`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.Or`3">
      <topicdata name="Or" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.Or`3" />
      <apidata name="Or" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Or`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Or`3.Left" />
        <element api="P:System.Activities.Expressions.Or`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Or`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Or`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Or`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.Or`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.Or`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Or`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Or`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.Or`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Or`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.OrElse">
      <topicdata group="api" />
      <apidata name="OrElse" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.OrElse.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.OrElse.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.OrElse.Left" />
        <element api="P:System.Activities.Expressions.OrElse.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.OrElse">
      <topicdata name="OrElse" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.OrElse" />
      <apidata name="OrElse" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.OrElse.#ctor" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.OrElse" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.OrElse">
      <topicdata name="OrElse" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.OrElse" />
      <apidata name="OrElse" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.OrElse.#ctor" />
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.OrElse.Left" />
        <element api="P:System.Activities.Expressions.OrElse.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.OrElse" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.OrElse.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.OrElse" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.OrElse.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.OrElse" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.OrElse.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.OrElse" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.PropertyReference`2">
      <topicdata group="api" />
      <apidata name="PropertyReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.PropertyReference`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:System.Activities.Expressions.PropertyReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:System.Activities.Expressions.PropertyReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.PropertyReference`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.PropertyReference`2.Operand" />
        <element api="P:System.Activities.Expressions.PropertyReference`2.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.PropertyReference`2">
      <topicdata name="PropertyReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.PropertyReference`2" />
      <apidata name="PropertyReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.PropertyReference`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyReference`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.PropertyReference`2">
      <topicdata name="PropertyReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.PropertyReference`2" />
      <apidata name="PropertyReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.PropertyReference`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.PropertyReference`2.Operand" />
        <element api="P:System.Activities.Expressions.PropertyReference`2.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyReference`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.PropertyReference`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyReference`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.PropertyReference`2.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operand" />
      <setter name="set_Operand" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.PropertyReference`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyReference`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.PropertyReference`2.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyName" />
      <setter name="set_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.PropertyValue`2">
      <topicdata group="api" />
      <apidata name="PropertyValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.PropertyValue`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.PropertyValue`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="T:System.Activities.Expressions.PropertyValue`2" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.PropertyValue`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.PropertyValue`2.Operand" />
        <element api="P:System.Activities.Expressions.PropertyValue`2.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.PropertyValue`2">
      <topicdata name="PropertyValue" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.PropertyValue`2" />
      <apidata name="PropertyValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.PropertyValue`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyValue`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.PropertyValue`2">
      <topicdata name="PropertyValue" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.PropertyValue`2" />
      <apidata name="PropertyValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.PropertyValue`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.PropertyValue`2.Operand" />
        <element api="P:System.Activities.Expressions.PropertyValue`2.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyValue`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.PropertyValue`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyValue`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.PropertyValue`2.Operand">
      <topicdata group="api" />
      <apidata name="Operand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operand" />
      <setter name="set_Operand" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.PropertyValue`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyValue`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.PropertyValue`2.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyName" />
      <setter name="set_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.PropertyValue`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.Subtract`3">
      <topicdata group="api" />
      <apidata name="Subtract" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Subtract`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Subtract`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="T:System.Activities.Expressions.Subtract`3" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.Subtract`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Subtract`3.Checked" />
        <element api="P:System.Activities.Expressions.Subtract`3.Left" />
        <element api="P:System.Activities.Expressions.Subtract`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.Subtract`3">
      <topicdata name="Subtract" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.Subtract`3" />
      <apidata name="Subtract" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Subtract`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Subtract`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.Subtract`3">
      <topicdata name="Subtract" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.Subtract`3" />
      <apidata name="Subtract" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.Subtract`3.#ctor" />
      <templates>
        <template name="TLeft" />
        <template name="TRight" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.Subtract`3.Checked" />
        <element api="P:System.Activities.Expressions.Subtract`3.Left" />
        <element api="P:System.Activities.Expressions.Subtract`3.Right" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Subtract`3" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.Subtract`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Subtract`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.Subtract`3.Checked">
      <topicdata group="api" />
      <apidata name="Checked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Checked" />
      <setter name="set_Checked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Subtract`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Subtract`3.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TLeft" index="0" api="T:System.Activities.Expressions.Subtract`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Subtract`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.Subtract`3.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="TRight" index="1" api="T:System.Activities.Expressions.Subtract`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.Subtract`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.TextExpression">
      <topicdata group="api" />
      <apidata name="TextExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Expressions.TextExpression.GetNamespaces(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetNamespacesForImplementation(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetNamespacesInScope(System.Activities.Activity)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetReferences(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetReferencesForImplementation(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetReferencesInScope(System.Activities.Activity)" />
        <element api="Overload:System.Activities.Expressions.TextExpression.SetNamespaces">
          <element api="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.Collections.Generic.IList{System.String})" />
          <element api="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.String[])" />
        </element>
        <element api="Overload:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation">
          <element api="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.Collections.Generic.IList{System.String})" />
          <element api="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.String[])" />
        </element>
        <element api="Overload:System.Activities.Expressions.TextExpression.SetReferences">
          <element api="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Activities.Expressions.AssemblyReference[])" />
          <element api="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})" />
        </element>
        <element api="Overload:System.Activities.Expressions.TextExpression.SetReferencesForImplementation">
          <element api="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Activities.Expressions.AssemblyReference[])" />
          <element api="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})" />
        </element>
        <element api="M:System.Activities.Expressions.TextExpression.ShouldSerializeNamespaces(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.ShouldSerializeNamespacesForImplementation(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.ShouldSerializeReferences(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.ShouldSerializeReferencesForImplementation(System.Object)" />
        <element api="P:System.Activities.Expressions.TextExpression.DefaultNamespaces" />
        <element api="P:System.Activities.Expressions.TextExpression.DefaultReferences" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.TextExpression">
      <topicdata name="TextExpression" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.TextExpression" />
      <apidata name="TextExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Expressions.TextExpression.GetNamespaces(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetNamespacesForImplementation(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetNamespacesInScope(System.Activities.Activity)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetReferences(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetReferencesForImplementation(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.GetReferencesInScope(System.Activities.Activity)" />
        <element api="Overload:System.Activities.Expressions.TextExpression.SetNamespaces">
          <element api="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.Collections.Generic.IList{System.String})" />
          <element api="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.String[])" />
        </element>
        <element api="Overload:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation">
          <element api="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.Collections.Generic.IList{System.String})" />
          <element api="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.String[])" />
        </element>
        <element api="Overload:System.Activities.Expressions.TextExpression.SetReferences">
          <element api="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Activities.Expressions.AssemblyReference[])" />
          <element api="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})" />
        </element>
        <element api="Overload:System.Activities.Expressions.TextExpression.SetReferencesForImplementation">
          <element api="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Activities.Expressions.AssemblyReference[])" />
          <element api="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})" />
        </element>
        <element api="M:System.Activities.Expressions.TextExpression.ShouldSerializeNamespaces(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.ShouldSerializeNamespacesForImplementation(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.ShouldSerializeReferences(System.Object)" />
        <element api="M:System.Activities.Expressions.TextExpression.ShouldSerializeReferencesForImplementation(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.TextExpression">
      <topicdata name="TextExpression" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.TextExpression" />
      <apidata name="TextExpression" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Expressions.TextExpression.DefaultNamespaces" />
        <element api="P:System.Activities.Expressions.TextExpression.DefaultReferences" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.TextExpression.SetNamespaces">
      <topicdata name="SetNamespaces" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetNamespaces" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.Collections.Generic.IList{System.String})" />
        <element api="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation">
      <topicdata name="SetNamespacesForImplementation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetNamespacesForImplementation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.Collections.Generic.IList{System.String})" />
        <element api="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.TextExpression.SetReferences">
      <topicdata name="SetReferences" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetReferences" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Activities.Expressions.AssemblyReference[])" />
        <element api="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.TextExpression.SetReferencesForImplementation">
      <topicdata name="SetReferencesForImplementation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetReferencesForImplementation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Activities.Expressions.AssemblyReference[])" />
        <element api="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.TextExpression.DefaultNamespaces">
      <topicdata group="api" />
      <apidata name="DefaultNamespaces" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultNamespaces" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.TextExpression.DefaultReferences">
      <topicdata group="api" />
      <apidata name="DefaultReferences" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultReferences" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.GetNamespaces(System.Object)">
      <topicdata group="api" />
      <apidata name="GetNamespaces" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.GetNamespacesForImplementation(System.Object)">
      <topicdata group="api" />
      <apidata name="GetNamespacesForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.GetNamespacesInScope(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="GetNamespacesInScope" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.GetReferences(System.Object)">
      <topicdata group="api" />
      <apidata name="GetReferences" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.GetReferencesForImplementation(System.Object)">
      <topicdata group="api" />
      <apidata name="GetReferencesForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.GetReferencesInScope(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="GetReferencesInScope" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.Collections.Generic.IList{System.String})">
      <topicdata group="api" />
      <apidata name="SetNamespaces" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Expressions.TextExpression.SetNamespaces" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.SetNamespaces(System.Object,System.String[])">
      <topicdata group="api" />
      <apidata name="SetNamespaces" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Expressions.TextExpression.SetNamespaces" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="namespaces" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.Collections.Generic.IList{System.String})">
      <topicdata group="api" />
      <apidata name="SetNamespacesForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation(System.Object,System.String[])">
      <topicdata group="api" />
      <apidata name="SetNamespacesForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Expressions.TextExpression.SetNamespacesForImplementation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="namespaces" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Activities.Expressions.AssemblyReference[])">
      <topicdata group="api" />
      <apidata name="SetReferences" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Expressions.TextExpression.SetReferences" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="references" params="true">
          <arrayOf rank="1">
            <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.SetReferences(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})">
      <topicdata group="api" />
      <apidata name="SetReferences" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Expressions.TextExpression.SetReferences" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="references">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Activities.Expressions.AssemblyReference[])">
      <topicdata group="api" />
      <apidata name="SetReferencesForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Expressions.TextExpression.SetReferencesForImplementation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="references" params="true">
          <arrayOf rank="1">
            <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.SetReferencesForImplementation(System.Object,System.Collections.Generic.IList{System.Activities.Expressions.AssemblyReference})">
      <topicdata group="api" />
      <apidata name="SetReferencesForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Expressions.TextExpression.SetReferencesForImplementation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="references">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Expressions.AssemblyReference" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.ShouldSerializeNamespaces(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeNamespaces" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.ShouldSerializeNamespacesForImplementation(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeNamespacesForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.ShouldSerializeReferences(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReferences" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.TextExpression.ShouldSerializeReferencesForImplementation(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeReferencesForImplementation" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.TextExpression" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.ValueTypeFieldReference`2">
      <topicdata group="api" />
      <apidata name="ValueTypeFieldReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ValueTypeFieldReference`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:System.Activities.Expressions.ValueTypeFieldReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:System.Activities.Expressions.ValueTypeFieldReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.ValueTypeFieldReference`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ValueTypeFieldReference`2.FieldName" />
        <element api="P:System.Activities.Expressions.ValueTypeFieldReference`2.OperandLocation" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.ValueTypeFieldReference`2">
      <topicdata name="ValueTypeFieldReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.ValueTypeFieldReference`2" />
      <apidata name="ValueTypeFieldReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ValueTypeFieldReference`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeFieldReference`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.ValueTypeFieldReference`2">
      <topicdata name="ValueTypeFieldReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.ValueTypeFieldReference`2" />
      <apidata name="ValueTypeFieldReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ValueTypeFieldReference`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ValueTypeFieldReference`2.FieldName" />
        <element api="P:System.Activities.Expressions.ValueTypeFieldReference`2.OperandLocation" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeFieldReference`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ValueTypeFieldReference`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeFieldReference`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ValueTypeFieldReference`2.FieldName">
      <topicdata group="api" />
      <apidata name="FieldName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FieldName" />
      <setter name="set_FieldName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeFieldReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.ValueTypeFieldReference`2.OperandLocation">
      <topicdata group="api" />
      <apidata name="OperandLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperandLocation" />
      <setter name="set_OperandLocation" />
      <returns>
        <type api="T:System.Activities.InOutArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.ValueTypeFieldReference`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeFieldReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.ValueTypeIndexerReference`2">
      <topicdata group="api" />
      <apidata name="ValueTypeIndexerReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ValueTypeIndexerReference`2.#ctor" contentProperty="P:System.Activities.Expressions.ValueTypeIndexerReference`2.Indices" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TItem" index="1" api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TItem" index="1" api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.ValueTypeIndexerReference`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ValueTypeIndexerReference`2.Indices" />
        <element api="P:System.Activities.Expressions.ValueTypeIndexerReference`2.OperandLocation" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Indices</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Expressions.ValueTypeIndexerReference`2">
      <topicdata name="ValueTypeIndexerReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />
      <apidata name="ValueTypeIndexerReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ValueTypeIndexerReference`2.#ctor" contentProperty="P:System.Activities.Expressions.ValueTypeIndexerReference`2.Indices" />
      <templates>
        <template name="TOperand" />
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.ValueTypeIndexerReference`2">
      <topicdata name="ValueTypeIndexerReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />
      <apidata name="ValueTypeIndexerReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ValueTypeIndexerReference`2.#ctor" contentProperty="P:System.Activities.Expressions.ValueTypeIndexerReference`2.Indices" />
      <templates>
        <template name="TOperand" />
        <template name="TItem" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ValueTypeIndexerReference`2.Indices" />
        <element api="P:System.Activities.Expressions.ValueTypeIndexerReference`2.OperandLocation" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ValueTypeIndexerReference`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ValueTypeIndexerReference`2.Indices">
      <topicdata group="api" />
      <apidata name="Indices" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Indices" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.InArgument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.ValueTypeIndexerReference`2.OperandLocation">
      <topicdata group="api" />
      <apidata name="OperandLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperandLocation" />
      <setter name="set_OperandLocation" />
      <returns>
        <type api="T:System.Activities.InOutArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.ValueTypePropertyReference`2">
      <topicdata group="api" />
      <apidata name="ValueTypePropertyReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ValueTypePropertyReference`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:System.Activities.Expressions.ValueTypePropertyReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:System.Activities.Expressions.ValueTypePropertyReference`2" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Expressions.ValueTypePropertyReference`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ValueTypePropertyReference`2.OperandLocation" />
        <element api="P:System.Activities.Expressions.ValueTypePropertyReference`2.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.ValueTypePropertyReference`2">
      <topicdata name="ValueTypePropertyReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.ValueTypePropertyReference`2" />
      <apidata name="ValueTypePropertyReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ValueTypePropertyReference`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypePropertyReference`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.ValueTypePropertyReference`2">
      <topicdata name="ValueTypePropertyReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.ValueTypePropertyReference`2" />
      <apidata name="ValueTypePropertyReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.ValueTypePropertyReference`2.#ctor" />
      <templates>
        <template name="TOperand" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.ValueTypePropertyReference`2.OperandLocation" />
        <element api="P:System.Activities.Expressions.ValueTypePropertyReference`2.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypePropertyReference`2" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.ValueTypePropertyReference`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypePropertyReference`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.ValueTypePropertyReference`2.OperandLocation">
      <topicdata group="api" />
      <apidata name="OperandLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperandLocation" />
      <setter name="set_OperandLocation" />
      <returns>
        <type api="T:System.Activities.InOutArgument`1" ref="true">
          <specialization>
            <template name="TOperand" index="0" api="T:System.Activities.Expressions.ValueTypePropertyReference`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypePropertyReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Expressions.ValueTypePropertyReference`2.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyName" />
      <setter name="set_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.ValueTypePropertyReference`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.Expressions.VariableReference`1">
      <topicdata group="api" />
      <apidata name="VariableReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.VariableReference`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.VariableReference`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.VariableReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.Expressions.VariableReference`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.Expressions.VariableReference`1.#ctor">
          <element api="M:System.Activities.Expressions.VariableReference`1.#ctor" />
          <element api="M:System.Activities.Expressions.VariableReference`1.#ctor(System.Activities.Variable)" />
        </element>
        <element api="M:System.Activities.Expressions.VariableReference`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.VariableReference`1.LocationReference" />
        <element api="P:System.Activities.Expressions.VariableReference`1.Variable" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.VariableReference`1">
      <topicdata name="VariableReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.VariableReference`1" />
      <apidata name="VariableReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.VariableReference`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Expressions.VariableReference`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableReference`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.VariableReference`1">
      <topicdata name="VariableReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.VariableReference`1" />
      <apidata name="VariableReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.VariableReference`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.VariableReference`1.LocationReference" />
        <element api="P:System.Activities.Expressions.VariableReference`1.Variable" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableReference`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.VariableReference`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.Expressions.VariableReference`1.#ctor" />
        <element api="M:System.Activities.Expressions.VariableReference`1.#ctor(System.Activities.Variable)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.VariableReference`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.VariableReference`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.VariableReference`1.#ctor(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.VariableReference`1.#ctor" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.VariableReference`1.LocationReference">
      <topicdata group="api" />
      <apidata name="LocationReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.Expressions.EnvironmentLocationReference`1.LocationReference">
          <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.VariableReference`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LocationReference" />
      <returns>
        <type api="T:System.Activities.LocationReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.VariableReference`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.Activity.ToString">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.VariableReference`1.Variable">
      <topicdata group="api" />
      <apidata name="Variable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Variable" />
      <setter name="set_Variable" />
      <returns>
        <type api="T:System.Activities.Variable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableReference`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Expressions.VariableValue`1">
      <topicdata group="api" />
      <apidata name="VariableValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.VariableValue`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.VariableValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.CodeActivity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.VariableValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.VariableValue`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.Expressions.VariableValue`1.#ctor">
          <element api="M:System.Activities.Expressions.VariableValue`1.#ctor" />
          <element api="M:System.Activities.Expressions.VariableValue`1.#ctor(System.Activities.Variable)" />
        </element>
        <element api="M:System.Activities.Expressions.VariableValue`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.VariableValue`1.LocationReference" />
        <element api="P:System.Activities.Expressions.VariableValue`1.Variable" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Expressions.VariableValue`1">
      <topicdata name="VariableValue" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Expressions.VariableValue`1" />
      <apidata name="VariableValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.VariableValue`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Expressions.VariableValue`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableValue`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Expressions.VariableValue`1">
      <topicdata name="VariableValue" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Expressions.VariableValue`1" />
      <apidata name="VariableValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Expressions.VariableValue`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.Expressions.VariableValue`1.LocationReference" />
        <element api="P:System.Activities.Expressions.VariableValue`1.Variable" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableValue`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Expressions.VariableValue`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.Expressions.VariableValue`1.#ctor" />
        <element api="M:System.Activities.Expressions.VariableValue`1.#ctor(System.Activities.Variable)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.VariableValue`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.VariableValue`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.VariableValue`1.#ctor(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Expressions.VariableValue`1.#ctor" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableValue`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.VariableValue`1.LocationReference">
      <topicdata group="api" />
      <apidata name="LocationReference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.Expressions.EnvironmentLocationValue`1.LocationReference">
          <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.Expressions.VariableValue`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LocationReference" />
      <returns>
        <type api="T:System.Activities.LocationReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableValue`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Expressions.VariableValue`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.Activity.ToString">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableValue`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Expressions.VariableValue`1.Variable">
      <topicdata group="api" />
      <apidata name="Variable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Variable" />
      <setter name="set_Variable" />
      <returns>
        <type api="T:System.Activities.Variable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities.Expressions" />
        <type api="T:System.Activities.Expressions.VariableValue`1" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>