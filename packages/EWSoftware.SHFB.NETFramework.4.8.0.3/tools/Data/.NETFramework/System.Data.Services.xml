<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Data.Services">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Services.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Services.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Services.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Data.Services">
      <topicdata group="api" />
      <apidata name="System.Data.Services" group="namespace" />
      <elements>
        <element api="T:System.Data.Services.DataServiceOperationContext" />
        <element api="T:System.Data.Services.ChangeInterceptorAttribute" />
        <element api="T:System.Data.Services.DataService`1" />
        <element api="T:System.Data.Services.DataServiceBehavior" />
        <element api="T:System.Data.Services.DataServiceConfiguration" />
        <element api="T:System.Data.Services.DataServiceException" />
        <element api="T:System.Data.Services.DataServiceHost" />
        <element api="T:System.Data.Services.DataServiceHostFactory" />
        <element api="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" />
        <element api="T:System.Data.Services.DataServiceProcessingPipeline" />
        <element api="T:System.Data.Services.ETagAttribute" />
        <element api="T:System.Data.Services.ExpandSegment" />
        <element api="T:System.Data.Services.ExpandSegmentCollection" />
        <element api="T:System.Data.Services.HandleExceptionArgs" />
        <element api="T:System.Data.Services.IDataServiceConfiguration" />
        <element api="T:System.Data.Services.IDataServiceHost" />
        <element api="T:System.Data.Services.IDataServiceHost2" />
        <element api="T:System.Data.Services.IExpandProvider" />
        <element api="T:System.Data.Services.IExpandedResult" />
        <element api="T:System.Data.Services.IRequestHandler" />
        <element api="T:System.Data.Services.IUpdatable" />
        <element api="T:System.Data.Services.IgnorePropertiesAttribute" />
        <element api="T:System.Data.Services.MimeTypeAttribute" />
        <element api="T:System.Data.Services.ProcessRequestArgs" />
        <element api="T:System.Data.Services.QueryInterceptorAttribute" />
        <element api="T:System.Data.Services.UpdateOperations" />
        <element api="T:System.Data.Services.EntitySetRights" />
        <element api="T:System.Data.Services.ServiceOperationRights" />
        <element api="T:System.Data.Services.SingleResultAttribute" />
      </elements>
    </api>
    <api id="T:System.Data.Services.ChangeInterceptorAttribute">
      <topicdata group="api" />
      <apidata name="ChangeInterceptorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Services.ChangeInterceptorAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.ChangeInterceptorAttribute.EntitySetName" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Services.ChangeInterceptorAttribute">
      <topicdata name="ChangeInterceptorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.ChangeInterceptorAttribute" />
      <apidata name="ChangeInterceptorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ChangeInterceptorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.ChangeInterceptorAttribute">
      <topicdata name="ChangeInterceptorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.ChangeInterceptorAttribute" />
      <apidata name="ChangeInterceptorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.ChangeInterceptorAttribute.EntitySetName" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ChangeInterceptorAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Services.ChangeInterceptorAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entitySetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ChangeInterceptorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ChangeInterceptorAttribute.EntitySetName">
      <topicdata group="api" />
      <apidata name="EntitySetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntitySetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ChangeInterceptorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.DataService`1">
      <topicdata group="api" />
      <apidata name="DataService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.Services.DataService`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Data.Services.IRequestHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Data.Services.DataService`1.#ctor" />
        <element api="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost)" />
        <element api="M:System.Data.Services.DataService`1.CreateDataSource" />
        <element api="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)" />
        <element api="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)" />
        <element api="M:System.Data.Services.DataService`1.ProcessRequest" />
        <element api="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Services.DataService`1.CurrentDataSource" />
        <element api="P:System.Data.Services.DataService`1.ProcessingPipeline" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
          <assignment name="InstanceContextMode">
            <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
            <enumValue>
              <field name="PerCall" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute" ref="true" />
          <assignment name="RequirementsMode">
            <type api="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Services.DataService`1">
      <topicdata name="DataService" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.DataService`1" />
      <apidata name="DataService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.Services.DataService`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost)" />
        <element api="M:System.Data.Services.DataService`1.CreateDataSource" />
        <element api="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)" />
        <element api="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)" />
        <element api="M:System.Data.Services.DataService`1.ProcessRequest" />
        <element api="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.DataService`1">
      <topicdata name="DataService" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.DataService`1" />
      <apidata name="DataService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.Services.DataService`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Data.Services.DataService`1.CurrentDataSource" />
        <element api="P:System.Data.Services.DataService`1.ProcessingPipeline" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataService`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost)">
      <topicdata group="api" />
      <apidata name="AttachHost" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="host">
          <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataService`1.CreateDataSource">
      <topicdata group="api" />
      <apidata name="CreateDataSource" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <template name="T" index="0" api="T:System.Data.Services.DataService`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataService`1.CurrentDataSource">
      <topicdata group="api" />
      <apidata name="CurrentDataSource" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentDataSource" />
      <returns>
        <template name="T" index="0" api="T:System.Data.Services.DataService`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)">
      <topicdata group="api" />
      <apidata name="HandleException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Data.Services.HandleExceptionArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
      <topicdata group="api" />
      <apidata name="OnStartProcessingRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Data.Services.ProcessRequestArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataService`1.ProcessingPipeline">
      <topicdata group="api" />
      <apidata name="ProcessingPipeline" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProcessingPipeline" />
      <returns>
        <type api="T:System.Data.Services.DataServiceProcessingPipeline" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataService`1.ProcessRequest">
      <topicdata group="api" />
      <apidata name="ProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ProcessRequestForMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="messageBody">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)">
          <type api="T:System.Data.Services.IRequestHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.DataServiceBehavior">
      <topicdata group="api" />
      <apidata name="DataServiceBehavior" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Services.DataServiceBehavior.AcceptCountRequests" />
        <element api="P:System.Data.Services.DataServiceBehavior.AcceptProjectionRequests" />
        <element api="P:System.Data.Services.DataServiceBehavior.AcceptReplaceFunctionInQuery" />
        <element api="P:System.Data.Services.DataServiceBehavior.InvokeInterceptorsOnLinkDelete" />
        <element api="P:System.Data.Services.DataServiceBehavior.MaxProtocolVersion" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.DataServiceBehavior">
      <topicdata name="DataServiceBehavior" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.DataServiceBehavior" />
      <apidata name="DataServiceBehavior" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceBehavior" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.DataServiceBehavior">
      <topicdata name="DataServiceBehavior" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.DataServiceBehavior" />
      <apidata name="DataServiceBehavior" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.DataServiceBehavior.AcceptCountRequests" />
        <element api="P:System.Data.Services.DataServiceBehavior.AcceptProjectionRequests" />
        <element api="P:System.Data.Services.DataServiceBehavior.AcceptReplaceFunctionInQuery" />
        <element api="P:System.Data.Services.DataServiceBehavior.InvokeInterceptorsOnLinkDelete" />
        <element api="P:System.Data.Services.DataServiceBehavior.MaxProtocolVersion" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceBehavior" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceBehavior.AcceptCountRequests">
      <topicdata group="api" />
      <apidata name="AcceptCountRequests" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AcceptCountRequests" />
      <setter name="set_AcceptCountRequests" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceBehavior.AcceptProjectionRequests">
      <topicdata group="api" />
      <apidata name="AcceptProjectionRequests" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AcceptProjectionRequests" />
      <setter name="set_AcceptProjectionRequests" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceBehavior.AcceptReplaceFunctionInQuery">
      <topicdata group="api" />
      <apidata name="AcceptReplaceFunctionInQuery" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AcceptReplaceFunctionInQuery" />
      <setter name="set_AcceptReplaceFunctionInQuery" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceBehavior.InvokeInterceptorsOnLinkDelete">
      <topicdata group="api" />
      <apidata name="InvokeInterceptorsOnLinkDelete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InvokeInterceptorsOnLinkDelete" />
      <setter name="set_InvokeInterceptorsOnLinkDelete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceBehavior.MaxProtocolVersion">
      <topicdata group="api" />
      <apidata name="MaxProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxProtocolVersion" />
      <setter name="set_MaxProtocolVersion" />
      <returns>
        <type api="T:System.Data.Services.Common.DataServiceProtocolVersion" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceBehavior" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.DataServiceConfiguration">
      <topicdata group="api" />
      <apidata name="DataServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Data.Services.DataServiceConfiguration.EnableTypeAccess(System.String)" />
        <element api="M:System.Data.Services.DataServiceConfiguration.RegisterKnownType(System.Type)" />
        <element api="M:System.Data.Services.DataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)" />
        <element api="M:System.Data.Services.DataServiceConfiguration.SetEntitySetPageSize(System.String,System.Int32)" />
        <element api="M:System.Data.Services.DataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Services.DataServiceConfiguration.DataServiceBehavior" />
        <element api="P:System.Data.Services.DataServiceConfiguration.EnableTypeConversion" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxBatchCount" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxChangesetCount" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxExpandCount" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxExpandDepth" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxObjectCountOnInsert" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxResultsPerCollection" />
        <element api="P:System.Data.Services.DataServiceConfiguration.UseVerboseErrors" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.DataServiceConfiguration">
      <topicdata name="DataServiceConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.DataServiceConfiguration" />
      <apidata name="DataServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.DataServiceConfiguration.EnableTypeAccess(System.String)" />
        <element api="M:System.Data.Services.DataServiceConfiguration.RegisterKnownType(System.Type)" />
        <element api="M:System.Data.Services.DataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)" />
        <element api="M:System.Data.Services.DataServiceConfiguration.SetEntitySetPageSize(System.String,System.Int32)" />
        <element api="M:System.Data.Services.DataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.DataServiceConfiguration">
      <topicdata name="DataServiceConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.DataServiceConfiguration" />
      <apidata name="DataServiceConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.DataServiceConfiguration.DataServiceBehavior" />
        <element api="P:System.Data.Services.DataServiceConfiguration.EnableTypeConversion" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxBatchCount" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxChangesetCount" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxExpandCount" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxExpandDepth" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxObjectCountOnInsert" />
        <element api="P:System.Data.Services.DataServiceConfiguration.MaxResultsPerCollection" />
        <element api="P:System.Data.Services.DataServiceConfiguration.UseVerboseErrors" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceConfiguration.DataServiceBehavior">
      <topicdata group="api" />
      <apidata name="DataServiceBehavior" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataServiceBehavior" />
      <returns>
        <type api="T:System.Data.Services.DataServiceBehavior" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceConfiguration.EnableTypeAccess(System.String)">
      <topicdata group="api" />
      <apidata name="EnableTypeAccess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceConfiguration.EnableTypeConversion">
      <topicdata group="api" />
      <apidata name="EnableTypeConversion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnableTypeConversion" />
      <setter name="set_EnableTypeConversion" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceConfiguration.MaxBatchCount">
      <topicdata group="api" />
      <apidata name="MaxBatchCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBatchCount" />
      <setter name="set_MaxBatchCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.Services.IDataServiceConfiguration.MaxBatchCount">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceConfiguration.MaxChangesetCount">
      <topicdata group="api" />
      <apidata name="MaxChangesetCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxChangesetCount" />
      <setter name="set_MaxChangesetCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.Services.IDataServiceConfiguration.MaxChangesetCount">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceConfiguration.MaxExpandCount">
      <topicdata group="api" />
      <apidata name="MaxExpandCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxExpandCount" />
      <setter name="set_MaxExpandCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.Services.IDataServiceConfiguration.MaxExpandCount">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceConfiguration.MaxExpandDepth">
      <topicdata group="api" />
      <apidata name="MaxExpandDepth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxExpandDepth" />
      <setter name="set_MaxExpandDepth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.Services.IDataServiceConfiguration.MaxExpandDepth">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceConfiguration.MaxObjectCountOnInsert">
      <topicdata group="api" />
      <apidata name="MaxObjectCountOnInsert" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxObjectCountOnInsert" />
      <setter name="set_MaxObjectCountOnInsert" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.Services.IDataServiceConfiguration.MaxObjectCountOnInsert">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceConfiguration.MaxResultsPerCollection">
      <topicdata group="api" />
      <apidata name="MaxResultsPerCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxResultsPerCollection" />
      <setter name="set_MaxResultsPerCollection" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.Services.IDataServiceConfiguration.MaxResultsPerCollection">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceConfiguration.RegisterKnownType(System.Type)">
      <topicdata group="api" />
      <apidata name="RegisterKnownType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Services.IDataServiceConfiguration.RegisterKnownType(System.Type)">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
      <topicdata group="api" />
      <apidata name="SetEntitySetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Data.Services.EntitySetRights" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Services.IDataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceConfiguration.SetEntitySetPageSize(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetEntitySetPageSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="size">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
      <topicdata group="api" />
      <apidata name="SetServiceOperationAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Services.IDataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceConfiguration.UseVerboseErrors">
      <topicdata group="api" />
      <apidata name="UseVerboseErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UseVerboseErrors" />
      <setter name="set_UseVerboseErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.Services.IDataServiceConfiguration.UseVerboseErrors">
          <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.DataServiceException">
      <topicdata group="api" />
      <apidata name="DataServiceException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Services.DataServiceException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.InvalidOperationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Data.Services.DataServiceException.#ctor">
          <element api="M:System.Data.Services.DataServiceException.#ctor" />
          <element api="M:System.Data.Services.DataServiceException.#ctor(System.String)" />
          <element api="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String)" />
          <element api="M:System.Data.Services.DataServiceException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String,System.String,System.String,System.Exception)" />
        </element>
        <element api="M:System.Data.Services.DataServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="P:System.Data.Services.DataServiceException.ErrorCode" />
        <element api="P:System.Data.Services.DataServiceException.MessageLanguage" />
        <element api="P:System.Data.Services.DataServiceException.StatusCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.DataServiceException">
      <topicdata name="DataServiceException" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.DataServiceException" />
      <apidata name="DataServiceException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Services.DataServiceException.#ctor" />
      <elements>
        <element api="M:System.Data.Services.DataServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.DataServiceException">
      <topicdata name="DataServiceException" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.DataServiceException" />
      <apidata name="DataServiceException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Services.DataServiceException.#ctor" />
      <elements>
        <element api="P:System.Data.Services.DataServiceException.ErrorCode" />
        <element api="P:System.Data.Services.DataServiceException.MessageLanguage" />
        <element api="P:System.Data.Services.DataServiceException.StatusCode" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" />
      </containers>
    </api>
    <api id="Overload:System.Data.Services.DataServiceException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.Services.DataServiceException.#ctor" />
        <element api="M:System.Data.Services.DataServiceException.#ctor(System.String)" />
        <element api="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String)" />
        <element api="M:System.Data.Services.DataServiceException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String,System.String,System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.DataServiceException.#ctor" />
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.DataServiceException.#ctor" />
      <parameters>
        <parameter name="statusCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String,System.String,System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.DataServiceException.#ctor" />
      <parameters>
        <parameter name="statusCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="messageXmlLang">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.DataServiceException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.DataServiceException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorCode" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.Services.DataServiceException.MessageLanguage">
      <topicdata group="api" />
      <apidata name="MessageLanguage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageLanguage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceException.StatusCode">
      <topicdata group="api" />
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StatusCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.DataServiceHost">
      <topicdata group="api" />
      <apidata name="DataServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Web.WebServiceHost" ref="true" />
          <type api="T:System.ServiceModel.ServiceHost" ref="true" />
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
        <element api="M:System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.Data.Services.DataServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Data.Services.DataServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Data.Services.DataServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.Data.Services.DataServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="Overload:System.Data.Services.DataServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.ApplyConfiguration" />
        <element api="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="Overload:System.Data.Services.DataServiceHost.InitializeDescription">
          <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Web.WebServiceHost.OnOpening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.ServiceHost.SingletonInstance" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Services.DataServiceHost">
      <topicdata name="DataServiceHost" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.DataServiceHost" />
      <apidata name="DataServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.Data.Services.DataServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Data.Services.DataServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Data.Services.DataServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.Data.Services.DataServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="Overload:System.Data.Services.DataServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)" />
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.ApplyConfiguration" />
        <element api="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="Overload:System.Data.Services.DataServiceHost.InitializeDescription">
          <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)" />
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)" />
        </element>
        <element api="M:System.ServiceModel.ServiceHost.OnClosed" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)" />
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints" />
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)" />
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime" />
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened" />
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters" />
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)" />
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Web.WebServiceHost.OnOpening" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceHost" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.DataServiceHost">
      <topicdata name="DataServiceHost" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.DataServiceHost" />
      <apidata name="DataServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.ServiceHost.SingletonInstance" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication" />
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization" />
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses" />
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers" />
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.ServiceHostBase.Description" />
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions" />
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts" />
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit" />
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceHost" />
      </containers>
    </api>
    <api id="Events.T:System.Data.Services.DataServiceHost">
      <topicdata name="DataServiceHost" group="list" subgroup="Events" typeTopicId="T:System.Data.Services.DataServiceHost" />
      <apidata name="DataServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceHost" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseAddresses">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.DataServiceHostFactory">
      <topicdata group="api" />
      <apidata name="DataServiceHostFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.Services.DataServiceHostFactory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activation.ServiceHostFactory" ref="true" />
          <type api="T:System.ServiceModel.Activation.ServiceHostFactoryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Services.DataServiceHostFactory.#ctor" />
        <element api="Overload:System.Data.Services.DataServiceHostFactory.CreateServiceHost">
          <element api="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])" />
          <element api="M:System.Data.Services.DataServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.DataServiceHostFactory">
      <topicdata name="DataServiceHostFactory" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.DataServiceHostFactory" />
      <apidata name="DataServiceHostFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.Services.DataServiceHostFactory.#ctor" />
      <elements>
        <element api="Overload:System.Data.Services.DataServiceHostFactory.CreateServiceHost">
          <element api="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])" />
          <element api="M:System.Data.Services.DataServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceHostFactory" />
      </containers>
    </api>
    <api id="Overload:System.Data.Services.DataServiceHostFactory.CreateServiceHost">
      <topicdata name="CreateServiceHost" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateServiceHost" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])" />
        <element api="M:System.Data.Services.DataServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceHostFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceHostFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceHostFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <topicdata group="api" />
      <apidata name="CreateServiceHost" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.Services.DataServiceHostFactory.CreateServiceHost" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
          <type api="T:System.ServiceModel.Activation.ServiceHostFactory" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseAddresses">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceHostFactory" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.DataServiceOperationContext">
      <topicdata group="api" />
      <apidata name="DataServiceOperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Services.DataServiceOperationContext.AbsoluteRequestUri" />
        <element api="P:System.Data.Services.DataServiceOperationContext.AbsoluteServiceUri" />
        <element api="P:System.Data.Services.DataServiceOperationContext.IsBatchRequest" />
        <element api="P:System.Data.Services.DataServiceOperationContext.RequestHeaders" />
        <element api="P:System.Data.Services.DataServiceOperationContext.RequestMethod" />
        <element api="P:System.Data.Services.DataServiceOperationContext.ResponseHeaders" />
        <element api="P:System.Data.Services.DataServiceOperationContext.ResponseStatusCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.DataServiceOperationContext">
      <topicdata name="DataServiceOperationContext" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.DataServiceOperationContext" />
      <apidata name="DataServiceOperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceOperationContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.DataServiceOperationContext">
      <topicdata name="DataServiceOperationContext" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.DataServiceOperationContext" />
      <apidata name="DataServiceOperationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.DataServiceOperationContext.AbsoluteRequestUri" />
        <element api="P:System.Data.Services.DataServiceOperationContext.AbsoluteServiceUri" />
        <element api="P:System.Data.Services.DataServiceOperationContext.IsBatchRequest" />
        <element api="P:System.Data.Services.DataServiceOperationContext.RequestHeaders" />
        <element api="P:System.Data.Services.DataServiceOperationContext.RequestMethod" />
        <element api="P:System.Data.Services.DataServiceOperationContext.ResponseHeaders" />
        <element api="P:System.Data.Services.DataServiceOperationContext.ResponseStatusCode" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceOperationContext" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceOperationContext.AbsoluteRequestUri">
      <topicdata group="api" />
      <apidata name="AbsoluteRequestUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AbsoluteRequestUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceOperationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceOperationContext.AbsoluteServiceUri">
      <topicdata group="api" />
      <apidata name="AbsoluteServiceUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AbsoluteServiceUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceOperationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceOperationContext.IsBatchRequest">
      <topicdata group="api" />
      <apidata name="IsBatchRequest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsBatchRequest" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceOperationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceOperationContext.RequestHeaders">
      <topicdata group="api" />
      <apidata name="RequestHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RequestHeaders" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceOperationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceOperationContext.RequestMethod">
      <topicdata group="api" />
      <apidata name="RequestMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RequestMethod" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceOperationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceOperationContext.ResponseHeaders">
      <topicdata group="api" />
      <apidata name="ResponseHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResponseHeaders" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceOperationContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceOperationContext.ResponseStatusCode">
      <topicdata group="api" />
      <apidata name="ResponseStatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResponseStatusCode" />
      <setter name="set_ResponseStatusCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceOperationContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.DataServiceProcessingPipeline">
      <topicdata group="api" />
      <apidata name="DataServiceProcessingPipeline" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Services.DataServiceProcessingPipeline.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedChangeset" />
        <element api="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedRequest" />
        <element api="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingChangeset" />
        <element api="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingRequest" />
        <element api="M:System.Data.Services.DataServiceProcessingPipeline.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.DataServiceProcessingPipeline">
      <topicdata name="DataServiceProcessingPipeline" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.DataServiceProcessingPipeline" />
      <apidata name="DataServiceProcessingPipeline" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Services.DataServiceProcessingPipeline.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipeline" />
      </containers>
    </api>
    <api id="Events.T:System.Data.Services.DataServiceProcessingPipeline">
      <topicdata name="DataServiceProcessingPipeline" group="list" subgroup="Events" typeTopicId="T:System.Data.Services.DataServiceProcessingPipeline" />
      <apidata name="DataServiceProcessingPipeline" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Services.DataServiceProcessingPipeline.#ctor" />
      <elements>
        <element api="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedChangeset" />
        <element api="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedRequest" />
        <element api="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingChangeset" />
        <element api="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingRequest" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipeline" />
      </containers>
    </api>
    <api id="M:System.Data.Services.DataServiceProcessingPipeline.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipeline" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedChangeset">
      <topicdata group="api" />
      <apidata name="ProcessedChangeset" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProcessedChangeset" />
      <remover name="remove_ProcessedChangeset" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipeline" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedRequest">
      <topicdata group="api" />
      <apidata name="ProcessedRequest" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProcessedRequest" />
      <remover name="remove_ProcessedRequest" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipeline" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingChangeset">
      <topicdata group="api" />
      <apidata name="ProcessingChangeset" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProcessingChangeset" />
      <remover name="remove_ProcessingChangeset" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipeline" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingRequest">
      <topicdata group="api" />
      <apidata name="ProcessingRequest" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ProcessingRequest" />
      <remover name="remove_ProcessingRequest" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipeline" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.DataServiceProcessingPipelineEventArgs">
      <topicdata group="api" />
      <apidata name="DataServiceProcessingPipelineEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Services.DataServiceProcessingPipelineEventArgs.OperationContext" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.DataServiceProcessingPipelineEventArgs">
      <topicdata name="DataServiceProcessingPipelineEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" />
      <apidata name="DataServiceProcessingPipelineEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.DataServiceProcessingPipelineEventArgs">
      <topicdata name="DataServiceProcessingPipelineEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" />
      <apidata name="DataServiceProcessingPipelineEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.DataServiceProcessingPipelineEventArgs.OperationContext" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" />
      </containers>
    </api>
    <api id="P:System.Data.Services.DataServiceProcessingPipelineEventArgs.OperationContext">
      <topicdata group="api" />
      <apidata name="OperationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OperationContext" />
      <returns>
        <type api="T:System.Data.Services.DataServiceOperationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.DataServiceProcessingPipelineEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.EntitySetRights">
      <topicdata group="api" />
      <apidata name="EntitySetRights" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.Services.EntitySetRights.None" />
        <element api="F:System.Data.Services.EntitySetRights.ReadSingle" />
        <element api="F:System.Data.Services.EntitySetRights.ReadMultiple" />
        <element api="F:System.Data.Services.EntitySetRights.WriteAppend" />
        <element api="F:System.Data.Services.EntitySetRights.WriteReplace" />
        <element api="F:System.Data.Services.EntitySetRights.WriteDelete" />
        <element api="F:System.Data.Services.EntitySetRights.WriteMerge" />
        <element api="F:System.Data.Services.EntitySetRights.AllRead" />
        <element api="F:System.Data.Services.EntitySetRights.AllWrite" />
        <element api="F:System.Data.Services.EntitySetRights.All" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>63</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.AllRead">
      <topicdata group="api" notopic="" />
      <apidata name="AllRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.AllWrite">
      <topicdata group="api" notopic="" />
      <apidata name="AllWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>60</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.ReadMultiple">
      <topicdata group="api" notopic="" />
      <apidata name="ReadMultiple" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.ReadSingle">
      <topicdata group="api" notopic="" />
      <apidata name="ReadSingle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.WriteAppend">
      <topicdata group="api" notopic="" />
      <apidata name="WriteAppend" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.WriteDelete">
      <topicdata group="api" notopic="" />
      <apidata name="WriteDelete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.WriteMerge">
      <topicdata group="api" notopic="" />
      <apidata name="WriteMerge" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.EntitySetRights.WriteReplace">
      <topicdata group="api" notopic="" />
      <apidata name="WriteReplace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.EntitySetRights" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.Services.ETagAttribute">
      <topicdata group="api" />
      <apidata name="ETagAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Data.Services.ETagAttribute.#ctor">
          <element api="M:System.Data.Services.ETagAttribute.#ctor(System.String)" />
          <element api="M:System.Data.Services.ETagAttribute.#ctor(System.String[])" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.ETagAttribute.PropertyNames" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Services.ETagAttribute">
      <topicdata name="ETagAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.ETagAttribute" />
      <apidata name="ETagAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ETagAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.ETagAttribute">
      <topicdata name="ETagAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.ETagAttribute" />
      <apidata name="ETagAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.ETagAttribute.PropertyNames" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ETagAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Data.Services.ETagAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.Services.ETagAttribute.#ctor(System.String)" />
        <element api="M:System.Data.Services.ETagAttribute.#ctor(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ETagAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.ETagAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.ETagAttribute.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ETagAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.ETagAttribute.#ctor(System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.ETagAttribute.#ctor" />
      <parameters>
        <parameter name="propertyNames" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ETagAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ETagAttribute.PropertyNames">
      <topicdata group="api" />
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyNames" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ETagAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.ExpandSegment">
      <topicdata group="api" />
      <apidata name="ExpandSegment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)" />
        <element api="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Services.ExpandSegment.ExpandedProperty" />
        <element api="P:System.Data.Services.ExpandSegment.Filter" />
        <element api="P:System.Data.Services.ExpandSegment.HasFilter" />
        <element api="P:System.Data.Services.ExpandSegment.MaxResultsExpected" />
        <element api="P:System.Data.Services.ExpandSegment.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.ExpandSegment">
      <topicdata name="ExpandSegment" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.ExpandSegment" />
      <apidata name="ExpandSegment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegment" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.ExpandSegment">
      <topicdata name="ExpandSegment" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.ExpandSegment" />
      <apidata name="ExpandSegment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.ExpandSegment.ExpandedProperty" />
        <element api="P:System.Data.Services.ExpandSegment.Filter" />
        <element api="P:System.Data.Services.ExpandSegment.HasFilter" />
        <element api="P:System.Data.Services.ExpandSegment.MaxResultsExpected" />
        <element api="P:System.Data.Services.ExpandSegment.Name" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegment" />
      </containers>
    </api>
    <api id="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Linq.Expressions.Expression" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ExpandSegment.ExpandedProperty">
      <topicdata group="api" />
      <apidata name="ExpandedProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExpandedProperty" />
      <returns>
        <type api="T:System.Data.Services.Providers.ResourceProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ExpandSegment.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Filter" />
      <returns>
        <type api="T:System.Linq.Expressions.Expression" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ExpandSegment.HasFilter">
      <topicdata group="api" />
      <apidata name="HasFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasFilter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ExpandSegment.MaxResultsExpected">
      <topicdata group="api" />
      <apidata name="MaxResultsExpected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaxResultsExpected" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ExpandSegment.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})">
      <topicdata group="api" />
      <apidata name="PathHasFilter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Data.Services.ExpandSegment" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegment" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.ExpandSegmentCollection">
      <topicdata group="api" />
      <apidata name="ExpandSegmentCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.Services.ExpandSegmentCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Data.Services.ExpandSegment" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Generic.List`1.Add(`0)" />
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Clear" />
        <element api="M:System.Collections.Generic.List`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.IndexOf">
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.#ctor">
          <element api="M:System.Data.Services.ExpandSegmentCollection.#ctor" />
          <element api="M:System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Generic.List`1.Capacity" />
        <element api="P:System.Collections.Generic.List`1.Count" />
        <element api="P:System.Collections.Generic.List`1.Item(System.Int32)" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.Services.ExpandSegmentCollection.HasFilter" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.ExpandSegmentCollection">
      <topicdata name="ExpandSegmentCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.ExpandSegmentCollection" />
      <apidata name="ExpandSegmentCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.Services.ExpandSegmentCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.Add(`0)" />
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Clear" />
        <element api="M:System.Collections.Generic.List`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.IndexOf">
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Data.Services.ExpandSegmentCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegmentCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.ExpandSegmentCollection">
      <topicdata name="ExpandSegmentCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.ExpandSegmentCollection" />
      <apidata name="ExpandSegmentCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Data.Services.ExpandSegmentCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.Generic.List`1.Capacity" />
        <element api="P:System.Collections.Generic.List`1.Count" />
        <element api="P:System.Collections.Generic.List`1.Item(System.Int32)" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Data.Services.ExpandSegmentCollection.HasFilter" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegmentCollection" />
      </containers>
    </api>
    <api id="Overload:System.Data.Services.ExpandSegmentCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.Services.ExpandSegmentCollection.#ctor" />
        <element api="M:System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegmentCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.ExpandSegmentCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.ExpandSegmentCollection.#ctor" />
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegmentCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.ExpandSegmentCollection.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegmentCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ExpandSegmentCollection.HasFilter">
      <topicdata group="api" />
      <apidata name="HasFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasFilter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ExpandSegmentCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.HandleExceptionArgs">
      <topicdata group="api" />
      <apidata name="HandleExceptionArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Services.HandleExceptionArgs.Exception" />
        <element api="P:System.Data.Services.HandleExceptionArgs.ResponseContentType" />
        <element api="P:System.Data.Services.HandleExceptionArgs.ResponseStatusCode" />
        <element api="P:System.Data.Services.HandleExceptionArgs.ResponseWritten" />
        <element api="P:System.Data.Services.HandleExceptionArgs.UseVerboseErrors" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.HandleExceptionArgs">
      <topicdata name="HandleExceptionArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.HandleExceptionArgs" />
      <apidata name="HandleExceptionArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.HandleExceptionArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.HandleExceptionArgs">
      <topicdata name="HandleExceptionArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.HandleExceptionArgs" />
      <apidata name="HandleExceptionArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.HandleExceptionArgs.Exception" />
        <element api="P:System.Data.Services.HandleExceptionArgs.ResponseContentType" />
        <element api="P:System.Data.Services.HandleExceptionArgs.ResponseStatusCode" />
        <element api="P:System.Data.Services.HandleExceptionArgs.ResponseWritten" />
        <element api="P:System.Data.Services.HandleExceptionArgs.UseVerboseErrors" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.HandleExceptionArgs" />
      </containers>
    </api>
    <api id="P:System.Data.Services.HandleExceptionArgs.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Exception" />
      <setter name="set_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.HandleExceptionArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.HandleExceptionArgs.ResponseContentType">
      <topicdata group="api" />
      <apidata name="ResponseContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResponseContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.HandleExceptionArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.HandleExceptionArgs.ResponseStatusCode">
      <topicdata group="api" />
      <apidata name="ResponseStatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResponseStatusCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.HandleExceptionArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.HandleExceptionArgs.ResponseWritten">
      <topicdata group="api" />
      <apidata name="ResponseWritten" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResponseWritten" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.HandleExceptionArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.HandleExceptionArgs.UseVerboseErrors">
      <topicdata group="api" />
      <apidata name="UseVerboseErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseVerboseErrors" />
      <setter name="set_UseVerboseErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.HandleExceptionArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.IDataServiceConfiguration">
      <topicdata group="api" />
      <apidata name="IDataServiceConfiguration" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Services.DataServiceConfiguration" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.Services.IDataServiceConfiguration.RegisterKnownType(System.Type)" />
        <element api="M:System.Data.Services.IDataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)" />
        <element api="M:System.Data.Services.IDataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxBatchCount" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxChangesetCount" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxExpandCount" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxExpandDepth" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxObjectCountOnInsert" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxResultsPerCollection" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.UseVerboseErrors" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.IDataServiceConfiguration">
      <topicdata name="IDataServiceConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.IDataServiceConfiguration" />
      <apidata name="IDataServiceConfiguration" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.IDataServiceConfiguration.RegisterKnownType(System.Type)" />
        <element api="M:System.Data.Services.IDataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)" />
        <element api="M:System.Data.Services.IDataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.IDataServiceConfiguration">
      <topicdata name="IDataServiceConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.IDataServiceConfiguration" />
      <apidata name="IDataServiceConfiguration" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxBatchCount" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxChangesetCount" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxExpandCount" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxExpandDepth" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxObjectCountOnInsert" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.MaxResultsPerCollection" />
        <element api="P:System.Data.Services.IDataServiceConfiguration.UseVerboseErrors" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceConfiguration.MaxBatchCount">
      <topicdata group="api" />
      <apidata name="MaxBatchCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBatchCount" />
      <setter name="set_MaxBatchCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceConfiguration.MaxChangesetCount">
      <topicdata group="api" />
      <apidata name="MaxChangesetCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxChangesetCount" />
      <setter name="set_MaxChangesetCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceConfiguration.MaxExpandCount">
      <topicdata group="api" />
      <apidata name="MaxExpandCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxExpandCount" />
      <setter name="set_MaxExpandCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceConfiguration.MaxExpandDepth">
      <topicdata group="api" />
      <apidata name="MaxExpandDepth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxExpandDepth" />
      <setter name="set_MaxExpandDepth" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceConfiguration.MaxObjectCountOnInsert">
      <topicdata group="api" />
      <apidata name="MaxObjectCountOnInsert" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxObjectCountOnInsert" />
      <setter name="set_MaxObjectCountOnInsert" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceConfiguration.MaxResultsPerCollection">
      <topicdata group="api" />
      <apidata name="MaxResultsPerCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxResultsPerCollection" />
      <setter name="set_MaxResultsPerCollection" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IDataServiceConfiguration.RegisterKnownType(System.Type)">
      <topicdata group="api" />
      <apidata name="RegisterKnownType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IDataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
      <topicdata group="api" />
      <apidata name="SetEntitySetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Data.Services.EntitySetRights" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IDataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
      <topicdata group="api" />
      <apidata name="SetServiceOperationAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceConfiguration.UseVerboseErrors">
      <topicdata group="api" />
      <apidata name="UseVerboseErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UseVerboseErrors" />
      <setter name="set_UseVerboseErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.IDataServiceHost">
      <topicdata group="api" />
      <apidata name="IDataServiceHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Services.IDataServiceHost2" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)" />
        <element api="M:System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)" />
        <element api="P:System.Data.Services.IDataServiceHost.AbsoluteRequestUri" />
        <element api="P:System.Data.Services.IDataServiceHost.AbsoluteServiceUri" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestAccept" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestAcceptCharSet" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestContentType" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestHttpMethod" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestIfMatch" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestIfNoneMatch" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestMaxVersion" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestStream" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestVersion" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseCacheControl" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseContentType" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseETag" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseLocation" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseStatusCode" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseStream" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseVersion" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.IDataServiceHost">
      <topicdata name="IDataServiceHost" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.IDataServiceHost" />
      <apidata name="IDataServiceHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)" />
        <element api="M:System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.IDataServiceHost">
      <topicdata name="IDataServiceHost" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.IDataServiceHost" />
      <apidata name="IDataServiceHost" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.IDataServiceHost.AbsoluteRequestUri" />
        <element api="P:System.Data.Services.IDataServiceHost.AbsoluteServiceUri" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestAccept" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestAcceptCharSet" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestContentType" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestHttpMethod" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestIfMatch" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestIfNoneMatch" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestMaxVersion" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestStream" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestVersion" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseCacheControl" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseContentType" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseETag" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseLocation" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseStatusCode" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseStream" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseVersion" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.AbsoluteRequestUri">
      <topicdata group="api" />
      <apidata name="AbsoluteRequestUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AbsoluteRequestUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.AbsoluteServiceUri">
      <topicdata group="api" />
      <apidata name="AbsoluteServiceUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AbsoluteServiceUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)">
      <topicdata group="api" />
      <apidata name="GetQueryStringItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)">
      <topicdata group="api" />
      <apidata name="ProcessException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Data.Services.HandleExceptionArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.RequestAccept">
      <topicdata group="api" />
      <apidata name="RequestAccept" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestAccept" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.RequestAcceptCharSet">
      <topicdata group="api" />
      <apidata name="RequestAcceptCharSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestAcceptCharSet" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.RequestContentType">
      <topicdata group="api" />
      <apidata name="RequestContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.RequestHttpMethod">
      <topicdata group="api" />
      <apidata name="RequestHttpMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestHttpMethod" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.RequestIfMatch">
      <topicdata group="api" />
      <apidata name="RequestIfMatch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestIfMatch" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.RequestIfNoneMatch">
      <topicdata group="api" />
      <apidata name="RequestIfNoneMatch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestIfNoneMatch" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.RequestMaxVersion">
      <topicdata group="api" />
      <apidata name="RequestMaxVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestMaxVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.RequestStream">
      <topicdata group="api" />
      <apidata name="RequestStream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestStream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.RequestVersion">
      <topicdata group="api" />
      <apidata name="RequestVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.ResponseCacheControl">
      <topicdata group="api" />
      <apidata name="ResponseCacheControl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ResponseCacheControl" />
      <setter name="set_ResponseCacheControl" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.ResponseContentType">
      <topicdata group="api" />
      <apidata name="ResponseContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ResponseContentType" />
      <setter name="set_ResponseContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.ResponseETag">
      <topicdata group="api" />
      <apidata name="ResponseETag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ResponseETag" />
      <setter name="set_ResponseETag" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.ResponseLocation">
      <topicdata group="api" />
      <apidata name="ResponseLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ResponseLocation" />
      <setter name="set_ResponseLocation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.ResponseStatusCode">
      <topicdata group="api" />
      <apidata name="ResponseStatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ResponseStatusCode" />
      <setter name="set_ResponseStatusCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.ResponseStream">
      <topicdata group="api" />
      <apidata name="ResponseStream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ResponseStream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost.ResponseVersion">
      <topicdata group="api" />
      <apidata name="ResponseVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ResponseVersion" />
      <setter name="set_ResponseVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.IDataServiceHost2">
      <topicdata group="api" />
      <apidata name="IDataServiceHost2" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Data.Services.IDataServiceHost" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)" />
        <element api="M:System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)" />
        <element api="P:System.Data.Services.IDataServiceHost.AbsoluteRequestUri" />
        <element api="P:System.Data.Services.IDataServiceHost.AbsoluteServiceUri" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestAccept" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestAcceptCharSet" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestContentType" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestHttpMethod" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestIfMatch" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestIfNoneMatch" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestMaxVersion" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestStream" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestVersion" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseCacheControl" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseContentType" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseETag" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseLocation" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseStatusCode" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseStream" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseVersion" />
        <element api="P:System.Data.Services.IDataServiceHost2.RequestHeaders" />
        <element api="P:System.Data.Services.IDataServiceHost2.ResponseHeaders" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.IDataServiceHost2">
      <topicdata name="IDataServiceHost2" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.IDataServiceHost2" />
      <apidata name="IDataServiceHost2" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)" />
        <element api="M:System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost2" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.IDataServiceHost2">
      <topicdata name="IDataServiceHost2" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.IDataServiceHost2" />
      <apidata name="IDataServiceHost2" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.IDataServiceHost.AbsoluteRequestUri" />
        <element api="P:System.Data.Services.IDataServiceHost.AbsoluteServiceUri" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestAccept" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestAcceptCharSet" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestContentType" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestHttpMethod" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestIfMatch" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestIfNoneMatch" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestMaxVersion" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestStream" />
        <element api="P:System.Data.Services.IDataServiceHost.RequestVersion" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseCacheControl" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseContentType" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseETag" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseLocation" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseStatusCode" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseStream" />
        <element api="P:System.Data.Services.IDataServiceHost.ResponseVersion" />
        <element api="P:System.Data.Services.IDataServiceHost2.RequestHeaders" />
        <element api="P:System.Data.Services.IDataServiceHost2.ResponseHeaders" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost2" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost2.RequestHeaders">
      <topicdata group="api" />
      <apidata name="RequestHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestHeaders" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IDataServiceHost2.ResponseHeaders">
      <topicdata group="api" />
      <apidata name="ResponseHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ResponseHeaders" />
      <returns>
        <type api="T:System.Net.WebHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IDataServiceHost2" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.IExpandedResult">
      <topicdata group="api" />
      <apidata name="IExpandedResult" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.IExpandedResult.GetExpandedPropertyValue(System.String)" />
        <element api="P:System.Data.Services.IExpandedResult.ExpandedElement" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.IExpandedResult">
      <topicdata name="IExpandedResult" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.IExpandedResult" />
      <apidata name="IExpandedResult" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.IExpandedResult.GetExpandedPropertyValue(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IExpandedResult" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.IExpandedResult">
      <topicdata name="IExpandedResult" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.IExpandedResult" />
      <apidata name="IExpandedResult" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.IExpandedResult.ExpandedElement" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IExpandedResult" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IExpandedResult.ExpandedElement">
      <topicdata group="api" />
      <apidata name="ExpandedElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ExpandedElement" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IExpandedResult" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IExpandedResult.GetExpandedPropertyValue(System.String)">
      <topicdata group="api" />
      <apidata name="GetExpandedPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IExpandedResult" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.IExpandProvider">
      <topicdata group="api" />
      <apidata name="IExpandProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.IExpandProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.IExpandProvider">
      <topicdata name="IExpandProvider" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.IExpandProvider" />
      <apidata name="IExpandProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.IExpandProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IExpandProvider" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IExpandProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})">
      <topicdata group="api" />
      <apidata name="ApplyExpansions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="queryable">
          <type api="T:System.Linq.IQueryable" ref="true" />
        </parameter>
        <parameter name="expandPaths">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Data.Services.ExpandSegmentCollection" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IExpandProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.IgnorePropertiesAttribute">
      <topicdata group="api" />
      <apidata name="IgnorePropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Data.Services.IgnorePropertiesAttribute.#ctor">
          <element api="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String)" />
          <element api="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String[])" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.IgnorePropertiesAttribute.PropertyNames" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Services.IgnorePropertiesAttribute">
      <topicdata name="IgnorePropertiesAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.IgnorePropertiesAttribute" />
      <apidata name="IgnorePropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IgnorePropertiesAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.IgnorePropertiesAttribute">
      <topicdata name="IgnorePropertiesAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.IgnorePropertiesAttribute" />
      <apidata name="IgnorePropertiesAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.IgnorePropertiesAttribute.PropertyNames" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IgnorePropertiesAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Data.Services.IgnorePropertiesAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String)" />
        <element api="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IgnorePropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.IgnorePropertiesAttribute.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IgnorePropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Services.IgnorePropertiesAttribute.#ctor" />
      <parameters>
        <parameter name="propertyNames" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IgnorePropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.IgnorePropertiesAttribute.PropertyNames">
      <topicdata group="api" />
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyNames" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IgnorePropertiesAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.IRequestHandler">
      <topicdata group="api" />
      <apidata name="IRequestHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Services.DataService`1" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Services.IRequestHandler">
      <topicdata name="IRequestHandler" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.IRequestHandler" />
      <apidata name="IRequestHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IRequestHandler" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="ProcessRequestForMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="messageBody">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IRequestHandler" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.Web.WebInvokeAttribute" ref="true" />
          <assignment name="UriTemplate">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="Method">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.Services.IUpdatable">
      <topicdata group="api" />
      <apidata name="IUpdatable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Services.Providers.IDataServiceUpdateProvider" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.Services.IUpdatable.AddReferenceToCollection(System.Object,System.String,System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.ClearChanges" />
        <element api="M:System.Data.Services.IUpdatable.CreateResource(System.String,System.String)" />
        <element api="M:System.Data.Services.IUpdatable.DeleteResource(System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.GetResource(System.Linq.IQueryable,System.String)" />
        <element api="M:System.Data.Services.IUpdatable.GetValue(System.Object,System.String)" />
        <element api="M:System.Data.Services.IUpdatable.RemoveReferenceFromCollection(System.Object,System.String,System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.ResetResource(System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.ResolveResource(System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.SaveChanges" />
        <element api="M:System.Data.Services.IUpdatable.SetReference(System.Object,System.String,System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.SetValue(System.Object,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.IUpdatable">
      <topicdata name="IUpdatable" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.IUpdatable" />
      <apidata name="IUpdatable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Services.IUpdatable.AddReferenceToCollection(System.Object,System.String,System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.ClearChanges" />
        <element api="M:System.Data.Services.IUpdatable.CreateResource(System.String,System.String)" />
        <element api="M:System.Data.Services.IUpdatable.DeleteResource(System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.GetResource(System.Linq.IQueryable,System.String)" />
        <element api="M:System.Data.Services.IUpdatable.GetValue(System.Object,System.String)" />
        <element api="M:System.Data.Services.IUpdatable.RemoveReferenceFromCollection(System.Object,System.String,System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.ResetResource(System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.ResolveResource(System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.SaveChanges" />
        <element api="M:System.Data.Services.IUpdatable.SetReference(System.Object,System.String,System.Object)" />
        <element api="M:System.Data.Services.IUpdatable.SetValue(System.Object,System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.AddReferenceToCollection(System.Object,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="AddReferenceToCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="targetResource">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="resourceToBeAdded">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.ClearChanges">
      <topicdata group="api" />
      <apidata name="ClearChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.CreateResource(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateResource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="containerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fullTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.DeleteResource(System.Object)">
      <topicdata group="api" />
      <apidata name="DeleteResource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="targetResource">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.GetResource(System.Linq.IQueryable,System.String)">
      <topicdata group="api" />
      <apidata name="GetResource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="query">
          <type api="T:System.Linq.IQueryable" ref="true" />
        </parameter>
        <parameter name="fullTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.GetValue(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="targetResource">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="RemoveReferenceFromCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="targetResource">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="resourceToBeRemoved">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.ResetResource(System.Object)">
      <topicdata group="api" />
      <apidata name="ResetResource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="resource">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.ResolveResource(System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveResource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="resource">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.SaveChanges">
      <topicdata group="api" />
      <apidata name="SaveChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.SetReference(System.Object,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="SetReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="targetResource">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Services.IUpdatable.SetValue(System.Object,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="targetResource">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.IUpdatable" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.MimeTypeAttribute">
      <topicdata group="api" />
      <apidata name="MimeTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Services.MimeTypeAttribute.#ctor(System.String,System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.MimeTypeAttribute.MemberName" />
        <element api="P:System.Data.Services.MimeTypeAttribute.MimeType" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Services.MimeTypeAttribute">
      <topicdata name="MimeTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.MimeTypeAttribute" />
      <apidata name="MimeTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.MimeTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.MimeTypeAttribute">
      <topicdata name="MimeTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.MimeTypeAttribute" />
      <apidata name="MimeTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.MimeTypeAttribute.MemberName" />
        <element api="P:System.Data.Services.MimeTypeAttribute.MimeType" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.MimeTypeAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Services.MimeTypeAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mimeType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.MimeTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.MimeTypeAttribute.MemberName">
      <topicdata group="api" />
      <apidata name="MemberName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MemberName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.MimeTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.MimeTypeAttribute.MimeType">
      <topicdata group="api" />
      <apidata name="MimeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MimeType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.MimeTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.ProcessRequestArgs">
      <topicdata group="api" />
      <apidata name="ProcessRequestArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Services.ProcessRequestArgs.IsBatchOperation" />
        <element api="P:System.Data.Services.ProcessRequestArgs.OperationContext" />
        <element api="P:System.Data.Services.ProcessRequestArgs.RequestUri" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Services.ProcessRequestArgs">
      <topicdata name="ProcessRequestArgs" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.ProcessRequestArgs" />
      <apidata name="ProcessRequestArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ProcessRequestArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.ProcessRequestArgs">
      <topicdata name="ProcessRequestArgs" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.ProcessRequestArgs" />
      <apidata name="ProcessRequestArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Services.ProcessRequestArgs.IsBatchOperation" />
        <element api="P:System.Data.Services.ProcessRequestArgs.OperationContext" />
        <element api="P:System.Data.Services.ProcessRequestArgs.RequestUri" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ProcessRequestArgs" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ProcessRequestArgs.IsBatchOperation">
      <topicdata group="api" />
      <apidata name="IsBatchOperation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsBatchOperation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ProcessRequestArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ProcessRequestArgs.OperationContext">
      <topicdata group="api" />
      <apidata name="OperationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OperationContext" />
      <returns>
        <type api="T:System.Data.Services.DataServiceOperationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ProcessRequestArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.ProcessRequestArgs.RequestUri">
      <topicdata group="api" />
      <apidata name="RequestUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RequestUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ProcessRequestArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.QueryInterceptorAttribute">
      <topicdata group="api" />
      <apidata name="QueryInterceptorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Services.QueryInterceptorAttribute">
      <topicdata name="QueryInterceptorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.QueryInterceptorAttribute" />
      <apidata name="QueryInterceptorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.QueryInterceptorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.QueryInterceptorAttribute">
      <topicdata name="QueryInterceptorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.QueryInterceptorAttribute" />
      <apidata name="QueryInterceptorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.QueryInterceptorAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entitySetName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.QueryInterceptorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName">
      <topicdata group="api" />
      <apidata name="EntitySetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntitySetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.QueryInterceptorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.ServiceOperationRights">
      <topicdata group="api" />
      <apidata name="ServiceOperationRights" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.Services.ServiceOperationRights.None" />
        <element api="F:System.Data.Services.ServiceOperationRights.ReadSingle" />
        <element api="F:System.Data.Services.ServiceOperationRights.ReadMultiple" />
        <element api="F:System.Data.Services.ServiceOperationRights.AllRead" />
        <element api="F:System.Data.Services.ServiceOperationRights.All" />
        <element api="F:System.Data.Services.ServiceOperationRights.OverrideEntitySetRights" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.Services.ServiceOperationRights.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.ServiceOperationRights.AllRead">
      <topicdata group="api" notopic="" />
      <apidata name="AllRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.ServiceOperationRights.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.ServiceOperationRights.OverrideEntitySetRights">
      <topicdata group="api" notopic="" />
      <apidata name="OverrideEntitySetRights" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.ServiceOperationRights.ReadMultiple">
      <topicdata group="api" notopic="" />
      <apidata name="ReadMultiple" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.ServiceOperationRights.ReadSingle">
      <topicdata group="api" notopic="" />
      <apidata name="ReadSingle" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.ServiceOperationRights" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.Services.SingleResultAttribute">
      <topicdata group="api" />
      <apidata name="SingleResultAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Services.SingleResultAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Services.SingleResultAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Services.SingleResultAttribute">
      <topicdata name="SingleResultAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Services.SingleResultAttribute" />
      <apidata name="SingleResultAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Services.SingleResultAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.SingleResultAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Services.SingleResultAttribute">
      <topicdata name="SingleResultAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Services.SingleResultAttribute" />
      <apidata name="SingleResultAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Services.SingleResultAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.SingleResultAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Services.SingleResultAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.SingleResultAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Services.UpdateOperations">
      <topicdata group="api" />
      <apidata name="UpdateOperations" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.Services.UpdateOperations.None" />
        <element api="F:System.Data.Services.UpdateOperations.Add" />
        <element api="F:System.Data.Services.UpdateOperations.Change" />
        <element api="F:System.Data.Services.UpdateOperations.Delete" />
      </elements>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Data.Services.UpdateOperations.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.UpdateOperations" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.UpdateOperations" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.UpdateOperations.Change">
      <topicdata group="api" notopic="" />
      <apidata name="Change" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.UpdateOperations" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.UpdateOperations" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.UpdateOperations.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.UpdateOperations" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.UpdateOperations" ref="false" />
      </containers>
    </api>
    <api id="F:System.Data.Services.UpdateOperations.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Services.UpdateOperations" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data.Services" module="System.Data.Services" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Services" />
        <type api="T:System.Data.Services.UpdateOperations" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>