<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.DirectoryServices">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.DirectoryServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Net.DnsPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="RequestMinimum" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.DirectoryServices">
      <topicdata group="api" />
      <apidata name="System.DirectoryServices" group="namespace" />
      <elements>
        <element api="T:System.DirectoryServices.ActiveDirectoryRights" />
        <element api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" />
        <element api="T:System.DirectoryServices.PropertyAccess" />
        <element api="T:System.DirectoryServices.ActiveDirectorySecurity" />
        <element api="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
        <element api="T:System.DirectoryServices.ListChildrenAccessRule" />
        <element api="T:System.DirectoryServices.CreateChildAccessRule" />
        <element api="T:System.DirectoryServices.DeleteChildAccessRule" />
        <element api="T:System.DirectoryServices.PropertyAccessRule" />
        <element api="T:System.DirectoryServices.PropertySetAccessRule" />
        <element api="T:System.DirectoryServices.ExtendedRightAccessRule" />
        <element api="T:System.DirectoryServices.DeleteTreeAccessRule" />
        <element api="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
        <element api="T:System.DirectoryServices.AuthenticationTypes" />
        <element api="T:System.DirectoryServices.DereferenceAlias" />
        <element api="T:System.DirectoryServices.DSDescriptionAttribute" />
        <element api="T:System.DirectoryServices.DirectoryEntries" />
        <element api="T:System.DirectoryServices.DirectoryEntry" />
        <element api="T:System.DirectoryServices.DirectoryEntryConfiguration" />
        <element api="T:System.DirectoryServices.DirectorySearcher" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermission" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
        <element api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
        <element api="T:System.DirectoryServices.DirectorySynchronization" />
        <element api="T:System.DirectoryServices.DirectorySynchronizationOptions" />
        <element api="T:System.DirectoryServices.DirectoryVirtualListView" />
        <element api="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
        <element api="T:System.DirectoryServices.ExtendedDN" />
        <element api="T:System.DirectoryServices.PasswordEncodingMethod" />
        <element api="T:System.DirectoryServices.PropertyCollection" />
        <element api="T:System.DirectoryServices.PropertyValueCollection" />
        <element api="T:System.DirectoryServices.ReferralChasingOption" />
        <element api="T:System.DirectoryServices.ResultPropertyCollection" />
        <element api="T:System.DirectoryServices.ResultPropertyValueCollection" />
        <element api="T:System.DirectoryServices.SchemaNameCollection" />
        <element api="T:System.DirectoryServices.SearchResult" />
        <element api="T:System.DirectoryServices.SearchResultCollection" />
        <element api="T:System.DirectoryServices.SearchScope" />
        <element api="T:System.DirectoryServices.SecurityMasks" />
        <element api="T:System.DirectoryServices.SortDirection" />
        <element api="T:System.DirectoryServices.SortOption" />
        <element api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </elements>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
          <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata name="ActiveDirectoryAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <topicdata name="ActiveDirectoryAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      <apidata name="ActiveDirectoryAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActiveDirectoryRights" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType">
      <topicdata group="api" />
      <apidata name="InheritanceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InheritanceType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.ObjectAuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor">
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata name="ActiveDirectoryAuditRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <topicdata name="ActiveDirectoryAuditRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      <apidata name="ActiveDirectoryAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.AccessMask" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAuditRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="adRights">
          <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
        </parameter>
        <parameter name="auditFlags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActiveDirectoryRights" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType">
      <topicdata group="api" />
      <apidata name="InheritanceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InheritanceType" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectoryRights">
      <topicdata group="api" />
      <apidata name="ActiveDirectoryRights" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Delete" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ReadControl" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteDacl" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteOwner" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Synchronize" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.AccessSystemSecurity" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericRead" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericWrite" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericExecute" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.GenericAll" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.CreateChild" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.DeleteChild" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ListChildren" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.Self" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ReadProperty" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.WriteProperty" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.DeleteTree" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ListObject" />
        <element api="F:System.DirectoryServices.ActiveDirectoryRights.ExtendedRight" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.AccessSystemSecurity">
      <topicdata group="api" notopic="" />
      <apidata name="AccessSystemSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.CreateChild">
      <topicdata group="api" notopic="" />
      <apidata name="CreateChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.DeleteChild">
      <topicdata group="api" notopic="" />
      <apidata name="DeleteChild" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.DeleteTree">
      <topicdata group="api" notopic="" />
      <apidata name="DeleteTree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ExtendedRight">
      <topicdata group="api" notopic="" />
      <apidata name="ExtendedRight" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericAll">
      <topicdata group="api" notopic="" />
      <apidata name="GenericAll" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>983551</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericExecute">
      <topicdata group="api" notopic="" />
      <apidata name="GenericExecute" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131076</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericRead">
      <topicdata group="api" notopic="" />
      <apidata name="GenericRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131220</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.GenericWrite">
      <topicdata group="api" notopic="" />
      <apidata name="GenericWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131112</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ListChildren">
      <topicdata group="api" notopic="" />
      <apidata name="ListChildren" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ListObject">
      <topicdata group="api" notopic="" />
      <apidata name="ListObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ReadControl">
      <topicdata group="api" notopic="" />
      <apidata name="ReadControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>131072</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.ReadProperty">
      <topicdata group="api" notopic="" />
      <apidata name="ReadProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Self">
      <topicdata group="api" notopic="" />
      <apidata name="Self" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.Synchronize">
      <topicdata group="api" notopic="" />
      <apidata name="Synchronize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteDacl">
      <topicdata group="api" notopic="" />
      <apidata name="WriteDacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>262144</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteOwner">
      <topicdata group="api" notopic="" />
      <apidata name="WriteOwner" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>524288</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectoryRights.WriteProperty">
      <topicdata group="api" notopic="" />
      <apidata name="WriteProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectoryRights" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.Persist">
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata name="ActiveDirectorySecurity" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <elements>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule">
          <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
          <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.ObjectAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.ObjectAuditRule)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.Persist">
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ActiveDirectorySecurity">
      <topicdata name="ActiveDirectorySecurity" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ActiveDirectorySecurity" />
      <apidata name="ActiveDirectorySecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
        <element api="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory">
      <topicdata name="AccessRuleFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule">
      <topicdata name="AddAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule">
      <topicdata name="AddAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory">
      <topicdata name="AuditRuleFactory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule">
      <topicdata name="RemoveAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific">
      <topicdata name="RemoveAccessRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule">
      <topicdata name="RemoveAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific">
      <topicdata name="RemoveAuditRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule">
      <topicdata name="ResetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.ResetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule">
      <topicdata name="SetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAccessRule(System.Security.AccessControl.ObjectAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule">
      <topicdata name="SetAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
        <element api="M:System.Security.AccessControl.DirectoryObjectSecurity.SetAuditRule(System.Security.AccessControl.ObjectAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType">
      <topicdata group="api" />
      <apidata name="AccessRightType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AccessRightType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.DirectoryObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="objectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritedObjectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType">
      <topicdata group="api" />
      <apidata name="AccessRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AccessRuleType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
      <topicdata group="api" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.DirectoryObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
          <type api="T:System.Security.AccessControl.DirectoryObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
        <parameter name="objectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritedObjectGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType">
      <topicdata group="api" />
      <apidata name="AuditRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AuditRuleType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="ModifyAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="modification">
          <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
        </parameter>
        <parameter name="modified" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="ModifyAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="modification">
          <type api="T:System.Security.AccessControl.AccessControlModification" ref="false" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
        </parameter>
        <parameter name="modified" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
      <topicdata group="api" />
      <apidata name="PurgeAccessRules" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
      <topicdata group="api" />
      <apidata name="PurgeAuditRules" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name="RemoveAccess" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)">
      <topicdata group="api" />
      <apidata name="RemoveAudit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <topicdata group="api" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <topicdata group="api" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.DirectoryServices.ActiveDirectoryAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ActiveDirectorySecurityInheritance">
      <topicdata group="api" />
      <apidata name="ActiveDirectorySecurityInheritance" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.None" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.All" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Descendents" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.SelfAndChildren" />
        <element api="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Children" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Children">
      <topicdata group="api" notopic="" />
      <apidata name="Children" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Descendents">
      <topicdata group="api" notopic="" />
      <apidata name="Descendents" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.SelfAndChildren">
      <topicdata group="api" notopic="" />
      <apidata name="SelfAndChildren" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.AuthenticationTypes">
      <topicdata group="api" />
      <apidata name="AuthenticationTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.AuthenticationTypes.None" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Secure" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Encryption" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Anonymous" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.FastBind" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Signing" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Sealing" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.Delegation" />
        <element api="F:System.DirectoryServices.AuthenticationTypes.ServerBind" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Anonymous">
      <topicdata group="api" notopic="" />
      <apidata name="Anonymous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Delegation">
      <topicdata group="api" notopic="" />
      <apidata name="Delegation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Encryption">
      <topicdata group="api" notopic="" />
      <apidata name="Encryption" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.FastBind">
      <topicdata group="api" notopic="" />
      <apidata name="FastBind" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer">
      <topicdata group="api" notopic="" />
      <apidata name="ReadonlyServer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Sealing">
      <topicdata group="api" notopic="" />
      <apidata name="Sealing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Secure">
      <topicdata group="api" notopic="" />
      <apidata name="Secure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer">
      <topicdata group="api" notopic="" />
      <apidata name="SecureSocketsLayer" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.ServerBind">
      <topicdata group="api" notopic="" />
      <apidata name="ServerBind" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>512</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.AuthenticationTypes.Signing">
      <topicdata group="api" notopic="" />
      <apidata name="Signing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.CreateChildAccessRule">
      <topicdata group="api" />
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor">
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.CreateChildAccessRule">
      <topicdata name="CreateChildAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.CreateChildAccessRule">
      <topicdata name="CreateChildAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.CreateChildAccessRule" />
      <apidata name="CreateChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.CreateChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.CreateChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DeleteChildAccessRule">
      <topicdata group="api" />
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor">
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.DeleteChildAccessRule">
      <topicdata name="DeleteChildAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DeleteChildAccessRule">
      <topicdata name="DeleteChildAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DeleteChildAccessRule" />
      <apidata name="DeleteChildAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteChildAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="childType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteChildAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DeleteTreeAccessRule">
      <topicdata group="api" />
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor">
          <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.DeleteTreeAccessRule">
      <topicdata name="DeleteTreeAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DeleteTreeAccessRule">
      <topicdata name="DeleteTreeAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DeleteTreeAccessRule" />
      <apidata name="DeleteTreeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DeleteTreeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DeleteTreeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DereferenceAlias">
      <topicdata group="api" />
      <apidata name="DereferenceAlias" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.DereferenceAlias.Never" />
        <element api="F:System.DirectoryServices.DereferenceAlias.InSearching" />
        <element api="F:System.DirectoryServices.DereferenceAlias.FindingBaseObject" />
        <element api="F:System.DirectoryServices.DereferenceAlias.Always" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.Always">
      <topicdata group="api" notopic="" />
      <apidata name="Always" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.FindingBaseObject">
      <topicdata group="api" notopic="" />
      <apidata name="FindingBaseObject" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.InSearching">
      <topicdata group="api" notopic="" />
      <apidata name="InSearching" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DereferenceAlias.Never">
      <topicdata group="api" notopic="" />
      <apidata name="Never" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntries">
      <topicdata group="api" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <element api="Overload:System.DirectoryServices.DirectoryEntries.Find">
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.GetEnumerator" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryEntries">
      <topicdata name="DirectoryEntries" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)" />
        <element api="Overload:System.DirectoryServices.DirectoryEntries.Find">
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntries.GetEnumerator" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryEntries">
      <topicdata name="DirectoryEntries" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryEntries" />
      <apidata name="DirectoryEntries" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntries.Find">
      <topicdata name="Find" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Find" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Find(System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntries.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntries.Find" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="schemaClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entry">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntries.SchemaFilter">
      <topicdata group="api" />
      <apidata name="SchemaFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemaFilter" />
      <returns>
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntry">
      <topicdata group="api" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.#ctor">
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.Close" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.CopyTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.DeleteTree" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MoveTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache">
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Children" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Guid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Name" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeGuid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeObject" />
        <element api="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Options" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Parent" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Password" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Properties" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
        <element api="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Username" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DirectoryEntryDesc</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Close" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CommitChanges" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.CopyTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.DeleteTree" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MoveTo">
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
        </element>
        <element api="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache">
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
          <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectoryEntry.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.DirectoryServices.DirectoryEntry.AuthenticationType" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Children" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Guid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Name" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeGuid" />
        <element api="P:System.DirectoryServices.DirectoryEntry.NativeObject" />
        <element api="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Options" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Parent" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Password" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Properties" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaClassName" />
        <element api="P:System.DirectoryServices.DirectoryEntry.SchemaEntry" />
        <element api="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache" />
        <element api="P:System.DirectoryServices.DirectoryEntry.Username" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" />
      </containers>
    </api>
    <api id="Events.T:System.DirectoryServices.DirectoryEntry">
      <topicdata name="DirectoryEntry" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.DirectoryEntry" />
      <apidata name="DirectoryEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryEntry.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.MoveTo">
      <topicdata name="MoveTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="MoveTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache">
      <topicdata name="RefreshCache" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache" />
        <element api="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="adsObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryEntry.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationType">
          <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.AuthenticationType">
      <topicdata group="api" />
      <apidata name="AuthenticationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationType" />
      <setter name="set_AuthenticationType" />
      <returns>
        <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.AuthenticationTypes" ref="false" />
            <enumValue>
              <field name="Secure" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAuthenticationType</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Children">
      <topicdata group="api" />
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Children" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntries" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSChildren</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CommitChanges">
      <topicdata group="api" />
      <apidata name="CommitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.DeleteTree">
      <topicdata group="api" />
      <apidata name="DeleteTree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.DirectoryEntry.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Guid">
      <topicdata group="api" />
      <apidata name="Guid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Guid" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSGuid</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)">
      <topicdata group="api" />
      <apidata name="InvokeGet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="InvokeSet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name="MoveTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.MoveTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <topicdata group="api" />
      <apidata name="MoveTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.MoveTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newParent">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.NativeGuid">
      <topicdata group="api" />
      <apidata name="NativeGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NativeGuid" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSNativeGuid</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.NativeObject">
      <topicdata group="api" />
      <apidata name="NativeObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NativeObject" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSNativeObject</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity">
      <topicdata group="api" />
      <apidata name="ObjectSecurity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ObjectSecurity" />
      <setter name="set_ObjectSecurity" />
      <returns>
        <type api="T:System.DirectoryServices.ActiveDirectorySecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSObjectSecurity</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Options" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSOptions</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSParent</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Password">
      <topicdata group="api" />
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata set="true" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPassword</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPath</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSProperties</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.RefreshCache">
      <topicdata group="api" />
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])">
      <topicdata group="api" />
      <apidata name="RefreshCache" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryEntry.RefreshCache" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyNames">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)">
      <topicdata group="api" />
      <apidata name="Rename" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.SchemaClassName">
      <topicdata group="api" />
      <apidata name="SchemaClassName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemaClassName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSchemaClassName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.SchemaEntry">
      <topicdata group="api" />
      <apidata name="SchemaEntry" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemaEntry" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSchemaEntry</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache">
      <topicdata group="api" />
      <apidata name="UsePropertyCache" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UsePropertyCache" />
      <setter name="set_UsePropertyCache" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSUsePropertyCache</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntry.Username">
      <topicdata group="api" />
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Username" />
      <setter name="set_Username" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSUsername</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata group="api" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata name="DirectoryEntryConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated" />
        <element api="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryEntryConfiguration">
      <topicdata name="DirectoryEntryConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      <apidata name="DirectoryEntryConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral" />
        <element api="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName">
      <topicdata group="api" />
      <apidata name="GetCurrentServerName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated">
      <topicdata group="api" />
      <apidata name="IsMutuallyAuthenticated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize">
      <topicdata group="api" />
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PageSize" />
      <setter name="set_PageSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding">
      <topicdata group="api" />
      <apidata name="PasswordEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PasswordEncoding" />
      <setter name="set_PasswordEncoding" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort">
      <topicdata group="api" />
      <apidata name="PasswordPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PasswordPort" />
      <setter name="set_PasswordPort" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral">
      <topicdata group="api" />
      <apidata name="Referral" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Referral" />
      <setter name="set_Referral" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks">
      <topicdata group="api" />
      <apidata name="SecurityMasks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityMasks" />
      <setter name="set_SecurityMasks" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)">
      <topicdata group="api" />
      <apidata name="SetUserNameQueryQuota" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="accountName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryEntryConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectorySearcher">
      <topicdata group="api" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.#ctor">
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
          <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
        </element>
        <element api="Overload:System.DirectoryServices.DirectorySearcher.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.DirectorySearcher.FindAll" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindOne" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
        <element api="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
        <element api="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PageSize" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Sort" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
        <element api="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DirectorySearcherDesc</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.DirectorySearcher.FindAll" />
        <element api="M:System.DirectoryServices.DirectorySearcher.FindOne" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.DirectorySearcher.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
        <element api="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
        <element api="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
        <element api="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PageSize" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <element api="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Sort" />
        <element api="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
        <element api="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" />
      </containers>
    </api>
    <api id="Events.T:System.DirectoryServices.DirectorySearcher">
      <topicdata name="DirectorySearcher" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.DirectorySearcher" />
      <apidata name="DirectorySearcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySearcher.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
        <element api="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySearcher.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Component.Dispose" />
        <element api="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="searchRoot">
          <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="scope">
          <type api="T:System.DirectoryServices.SearchScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertiesToLoad">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="scope">
          <type api="T:System.DirectoryServices.SearchScope" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Asynchronous">
      <topicdata group="api" />
      <apidata name="Asynchronous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Asynchronous" />
      <setter name="set_Asynchronous" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAsynchronous</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery">
      <topicdata group="api" />
      <apidata name="AttributeScopeQuery" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttributeScopeQuery" />
      <setter name="set_AttributeScopeQuery" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAttributeQuery</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.CacheResults">
      <topicdata group="api" />
      <apidata name="CacheResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CacheResults" />
      <setter name="set_CacheResults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSCacheResults</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ClientTimeout">
      <topicdata group="api" />
      <apidata name="ClientTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientTimeout" />
      <setter name="set_ClientTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSClientTimeout</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.DerefAlias">
      <topicdata group="api" />
      <apidata name="DerefAlias" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DerefAlias" />
      <setter name="set_DerefAlias" />
      <returns>
        <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.DereferenceAlias" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDerefAlias</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization">
      <topicdata group="api" />
      <apidata name="DirectorySynchronization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DirectorySynchronization" />
      <setter name="set_DirectorySynchronization" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectorySynchronization</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.DirectorySearcher.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Component.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Component" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ExtendedDN">
      <topicdata group="api" />
      <apidata name="ExtendedDN" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExtendedDN" />
      <setter name="set_ExtendedDN" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSExtendedDn</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter" />
      <setter name="set_Filter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>(objectClass=*)</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSFilter</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.FindAll">
      <topicdata group="api" />
      <apidata name="FindAll" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySearcher.FindOne">
      <topicdata group="api" />
      <apidata name="FindOne" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PageSize">
      <topicdata group="api" />
      <apidata name="PageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PageSize" />
      <setter name="set_PageSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPageSize</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad">
      <topicdata group="api" />
      <apidata name="PropertiesToLoad" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertiesToLoad" />
      <returns>
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPropertiesToLoad</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Windows.Forms.Design.StringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly">
      <topicdata group="api" />
      <apidata name="PropertyNamesOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyNamesOnly" />
      <setter name="set_PropertyNamesOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSPropertyNamesOnly</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ReferralChasing">
      <topicdata group="api" />
      <apidata name="ReferralChasing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReferralChasing" />
      <setter name="set_ReferralChasing" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
            <enumValue>
              <field name="External" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSReferralChasing</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SearchRoot">
      <topicdata group="api" />
      <apidata name="SearchRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SearchRoot" />
      <setter name="set_SearchRoot" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSearchRoot</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SearchScope">
      <topicdata group="api" />
      <apidata name="SearchScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SearchScope" />
      <setter name="set_SearchScope" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.SearchScope" ref="false" />
            <enumValue>
              <field name="Subtree" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSearchScope</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.SettingsBindableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SecurityMasks">
      <topicdata group="api" />
      <apidata name="SecurityMasks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityMasks" />
      <setter name="set_SecurityMasks" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSecurityMasks</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit">
      <topicdata group="api" />
      <apidata name="ServerPageTimeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServerPageTimeLimit" />
      <setter name="set_ServerPageTimeLimit" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSServerPageTimeLimit</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit">
      <topicdata group="api" />
      <apidata name="ServerTimeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServerTimeLimit" />
      <setter name="set_ServerTimeLimit" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSServerTimeLimit</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.SizeLimit">
      <topicdata group="api" />
      <apidata name="SizeLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SizeLimit" />
      <setter name="set_SizeLimit" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSizeLimit</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Sort">
      <topicdata group="api" />
      <apidata name="Sort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Sort" />
      <setter name="set_Sort" />
      <returns>
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSort</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.Tombstone">
      <topicdata group="api" />
      <apidata name="Tombstone" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Tombstone" />
      <setter name="set_Tombstone" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTombstone</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectorySearcher.VirtualListView">
      <topicdata group="api" />
      <apidata name="VirtualListView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualListView" />
      <setter name="set_VirtualListView" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySearcher" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSVirtualListView</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata group="api" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Runtime.InteropServices.COMException" ref="true" />
          <type api="T:System.Runtime.InteropServices.ExternalException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)" />
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Runtime.InteropServices.COMException.ToString" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Runtime.InteropServices.COMException.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError" />
        <element api="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Runtime.InteropServices.ExternalException.ErrorCode" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </containers>
    </api>
    <api id="Events.T:System.DirectoryServices.DirectoryServicesCOMException">
      <topicdata name="DirectoryServicesCOMException" group="list" subgroup="Events" typeTopicId="T:System.DirectoryServices.DirectoryServicesCOMException" />
      <apidata name="DirectoryServicesCOMException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesCOMException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError">
      <topicdata group="api" />
      <apidata name="ExtendedError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedError" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage">
      <topicdata group="api" />
      <apidata name="ExtendedErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExtendedErrorMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serializationInfo">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="streamingContext">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesCOMException" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata group="api" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.ResourcePermissionBase" ref="true" />
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor">
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata name="DirectoryServicesPermission" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Copy" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.IsUnrestricted" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.ToXml" />
        <element api="M:System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermission">
      <topicdata name="DirectoryServicesPermission" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermission" />
      <apidata name="DirectoryServicesPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <parameters>
        <parameter name="permissionAccessEntries">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryServicesPermission.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries">
      <topicdata group="api" />
      <apidata name="PermissionEntries" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionEntries" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionAccess">
      <topicdata group="api" />
      <apidata name="DirectoryServicesPermissionAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.None" />
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Browse" />
        <element api="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Write" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Browse">
      <topicdata group="api" notopic="" />
      <apidata name="Browse" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectoryServicesPermissionAccess.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata group="api" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Event" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata name="DirectoryServicesPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermissionAttribute">
      <topicdata name="DirectoryServicesPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      <apidata name="DirectoryServicesPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PermissionAccess" />
      <setter name="set_PermissionAccess" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata group="api" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata name="DirectoryServicesPermissionEntry" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermissionEntry">
      <topicdata name="DirectoryServicesPermissionEntry" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      <apidata name="DirectoryServicesPermissionEntry" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="permissionAccess">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntry.PermissionAccess">
      <topicdata group="api" />
      <apidata name="PermissionAccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PermissionAccess" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionAccess" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata group="api" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange">
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata name="DirectoryServicesPermissionEntryCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange">
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
          <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
        </element>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection">
      <topicdata name="DirectoryServicesPermissionEntryCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      <apidata name="DirectoryServicesPermissionEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])" />
        <element api="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnInsert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnRemove(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.OnSet(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntry" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryServicesPermissionEntryCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectorySynchronization">
      <topicdata group="api" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.DirectorySynchronization.#ctor">
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])" />
        </element>
        <element api="M:System.DirectoryServices.DirectorySynchronization.Copy" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie" />
        <element api="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.DirectorySynchronization.Option" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectorySynchronization">
      <topicdata name="DirectorySynchronization" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySynchronization.Copy" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie" />
        <element api="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
          <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectorySynchronization">
      <topicdata name="DirectorySynchronization" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectorySynchronization" />
      <apidata name="DirectorySynchronization" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.DirectorySynchronization.Option" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySynchronization.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
      <topicdata name="ResetDirectorySynchronizationCookie" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
        <element api="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="sync">
          <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="option">
          <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <parameters>
        <parameter name="option">
          <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
        </parameter>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie">
      <topicdata group="api" />
      <apidata name="GetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectorySynchronization.Option">
      <topicdata group="api" />
      <apidata name="Option" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Option" />
      <setter name="set_Option" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectorySynchronizationFlag</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
      <topicdata group="api" />
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])">
      <topicdata group="api" />
      <apidata name="ResetDirectorySynchronizationCookie" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cookie">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronization" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectorySynchronizationOptions">
      <topicdata group="api" />
      <apidata name="DirectorySynchronizationOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Int64" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.None" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.ObjectSecurity" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.ParentsFirst" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.PublicDataOnly" />
        <element api="F:System.DirectoryServices.DirectorySynchronizationOptions.IncrementalValues" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.IncrementalValues">
      <topicdata group="api" notopic="" />
      <apidata name="IncrementalValues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>2147483648</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.ObjectSecurity">
      <topicdata group="api" notopic="" />
      <apidata name="ObjectSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.ParentsFirst">
      <topicdata group="api" notopic="" />
      <apidata name="ParentsFirst" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>2048</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.DirectorySynchronizationOptions.PublicDataOnly">
      <topicdata group="api" notopic="" />
      <apidata name="PublicDataOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </returns>
      <value>8192</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectorySynchronizationOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata group="api" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor">
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)" />
          <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Offset" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Target" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata name="DirectoryVirtualListView" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DirectoryVirtualListView">
      <topicdata name="DirectoryVirtualListView" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListView" />
      <apidata name="DirectoryVirtualListView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Offset" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.Target" />
        <element api="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="context">
          <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.DirectoryVirtualListView.#ctor" />
      <parameters>
        <parameter name="beforeCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="afterCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount">
      <topicdata group="api" />
      <apidata name="AfterCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AfterCount" />
      <setter name="set_AfterCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSAfterCount</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal">
      <topicdata group="api" />
      <apidata name="ApproximateTotal" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ApproximateTotal" />
      <setter name="set_ApproximateTotal" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSApproximateTotal</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount">
      <topicdata group="api" />
      <apidata name="BeforeCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BeforeCount" />
      <setter name="set_BeforeCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSBeforeCount</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext">
      <topicdata group="api" />
      <apidata name="DirectoryVirtualListViewContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DirectoryVirtualListViewContext" />
      <setter name="set_DirectoryVirtualListViewContext" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSDirectoryVirtualListViewContext</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.Offset">
      <topicdata group="api" />
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Offset" />
      <setter name="set_Offset" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSOffset</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTarget</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage">
      <topicdata group="api" />
      <apidata name="TargetPercentage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetPercentage" />
      <setter name="set_TargetPercentage" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSTargetPercentage</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <topicdata group="api" />
      <apidata name="DirectoryVirtualListViewContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor" />
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <topicdata name="DirectoryVirtualListViewContext" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      <apidata name="DirectoryVirtualListViewContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor" />
      <elements>
        <element api="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DirectoryVirtualListViewContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata group="api" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.DirectoryServices.DSDescriptionAttribute.#ctor(System.String)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.DirectoryServices.DSDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata name="DSDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.DSDescriptionAttribute" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.Equals(System.Object)" />
        <element api="M:System.ComponentModel.DescriptionAttribute.GetHashCode" />
        <element api="M:System.ComponentModel.DescriptionAttribute.IsDefaultAttribute" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.DSDescriptionAttribute">
      <topicdata name="DSDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.DSDescriptionAttribute" />
      <apidata name="DSDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.ComponentModel.DescriptionAttribute.DescriptionValue" />
        <element api="P:System.DirectoryServices.DSDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.DSDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.DSDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.DescriptionAttribute.Description">
          <type api="T:System.ComponentModel.DescriptionAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ExtendedDN">
      <topicdata group="api" />
      <apidata name="ExtendedDN" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ExtendedDN.None" />
        <element api="F:System.DirectoryServices.ExtendedDN.HexString" />
        <element api="F:System.DirectoryServices.ExtendedDN.Standard" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.HexString">
      <topicdata group="api" notopic="" />
      <apidata name="HexString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ExtendedDN.Standard">
      <topicdata group="api" notopic="" />
      <apidata name="Standard" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedDN" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ExtendedRightAccessRule">
      <topicdata group="api" />
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor">
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ExtendedRightAccessRule">
      <topicdata name="ExtendedRightAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ExtendedRightAccessRule">
      <topicdata name="ExtendedRightAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ExtendedRightAccessRule" />
      <apidata name="ExtendedRightAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ExtendedRightAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="extendedRightType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ExtendedRightAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ListChildrenAccessRule">
      <topicdata group="api" />
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor">
          <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ListChildrenAccessRule">
      <topicdata name="ListChildrenAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ListChildrenAccessRule">
      <topicdata name="ListChildrenAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ListChildrenAccessRule" />
      <apidata name="ListChildrenAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.ListChildrenAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ListChildrenAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PasswordEncodingMethod">
      <topicdata group="api" />
      <apidata name="PasswordEncodingMethod" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingSsl" />
        <element api="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingClear" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingClear">
      <topicdata group="api" notopic="" />
      <apidata name="PasswordEncodingClear" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingSsl">
      <topicdata group="api" notopic="" />
      <apidata name="PasswordEncodingSsl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PasswordEncodingMethod" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertyAccess">
      <topicdata group="api" />
      <apidata name="PropertyAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.PropertyAccess.Read" />
        <element api="F:System.DirectoryServices.PropertyAccess.Write" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.PropertyAccess.Read">
      <topicdata group="api" notopic="" />
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.PropertyAccess.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertyAccessRule">
      <topicdata group="api" />
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.PropertyAccessRule.#ctor">
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertyAccessRule">
      <topicdata name="PropertyAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertyAccessRule">
      <topicdata name="PropertyAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertyAccessRule" />
      <apidata name="PropertyAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.PropertyAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertyAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertyCollection">
      <topicdata group="api" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IDictionary" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.PropertyCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.PropertyCollection.Count" />
        <element api="P:System.DirectoryServices.PropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.PropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys" />
        <element api="P:System.DirectoryServices.PropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.PropertyCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertyCollection">
      <topicdata name="PropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertyCollection" />
      <apidata name="PropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.PropertyCollection.Count" />
        <element api="P:System.DirectoryServices.PropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.PropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys" />
        <element api="P:System.DirectoryServices.PropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IDictionaryEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.GetEnumerator">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.PropertyNames">
      <topicdata group="api" />
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyNames" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <topicdata group="api" eiiName="IDictionary.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
      <topicdata group="api" eiiName="IDictionary.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IDictionary.Clear">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IDictionary.Contains(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
      <topicdata group="api" eiiName="IDictionary.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsFixedSize">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
      <topicdata group="api" eiiName="IDictionary.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.IsReadOnly">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IDictionary.Item" />
      <setter name="set_System.Collections.IDictionary.Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Item(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
      <topicdata group="api" eiiName="IDictionary.Keys" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IDictionary.Keys" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Keys">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
      <topicdata group="api" eiiName="IDictionary.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IDictionary.Remove(System.Object)">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyCollection.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IDictionary.Values">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertySetAccessRule">
      <topicdata group="api" />
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.DirectoryServices.ActiveDirectoryAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectAccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor">
          <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
          <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
          <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertySetAccessRule">
      <topicdata name="PropertySetAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertySetAccessRule">
      <topicdata name="PropertySetAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertySetAccessRule" />
      <apidata name="PropertySetAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights" />
        <element api="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.InheritedObjectType" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectFlags" />
        <element api="P:System.Security.AccessControl.ObjectAccessRule.ObjectType" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)" />
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)" />
        <element api="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.PropertySetAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.DirectoryServices.PropertyAccess" ref="false" />
        </parameter>
        <parameter name="propertySetType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="inheritanceType">
          <type api="T:System.DirectoryServices.ActiveDirectorySecurityInheritance" ref="false" />
        </parameter>
        <parameter name="inheritedObjectType">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertySetAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.PropertyValueCollection">
      <topicdata group="api" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)" />
        <element api="Overload:System.DirectoryServices.PropertyValueCollection.AddRange">
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
        </element>
        <element api="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.PropertyName" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Value" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.PropertyValueCollection">
      <topicdata name="PropertyValueCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)" />
        <element api="Overload:System.DirectoryServices.PropertyValueCollection.AddRange">
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
          <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
        </element>
        <element api="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.PropertyValueCollection">
      <topicdata name="PropertyValueCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.PropertyValueCollection" />
      <apidata name="PropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.PropertyName" />
        <element api="P:System.DirectoryServices.PropertyValueCollection.Value" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.PropertyValueCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])" />
        <element api="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.PropertyValueCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.PropertyValueCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClearComplete">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsertComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSetComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.PropertyValueCollection.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.PropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ReferralChasingOption">
      <topicdata group="api" />
      <apidata name="ReferralChasingOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.ReferralChasingOption.None" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.Subordinate" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.External" />
        <element api="F:System.DirectoryServices.ReferralChasingOption.All" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>96</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.External">
      <topicdata group="api" notopic="" />
      <apidata name="External" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.ReferralChasingOption.Subordinate">
      <topicdata group="api" notopic="" />
      <apidata name="Subordinate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ReferralChasingOption" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata group="api" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.DictionaryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)" />
        <element api="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata name="ResultPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.Clear" />
        <element api="M:System.Collections.DictionaryBase.GetEnumerator" />
        <element api="M:System.Collections.DictionaryBase.OnClear" />
        <element api="M:System.Collections.DictionaryBase.OnClearComplete" />
        <element api="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
        <element api="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)" />
        <element api="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo">
          <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
          <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ResultPropertyCollection">
      <topicdata name="ResultPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ResultPropertyCollection" />
      <apidata name="ResultPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.DictionaryBase.Count" />
        <element api="P:System.Collections.DictionaryBase.Dictionary" />
        <element api="P:System.Collections.DictionaryBase.InnerHashtable" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
        <element api="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames" />
        <element api="P:System.DirectoryServices.ResultPropertyCollection.Values" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo">
      <topicdata name="CopyTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.ResultPropertyCollection.CopyTo" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames">
      <topicdata group="api" />
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyNames" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyCollection.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata group="api" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata name="ResultPropertyValueCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)" />
        <element api="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.ResultPropertyValueCollection">
      <topicdata name="ResultPropertyValueCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.ResultPropertyValueCollection" />
      <apidata name="ResultPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.ResultPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SchemaNameCollection">
      <topicdata group="api" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)" />
        <element api="Overload:System.DirectoryServices.SchemaNameCollection.AddRange">
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Clear" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Count" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="Methods.T:System.DirectoryServices.SchemaNameCollection">
      <topicdata name="SchemaNameCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)" />
        <element api="Overload:System.DirectoryServices.SchemaNameCollection.AddRange">
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
          <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
        </element>
        <element api="M:System.DirectoryServices.SchemaNameCollection.Clear" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.SchemaNameCollection">
      <topicdata name="SchemaNameCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SchemaNameCollection" />
      <apidata name="SchemaNameCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.SchemaNameCollection.Count" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.SchemaNameCollection.AddRange">
      <topicdata name="AddRange" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)" />
        <element api="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.SchemaNameCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.SchemaNameCollection.AddRange" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stringArray">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SchemaNameCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SearchResult">
      <topicdata group="api" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.DirectoryServices.SearchResult.GetDirectoryEntry" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.SearchResult.Path" />
        <element api="P:System.DirectoryServices.SearchResult.Properties" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.SearchResult">
      <topicdata name="SearchResult" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.DirectoryServices.SearchResult.GetDirectoryEntry" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.SearchResult">
      <topicdata name="SearchResult" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SearchResult" />
      <apidata name="SearchResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.SearchResult.Path" />
        <element api="P:System.DirectoryServices.SearchResult.Properties" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResult.GetDirectoryEntry">
      <topicdata group="api" />
      <apidata name="GetDirectoryEntry" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DirectoryServices.DirectoryEntry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResult.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResult.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.DirectoryServices.ResultPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SearchResultCollection">
      <topicdata group="api" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.Dispose">
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Finalize" />
        <element api="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Count" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Handle" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.DirectoryServices.DirectoryServicesPermissionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Unrestricted">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.SearchResultCollection">
      <topicdata name="SearchResultCollection" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.Dispose">
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
          <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.DirectoryServices.SearchResultCollection.Finalize" />
        <element api="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
        <element api="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
        <element api="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.DirectoryServices.SearchResultCollection.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.SearchResultCollection">
      <topicdata name="SearchResultCollection" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SearchResultCollection" />
      <apidata name="SearchResultCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.DirectoryServices.SearchResultCollection.Count" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Handle" />
        <element api="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
        <element api="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.SearchResultCollection.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.DirectoryServices.SearchResultCollection.Dispose" />
        <element api="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.DirectoryServices.SearchResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="results">
          <arrayOf rank="1">
            <type api="T:System.DirectoryServices.SearchResult" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.DirectoryServices.SearchResultCollection.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.DirectoryServices.SearchResultCollection.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Handle" />
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.DirectoryServices.SearchResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DirectoryServices.SearchResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
      <topicdata group="api" />
      <apidata name="PropertiesLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertiesLoaded" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchResultCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SearchScope">
      <topicdata group="api" />
      <apidata name="SearchScope" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.SearchScope.Base" />
        <element api="F:System.DirectoryServices.SearchScope.OneLevel" />
        <element api="F:System.DirectoryServices.SearchScope.Subtree" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SearchScope.Base">
      <topicdata group="api" notopic="" />
      <apidata name="Base" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SearchScope.OneLevel">
      <topicdata group="api" notopic="" />
      <apidata name="OneLevel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SearchScope.Subtree">
      <topicdata group="api" notopic="" />
      <apidata name="Subtree" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SearchScope" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SecurityMasks">
      <topicdata group="api" />
      <apidata name="SecurityMasks" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.SecurityMasks.None" />
        <element api="F:System.DirectoryServices.SecurityMasks.Owner" />
        <element api="F:System.DirectoryServices.SecurityMasks.Group" />
        <element api="F:System.DirectoryServices.SecurityMasks.Dacl" />
        <element api="F:System.DirectoryServices.SecurityMasks.Sacl" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Dacl">
      <topicdata group="api" notopic="" />
      <apidata name="Dacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Group">
      <topicdata group="api" notopic="" />
      <apidata name="Group" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Owner">
      <topicdata group="api" notopic="" />
      <apidata name="Owner" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SecurityMasks.Sacl">
      <topicdata group="api" notopic="" />
      <apidata name="Sacl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SecurityMasks" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SortDirection">
      <topicdata group="api" />
      <apidata name="SortDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.DirectoryServices.SortDirection.Ascending" />
        <element api="F:System.DirectoryServices.SortDirection.Descending" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SortDirection.Ascending">
      <topicdata group="api" notopic="" />
      <apidata name="Ascending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.DirectoryServices.SortDirection.Descending">
      <topicdata group="api" notopic="" />
      <apidata name="Descending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </containers>
    </api>
    <api id="T:System.DirectoryServices.SortOption">
      <topicdata group="api" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.SortOption.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.DirectoryServices.SortOption.#ctor">
          <element api="M:System.DirectoryServices.SortOption.#ctor" />
          <element api="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.DirectoryServices.SortOption.Direction" />
        <element api="P:System.DirectoryServices.SortOption.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.ExpandableObjectConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.DirectoryServices.SortOption">
      <topicdata name="SortOption" group="list" subgroup="Methods" typeTopicId="T:System.DirectoryServices.SortOption" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.SortOption.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" />
      </containers>
    </api>
    <api id="Properties.T:System.DirectoryServices.SortOption">
      <topicdata name="SortOption" group="list" subgroup="Properties" typeTopicId="T:System.DirectoryServices.SortOption" />
      <apidata name="SortOption" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.DirectoryServices.SortOption.#ctor" />
      <elements>
        <element api="P:System.DirectoryServices.SortOption.Direction" />
        <element api="P:System.DirectoryServices.SortOption.PropertyName" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" />
      </containers>
    </api>
    <api id="Overload:System.DirectoryServices.SortOption.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.DirectoryServices.SortOption.#ctor" />
        <element api="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)" />
      </elements>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SortOption.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.SortOption.#ctor" />
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
    </api>
    <api id="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.DirectoryServices.SortOption.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.DirectoryServices.SortDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
    </api>
    <api id="P:System.DirectoryServices.SortOption.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Direction" />
      <setter name="set_Direction" />
      <returns>
        <type api="T:System.DirectoryServices.SortDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.DirectoryServices.SortDirection" ref="false" />
            <enumValue>
              <field name="Ascending" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSortDirection</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.DirectoryServices.SortOption.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyName" />
      <setter name="set_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.DirectoryServices" module="System.DirectoryServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.DirectoryServices" />
        <type api="T:System.DirectoryServices.SortOption" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.DirectoryServices.DSDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DSSortName</value>
          </argument>
        </attribute>
      </attributes>
    </api>
  </apis>
</reflection>