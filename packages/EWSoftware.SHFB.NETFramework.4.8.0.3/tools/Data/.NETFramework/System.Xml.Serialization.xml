<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Xml">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Xml.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Xml.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Xml.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Xml.Serialization">
      <topicdata group="api" />
      <apidata name="System.Xml.Serialization" group="namespace" />
      <elements>
        <element api="T:System.Xml.Serialization.CodeExporter" />
        <element api="T:System.Xml.Serialization.CodeGenerationOptions" />
        <element api="T:System.Xml.Serialization.CodeIdentifier" />
        <element api="T:System.Xml.Serialization.CodeIdentifiers" />
        <element api="T:System.Xml.Serialization.ImportContext" />
        <element api="T:System.Xml.Serialization.IXmlSerializable" />
        <element api="T:System.Xml.Serialization.IXmlTextParser" />
        <element api="T:System.Xml.Serialization.SchemaImporter" />
        <element api="T:System.Xml.Serialization.SoapAttributeAttribute" />
        <element api="T:System.Xml.Serialization.SoapAttributeOverrides" />
        <element api="T:System.Xml.Serialization.SoapAttributes" />
        <element api="T:System.Xml.Serialization.SoapCodeExporter" />
        <element api="T:System.Xml.Serialization.SoapElementAttribute" />
        <element api="T:System.Xml.Serialization.SoapEnumAttribute" />
        <element api="T:System.Xml.Serialization.SoapIgnoreAttribute" />
        <element api="T:System.Xml.Serialization.SoapIncludeAttribute" />
        <element api="T:System.Xml.Serialization.SoapReflectionImporter" />
        <element api="T:System.Xml.Serialization.SoapSchemaExporter" />
        <element api="T:System.Xml.Serialization.SoapSchemaImporter" />
        <element api="T:System.Xml.Serialization.SoapSchemaMember" />
        <element api="T:System.Xml.Serialization.SoapTypeAttribute" />
        <element api="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
        <element api="T:System.Xml.Serialization.XmlAnyElementAttribute" />
        <element api="T:System.Xml.Serialization.XmlAnyElementAttributes" />
        <element api="T:System.Xml.Serialization.XmlArrayAttribute" />
        <element api="T:System.Xml.Serialization.XmlArrayItemAttribute" />
        <element api="T:System.Xml.Serialization.XmlArrayItemAttributes" />
        <element api="T:System.Xml.Serialization.XmlAttributeAttribute" />
        <element api="T:System.Xml.Serialization.XmlAttributeOverrides" />
        <element api="T:System.Xml.Serialization.XmlAttributes" />
        <element api="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />
        <element api="T:System.Xml.Serialization.XmlCodeExporter" />
        <element api="T:System.Xml.Serialization.XmlElementAttribute" />
        <element api="T:System.Xml.Serialization.XmlElementAttributes" />
        <element api="T:System.Xml.Serialization.XmlEnumAttribute" />
        <element api="T:System.Xml.Serialization.XmlIgnoreAttribute" />
        <element api="T:System.Xml.Serialization.XmlIncludeAttribute" />
        <element api="T:System.Xml.Serialization.XmlMappingAccess" />
        <element api="T:System.Xml.Serialization.XmlMapping" />
        <element api="T:System.Xml.Serialization.XmlMemberMapping" />
        <element api="T:System.Xml.Serialization.XmlMembersMapping" />
        <element api="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />
        <element api="T:System.Xml.Serialization.XmlReflectionImporter" />
        <element api="T:System.Xml.Serialization.XmlReflectionMember" />
        <element api="T:System.Xml.Serialization.XmlRootAttribute" />
        <element api="T:System.Xml.Serialization.XmlSchemaExporter" />
        <element api="T:System.Xml.Serialization.XmlSchemaImporter" />
        <element api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
        <element api="T:System.Xml.Serialization.XmlSchemas" />
        <element api="T:System.Xml.Serialization.XmlSchemaEnumerator" />
        <element api="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />
        <element api="T:System.Xml.Serialization.XmlSerializationReader" />
        <element api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />
        <element api="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" />
        <element api="T:System.Xml.Serialization.XmlSerializationFixupCallback" />
        <element api="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" />
        <element api="T:System.Xml.Serialization.XmlSerializationReadCallback" />
        <element api="T:System.Xml.Serialization.XmlSerializationWriter" />
        <element api="T:System.Xml.Serialization.XmlSerializationWriteCallback" />
        <element api="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />
        <element api="T:System.Xml.Serialization.XmlDeserializationEvents" />
        <element api="T:System.Xml.Serialization.XmlSerializerImplementation" />
        <element api="T:System.Xml.Serialization.XmlSerializer" />
        <element api="T:System.Xml.Serialization.XmlSerializerFactory" />
        <element api="T:System.Xml.Serialization.XmlSerializerNamespaces" />
        <element api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />
        <element api="T:System.Xml.Serialization.XmlTextAttribute" />
        <element api="T:System.Xml.Serialization.XmlTypeAttribute" />
        <element api="T:System.Xml.Serialization.XmlTypeMapping" />
        <element api="T:System.Xml.Serialization.XmlAttributeEventHandler" />
        <element api="T:System.Xml.Serialization.XmlAttributeEventArgs" />
        <element api="T:System.Xml.Serialization.XmlElementEventHandler" />
        <element api="T:System.Xml.Serialization.XmlElementEventArgs" />
        <element api="T:System.Xml.Serialization.XmlNodeEventHandler" />
        <element api="T:System.Xml.Serialization.XmlNodeEventArgs" />
        <element api="T:System.Xml.Serialization.UnreferencedObjectEventHandler" />
        <element api="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />
      </elements>
    </api>
    <api id="T:System.Xml.Serialization.CodeExporter">
      <topicdata group="api" />
      <apidata name="CodeExporter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
          <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Xml.Serialization.CodeExporter.IncludeMetadata" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.CodeExporter">
      <topicdata name="CodeExporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.CodeExporter" />
      <apidata name="CodeExporter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeExporter" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.CodeExporter">
      <topicdata name="CodeExporter" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.CodeExporter" />
      <apidata name="CodeExporter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.CodeExporter.IncludeMetadata" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeExporter" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.CodeExporter.IncludeMetadata">
      <topicdata group="api" />
      <apidata name="IncludeMetadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncludeMetadata" />
      <returns>
        <type api="T:System.CodeDom.CodeAttributeDeclarationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeExporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.CodeGenerationOptions">
      <topicdata group="api" />
      <apidata name="CodeGenerationOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Xml.Serialization.CodeGenerationOptions.None" />
        <element api="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties" />
        <element api="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync" />
        <element api="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync" />
        <element api="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder" />
        <element api="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Serialization.CodeGenerationOptions.EnableDataBinding">
      <topicdata group="api" notopic="" />
      <apidata name="EnableDataBinding" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>enableDataBinding</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Serialization.CodeGenerationOptions.GenerateNewAsync">
      <topicdata group="api" notopic="" />
      <apidata name="GenerateNewAsync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>newAsync</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOldAsync">
      <topicdata group="api" notopic="" />
      <apidata name="GenerateOldAsync" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>oldAsync</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder">
      <topicdata group="api" notopic="" />
      <apidata name="GenerateOrder" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>order</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Serialization.CodeGenerationOptions.GenerateProperties">
      <topicdata group="api" notopic="" />
      <apidata name="GenerateProperties" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>properties</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Serialization.CodeGenerationOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Xml.Serialization.CodeIdentifier">
      <topicdata group="api" />
      <apidata name="CodeIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.CodeIdentifier.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.CodeIdentifier.#ctor" />
        <element api="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.CodeIdentifier">
      <topicdata name="CodeIdentifier" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.CodeIdentifier" />
      <apidata name="CodeIdentifier" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.CodeIdentifier.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifier" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifier.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifier" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class should never get constructed as it contains only static methods.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
      <topicdata group="api" />
      <apidata name="MakeCamel" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
      <topicdata group="api" />
      <apidata name="MakePascal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifier" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
      <topicdata group="api" />
      <apidata name="MakeValid" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifier" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.CodeIdentifiers">
      <topicdata group="api" />
      <apidata name="CodeIdentifiers" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.CodeIdentifiers.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.CodeIdentifiers.#ctor">
          <element api="M:System.Xml.Serialization.CodeIdentifiers.#ctor" />
          <element api="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.Clear" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)" />
        <element api="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.CodeIdentifiers">
      <topicdata name="CodeIdentifiers" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.CodeIdentifiers" />
      <apidata name="CodeIdentifiers" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.CodeIdentifiers.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.Clear" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.CodeIdentifiers">
      <topicdata name="CodeIdentifiers" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.CodeIdentifiers" />
      <apidata name="CodeIdentifiers" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.CodeIdentifiers.#ctor" />
      <elements>
        <element api="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.CodeIdentifiers.#ctor" />
        <element api="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.CodeIdentifiers.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.CodeIdentifiers.#ctor" />
      <parameters>
        <parameter name="caseSensitive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
      <topicdata group="api" />
      <apidata name="AddReserved" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="AddUnique" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
      <topicdata group="api" />
      <apidata name="IsInUse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
      <topicdata group="api" />
      <apidata name="MakeRightCase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
      <topicdata group="api" />
      <apidata name="MakeUnique" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveReserved" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
      <topicdata group="api" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.CodeIdentifiers.UseCamelCasing">
      <topicdata group="api" />
      <apidata name="UseCamelCasing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseCamelCasing" />
      <setter name="set_UseCamelCasing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.ImportContext">
      <topicdata group="api" />
      <apidata name="ImportContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)" />
        <element api="P:System.Xml.Serialization.ImportContext.ShareTypes" />
        <element api="P:System.Xml.Serialization.ImportContext.TypeIdentifiers" />
        <element api="P:System.Xml.Serialization.ImportContext.Warnings" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.ImportContext">
      <topicdata name="ImportContext" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.ImportContext" />
      <apidata name="ImportContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.ImportContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.ImportContext">
      <topicdata name="ImportContext" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.ImportContext" />
      <apidata name="ImportContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.ImportContext.ShareTypes" />
        <element api="P:System.Xml.Serialization.ImportContext.TypeIdentifiers" />
        <element api="P:System.Xml.Serialization.ImportContext.Warnings" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.ImportContext" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.ImportContext.#ctor(System.Xml.Serialization.CodeIdentifiers,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="identifiers">
          <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
        </parameter>
        <parameter name="shareTypes">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.ImportContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.ImportContext.ShareTypes">
      <topicdata group="api" />
      <apidata name="ShareTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ShareTypes" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.ImportContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
      <topicdata group="api" />
      <apidata name="TypeIdentifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeIdentifiers" />
      <returns>
        <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.ImportContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.ImportContext.Warnings">
      <topicdata group="api" />
      <apidata name="Warnings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Warnings" />
      <returns>
        <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.ImportContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.IXmlSerializable">
      <topicdata group="api" />
      <apidata name="IXmlSerializable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Annotations.Annotation" ref="true" />
        <type api="T:System.Windows.Annotations.AnnotationResource" ref="true" />
        <type api="T:System.Windows.Annotations.ContentLocator" ref="true" />
        <type api="T:System.Windows.Annotations.ContentLocatorGroup" ref="true" />
        <type api="T:System.Data.DataSet" ref="true" />
        <type api="T:System.Data.DataTable" ref="true" />
        <type api="T:System.Data.SqlTypes.SqlBinary" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlBoolean" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlByte" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlBytes" ref="true" />
        <type api="T:System.Data.SqlTypes.SqlChars" ref="true" />
        <type api="T:System.Data.SqlTypes.SqlDateTime" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlDecimal" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlDouble" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlGuid" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlInt16" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlInt32" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlInt64" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlMoney" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlSingle" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlString" ref="false" />
        <type api="T:System.Data.SqlTypes.SqlXml" ref="true" />
        <type api="T:System.ServiceModel.EndpointAddress10" ref="true" />
        <type api="T:System.ServiceModel.EndpointAddressAugust2004" ref="true" />
        <type api="T:System.ServiceModel.Syndication.Atom10FeedFormatter" ref="true" />
        <type api="T:System.ServiceModel.Syndication.Atom10ItemFormatter" ref="true" />
        <type api="T:System.ServiceModel.Syndication.Rss20FeedFormatter" ref="true" />
        <type api="T:System.ServiceModel.Syndication.Rss20ItemFormatter" ref="true" />
        <type api="T:System.ServiceModel.Syndication.Rss20ItemFormatter`1" ref="true" />
        <type api="T:System.ServiceModel.Syndication.AtomPub10ServiceDocumentFormatter" ref="true" />
        <type api="T:System.ServiceModel.Syndication.AtomPub10CategoriesDocumentFormatter" ref="true" />
        <type api="T:System.ServiceModel.Description.MetadataSet" ref="true" />
        <type api="T:System.ServiceModel.Description.MetadataReference" ref="true" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
        <type api="T:System.ServiceModel.Discovery.VersionCD1.DiscoveryMessageSequenceCD1" ref="true" />
        <type api="T:System.ServiceModel.Discovery.VersionCD1.EndpointDiscoveryMetadataCD1" ref="true" />
        <type api="T:System.ServiceModel.Discovery.VersionCD1.FindCriteriaCD1" ref="true" />
        <type api="T:System.ServiceModel.Discovery.VersionCD1.ResolveCriteriaCD1" ref="true" />
        <type api="T:System.ServiceModel.Discovery.VersionApril2005.DiscoveryMessageSequenceApril2005" ref="true" />
        <type api="T:System.ServiceModel.Discovery.VersionApril2005.EndpointDiscoveryMetadataApril2005" ref="true" />
        <type api="T:System.ServiceModel.Discovery.VersionApril2005.FindCriteriaApril2005" ref="true" />
        <type api="T:System.ServiceModel.Discovery.VersionApril2005.ResolveCriteriaApril2005" ref="true" />
        <type api="T:System.ServiceModel.Discovery.Version11.DiscoveryMessageSequence11" ref="true" />
        <type api="T:System.ServiceModel.Discovery.Version11.EndpointDiscoveryMetadata11" ref="true" />
        <type api="T:System.ServiceModel.Discovery.Version11.FindCriteria11" ref="true" />
        <type api="T:System.ServiceModel.Discovery.Version11.ResolveCriteria11" ref="true" />
        <type api="T:System.Xml.Linq.XElement" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
        <element api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.IXmlSerializable">
      <topicdata name="IXmlSerializable" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.IXmlSerializable" />
      <apidata name="IXmlSerializable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />
        <element api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.IXmlSerializable" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
      <topicdata group="api" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.IXmlTextParser">
      <topicdata group="api" />
      <apidata name="IXmlTextParser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.IXmlTextParser.Normalized" />
        <element api="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.IXmlTextParser">
      <topicdata name="IXmlTextParser" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.IXmlTextParser" />
      <apidata name="IXmlTextParser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.IXmlTextParser.Normalized" />
        <element api="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.IXmlTextParser" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.IXmlTextParser.Normalized">
      <topicdata group="api" />
      <apidata name="Normalized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Normalized" />
      <setter name="set_Normalized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.IXmlTextParser" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.IXmlTextParser.WhitespaceHandling">
      <topicdata group="api" />
      <apidata name="WhitespaceHandling" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_WhitespaceHandling" />
      <setter name="set_WhitespaceHandling" />
      <returns>
        <type api="T:System.Xml.WhitespaceHandling" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.IXmlTextParser" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SchemaImporter">
      <topicdata group="api" />
      <apidata name="SchemaImporter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
          <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Xml.Serialization.SchemaImporter.Extensions" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SchemaImporter">
      <topicdata name="SchemaImporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SchemaImporter" />
      <apidata name="SchemaImporter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SchemaImporter" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SchemaImporter">
      <topicdata name="SchemaImporter" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SchemaImporter" />
      <apidata name="SchemaImporter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.SchemaImporter.Extensions" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SchemaImporter" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SchemaImporter.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.Xml.Serialization.Advanced.SchemaImporterExtensionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapAttributeAttribute">
      <topicdata group="api" />
      <apidata name="SoapAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
          <element api="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName" />
        <element api="P:System.Xml.Serialization.SoapAttributeAttribute.DataType" />
        <element api="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapAttributeAttribute">
      <topicdata name="SoapAttributeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapAttributeAttribute" />
      <apidata name="SoapAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapAttributeAttribute">
      <topicdata name="SoapAttributeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapAttributeAttribute" />
      <apidata name="SoapAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName" />
        <element api="P:System.Xml.Serialization.SoapAttributeAttribute.DataType" />
        <element api="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapAttributeAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapAttributeAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapAttributeAttribute.#ctor" />
      <parameters>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributeAttribute.AttributeName">
      <topicdata group="api" />
      <apidata name="AttributeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttributeName" />
      <setter name="set_AttributeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributeAttribute.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataType" />
      <setter name="set_DataType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributeAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapAttributeOverrides">
      <topicdata group="api" />
      <apidata name="SoapAttributeOverrides" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor" />
        <element api="Overload:System.Xml.Serialization.SoapAttributeOverrides.Add">
          <element api="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)" />
          <element api="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)" />
        </element>
        <element api="Overload:System.Xml.Serialization.SoapAttributeOverrides.Item">
          <element api="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)" />
          <element api="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapAttributeOverrides">
      <topicdata name="SoapAttributeOverrides" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapAttributeOverrides" />
      <apidata name="SoapAttributeOverrides" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapAttributeOverrides.Add">
          <element api="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)" />
          <element api="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeOverrides" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapAttributeOverrides">
      <topicdata name="SoapAttributeOverrides" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapAttributeOverrides" />
      <apidata name="SoapAttributeOverrides" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor" />
      <elements>
        <element api="Overload:System.Xml.Serialization.SoapAttributeOverrides.Item">
          <element api="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)" />
          <element api="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeOverrides" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapAttributeOverrides.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)" />
        <element api="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapAttributeOverrides.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)" />
        <element api="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapAttributeOverrides.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapAttributeOverrides.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapAttributeOverrides.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapAttributeOverrides.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapAttributes">
      <topicdata group="api" />
      <apidata name="SoapAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapAttributes.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapAttributes.#ctor">
          <element api="M:System.Xml.Serialization.SoapAttributes.#ctor" />
          <element api="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
        </element>
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapAttribute" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapElement" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapEnum" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapIgnore" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapType" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapAttributes">
      <topicdata name="SoapAttributes" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapAttributes" />
      <apidata name="SoapAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapAttributes.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapAttributes">
      <topicdata name="SoapAttributes" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapAttributes" />
      <apidata name="SoapAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapAttributes.#ctor" />
      <elements>
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapAttribute" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapElement" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapEnum" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapIgnore" />
        <element api="P:System.Xml.Serialization.SoapAttributes.SoapType" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapAttributes.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapAttributes.#ctor" />
        <element api="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapAttributes.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapAttributes.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapAttributes.#ctor" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributes.SoapAttribute">
      <topicdata group="api" />
      <apidata name="SoapAttribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapAttribute" />
      <setter name="set_SoapAttribute" />
      <returns>
        <type api="T:System.Xml.Serialization.SoapAttributeAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributes.SoapDefaultValue">
      <topicdata group="api" />
      <apidata name="SoapDefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapDefaultValue" />
      <setter name="set_SoapDefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributes.SoapElement">
      <topicdata group="api" />
      <apidata name="SoapElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapElement" />
      <setter name="set_SoapElement" />
      <returns>
        <type api="T:System.Xml.Serialization.SoapElementAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributes.SoapEnum">
      <topicdata group="api" />
      <apidata name="SoapEnum" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapEnum" />
      <setter name="set_SoapEnum" />
      <returns>
        <type api="T:System.Xml.Serialization.SoapEnumAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributes.SoapIgnore">
      <topicdata group="api" />
      <apidata name="SoapIgnore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapIgnore" />
      <setter name="set_SoapIgnore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapAttributes.SoapType">
      <topicdata group="api" />
      <apidata name="SoapType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapType" />
      <setter name="set_SoapType" />
      <returns>
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapCodeExporter">
      <topicdata group="api" />
      <apidata name="SoapCodeExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.CodeExporter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapCodeExporter.#ctor">
          <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace)" />
          <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
          <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)" />
          <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
          <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
        </element>
        <element api="Overload:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata">
          <element api="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping)" />
          <element api="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.SoapCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
        <element api="M:System.Xml.Serialization.SoapCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
        <element api="P:System.Xml.Serialization.CodeExporter.IncludeMetadata" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapCodeExporter">
      <topicdata name="SoapCodeExporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapCodeExporter" />
      <apidata name="SoapCodeExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata">
          <element api="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping)" />
          <element api="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.SoapCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
        <element api="M:System.Xml.Serialization.SoapCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapCodeExporter">
      <topicdata name="SoapCodeExporter" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapCodeExporter" />
      <apidata name="SoapCodeExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.CodeExporter.IncludeMetadata" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapCodeExporter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace)" />
        <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
        <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)" />
        <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
        <element api="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata">
      <topicdata name="AddMappingMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddMappingMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping)" />
        <element api="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeCompileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeCompileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="codeProvider">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="mappings">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeCompileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeCompileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="mappings">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping)">
      <topicdata group="api" />
      <apidata name="AddMappingMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.CodeDom.CodeAttributeDeclarationCollection" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddMappingMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapCodeExporter.AddMappingMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.CodeDom.CodeAttributeDeclarationCollection" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
        </parameter>
        <parameter name="forceUseMemberName">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <topicdata group="api" />
      <apidata name="ExportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlMembersMapping">
          <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <topicdata group="api" />
      <apidata name="ExportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlTypeMapping">
          <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapElementAttribute">
      <topicdata group="api" />
      <apidata name="SoapElementAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapElementAttribute.#ctor">
          <element api="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
        <element api="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapElementAttribute">
      <topicdata name="SoapElementAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapElementAttribute" />
      <apidata name="SoapElementAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapElementAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapElementAttribute">
      <topicdata name="SoapElementAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapElementAttribute" />
      <apidata name="SoapElementAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapElementAttribute.DataType" />
        <element api="P:System.Xml.Serialization.SoapElementAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.SoapElementAttribute.IsNullable" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapElementAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapElementAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapElementAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapElementAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapElementAttribute.#ctor" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapElementAttribute.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataType" />
      <setter name="set_DataType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapElementAttribute.ElementName">
      <topicdata group="api" />
      <apidata name="ElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ElementName" />
      <setter name="set_ElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapElementAttribute.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsNullable" />
      <setter name="set_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapEnumAttribute">
      <topicdata group="api" />
      <apidata name="SoapEnumAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapEnumAttribute.#ctor">
          <element api="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapEnumAttribute">
      <topicdata name="SoapEnumAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapEnumAttribute" />
      <apidata name="SoapEnumAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapEnumAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapEnumAttribute">
      <topicdata name="SoapEnumAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapEnumAttribute" />
      <apidata name="SoapEnumAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapEnumAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapEnumAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapEnumAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapEnumAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapEnumAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapEnumAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapEnumAttribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapEnumAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapEnumAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapEnumAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapIgnoreAttribute">
      <topicdata group="api" />
      <apidata name="SoapIgnoreAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapIgnoreAttribute">
      <topicdata name="SoapIgnoreAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapIgnoreAttribute" />
      <apidata name="SoapIgnoreAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapIgnoreAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapIgnoreAttribute">
      <topicdata name="SoapIgnoreAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapIgnoreAttribute" />
      <apidata name="SoapIgnoreAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapIgnoreAttribute" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapIgnoreAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapIgnoreAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapIncludeAttribute">
      <topicdata group="api" />
      <apidata name="SoapIncludeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapIncludeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Method" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapIncludeAttribute">
      <topicdata name="SoapIncludeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapIncludeAttribute" />
      <apidata name="SoapIncludeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapIncludeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapIncludeAttribute">
      <topicdata name="SoapIncludeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapIncludeAttribute" />
      <apidata name="SoapIncludeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapIncludeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapIncludeAttribute" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapIncludeAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapIncludeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapIncludeAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapIncludeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapReflectionImporter">
      <topicdata group="api" />
      <apidata name="SoapReflectionImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapReflectionImporter.#ctor">
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping">
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
        </element>
        <element api="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping">
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)" />
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapReflectionImporter">
      <topicdata name="SoapReflectionImporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapReflectionImporter" />
      <apidata name="SoapReflectionImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping">
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
        </element>
        <element api="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping">
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)" />
          <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)" />
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)" />
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)" />
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping">
      <topicdata name="ImportMembersMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])" />
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping">
      <topicdata name="ImportTypeMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportTypeMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)" />
        <element api="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
      <parameters>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
      <parameters>
        <parameter name="attributeOverrides">
          <type api="T:System.Xml.Serialization.SoapAttributeOverrides" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.#ctor" />
      <parameters>
        <parameter name="attributeOverrides">
          <type api="T:System.Xml.Serialization.SoapAttributeOverrides" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="hasWrapperElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="writeAccessors">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="hasWrapperElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="writeAccessors">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="validate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="hasWrapperElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="writeAccessors">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="validate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.Xml.Serialization.XmlMappingAccess" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
      <topicdata group="api" />
      <apidata name="ImportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="ImportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
      <topicdata group="api" />
      <apidata name="IncludeType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <topicdata group="api" />
      <apidata name="IncludeTypes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapSchemaExporter">
      <topicdata group="api" />
      <apidata name="SoapSchemaExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.SoapSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)" />
        <element api="Overload:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping">
          <element api="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
          <element api="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.SoapSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapSchemaExporter">
      <topicdata name="SoapSchemaExporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapSchemaExporter" />
      <apidata name="SoapSchemaExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping">
          <element api="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
          <element api="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.SoapSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaExporter" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping">
      <topicdata name="ExportMembersMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExportMembersMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
        <element api="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <topicdata group="api" />
      <apidata name="ExportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlMembersMapping">
          <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ExportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapSchemaExporter.ExportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlMembersMapping">
          <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
        </parameter>
        <parameter name="exportEnclosingType">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <topicdata group="api" />
      <apidata name="ExportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlTypeMapping">
          <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapSchemaImporter">
      <topicdata group="api" />
      <apidata name="SoapSchemaImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.SchemaImporter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapSchemaImporter.#ctor">
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)" />
        </element>
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping">
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember)" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean)" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean,System.Type,System.Boolean)" />
        </element>
        <element api="P:System.Xml.Serialization.SchemaImporter.Extensions" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapSchemaImporter">
      <topicdata name="SoapSchemaImporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapSchemaImporter" />
      <apidata name="SoapSchemaImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping">
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember)" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean)" />
          <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean,System.Type,System.Boolean)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapSchemaImporter">
      <topicdata name="SoapSchemaImporter" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapSchemaImporter" />
      <apidata name="SoapSchemaImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.SchemaImporter.Extensions" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapSchemaImporter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)" />
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)" />
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)" />
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)" />
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping">
      <topicdata name="ImportMembersMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember)" />
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])" />
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean)" />
        <element api="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean,System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="codeProvider">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Serialization.ImportContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Serialization.ImportContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="typeIdentifiers">
          <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="typeIdentifiers">
          <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportDerivedTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseTypeCanBeIndirect">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Xml.Serialization.SoapSchemaMember" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.SoapSchemaMember" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.SoapSchemaMember" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="hasWrapperElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[],System.Boolean,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.SoapSchemaImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.SoapSchemaMember" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="hasWrapperElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseTypeCanBeIndirect">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapSchemaMember">
      <topicdata group="api" />
      <apidata name="SoapSchemaMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapSchemaMember.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.SoapSchemaMember.#ctor" />
        <element api="P:System.Xml.Serialization.SoapSchemaMember.MemberName" />
        <element api="P:System.Xml.Serialization.SoapSchemaMember.MemberType" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapSchemaMember">
      <topicdata name="SoapSchemaMember" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapSchemaMember" />
      <apidata name="SoapSchemaMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapSchemaMember.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaMember" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapSchemaMember">
      <topicdata name="SoapSchemaMember" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapSchemaMember" />
      <apidata name="SoapSchemaMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapSchemaMember.#ctor" />
      <elements>
        <element api="P:System.Xml.Serialization.SoapSchemaMember.MemberName" />
        <element api="P:System.Xml.Serialization.SoapSchemaMember.MemberType" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaMember" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapSchemaMember.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapSchemaMember.MemberName">
      <topicdata group="api" />
      <apidata name="MemberName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MemberName" />
      <setter name="set_MemberName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapSchemaMember.MemberType">
      <topicdata group="api" />
      <apidata name="MemberType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MemberType" />
      <setter name="set_MemberType" />
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapSchemaMember" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.SoapTypeAttribute">
      <topicdata group="api" />
      <apidata name="SoapTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.SoapTypeAttribute.#ctor">
          <element api="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
          <element api="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
        <element api="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Interface" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.SoapTypeAttribute">
      <topicdata name="SoapTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.SoapTypeAttribute" />
      <apidata name="SoapTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.SoapTypeAttribute">
      <topicdata name="SoapTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.SoapTypeAttribute" />
      <apidata name="SoapTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema" />
        <element api="P:System.Xml.Serialization.SoapTypeAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.SoapTypeAttribute.TypeName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)" />
        <element api="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapTypeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.SoapTypeAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapTypeAttribute.IncludeInSchema">
      <topicdata group="api" />
      <apidata name="IncludeInSchema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeInSchema" />
      <setter name="set_IncludeInSchema" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapTypeAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.SoapTypeAttribute.TypeName">
      <topicdata group="api" />
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TypeName" />
      <setter name="set_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.SoapTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <topicdata group="api" />
      <apidata name="UnreferencedObjectEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)" />
        <element api="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />
        <element api="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <topicdata name="UnreferencedObjectEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />
      <apidata name="UnreferencedObjectEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.UnreferencedObjectEventArgs">
      <topicdata name="UnreferencedObjectEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />
      <apidata name="UnreferencedObjectEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId" />
        <element api="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.UnreferencedObjectEventArgs" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.UnreferencedObjectEventArgs.#ctor(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.UnreferencedObjectEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedId">
      <topicdata group="api" />
      <apidata name="UnreferencedId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UnreferencedId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.UnreferencedObjectEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.UnreferencedObjectEventArgs.UnreferencedObject">
      <topicdata group="api" />
      <apidata name="UnreferencedObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UnreferencedObject" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.UnreferencedObjectEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.UnreferencedObjectEventHandler">
      <topicdata group="api" />
      <apidata name="UnreferencedObjectEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Xml.Serialization.UnreferencedObjectEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <topicdata group="api" />
      <apidata name="XmlAnyAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <topicdata name="XmlAnyAttributeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
      <apidata name="XmlAnyAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlAnyAttributeAttribute">
      <topicdata name="XmlAnyAttributeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
      <apidata name="XmlAnyAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyAttributeAttribute" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyAttributeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlAnyElementAttribute">
      <topicdata group="api" />
      <apidata name="XmlAnyElementAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
          <element api="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
        <element api="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlAnyElementAttribute">
      <topicdata name="XmlAnyElementAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlAnyElementAttribute" />
      <apidata name="XmlAnyElementAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlAnyElementAttribute">
      <topicdata name="XmlAnyElementAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlAnyElementAttribute" />
      <apidata name="XmlAnyElementAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlAnyElementAttribute.Name" />
        <element api="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlAnyElementAttribute.Order" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlAnyElementAttribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAnyElementAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAnyElementAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAnyElementAttribute.Order">
      <topicdata group="api" />
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Order" />
      <setter name="set_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlAnyElementAttributes">
      <topicdata group="api" />
      <apidata name="XmlAnyElementAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlAnyElementAttributes">
      <topicdata name="XmlAnyElementAttributes" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlAnyElementAttributes" />
      <apidata name="XmlAnyElementAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlAnyElementAttributes">
      <topicdata name="XmlAnyElementAttributes" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlAnyElementAttributes" />
      <apidata name="XmlAnyElementAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttributes.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAnyElementAttributes.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlAnyElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlArrayAttribute">
      <topicdata group="api" />
      <apidata name="XmlArrayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlArrayAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.Order" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlArrayAttribute">
      <topicdata name="XmlArrayAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlArrayAttribute" />
      <apidata name="XmlArrayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlArrayAttribute">
      <topicdata name="XmlArrayAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlArrayAttribute" />
      <apidata name="XmlArrayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.Form" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlArrayAttribute.Order" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlArrayAttribute.#ctor" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayAttribute.ElementName">
      <topicdata group="api" />
      <apidata name="ElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ElementName" />
      <setter name="set_ElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayAttribute.Form">
      <topicdata group="api" />
      <apidata name="Form" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Form" />
      <setter name="set_Form" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchemaForm" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayAttribute.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsNullable" />
      <setter name="set_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayAttribute.Order">
      <topicdata group="api" />
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Order" />
      <setter name="set_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlArrayItemAttribute">
      <topicdata group="api" />
      <apidata name="XmlArrayItemAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
          <element api="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlArrayItemAttribute">
      <topicdata name="XmlArrayItemAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlArrayItemAttribute" />
      <apidata name="XmlArrayItemAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlArrayItemAttribute">
      <topicdata name="XmlArrayItemAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlArrayItemAttribute" />
      <apidata name="XmlArrayItemAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.Form" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlArrayItemAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayItemAttribute.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataType" />
      <setter name="set_DataType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayItemAttribute.ElementName">
      <topicdata group="api" />
      <apidata name="ElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ElementName" />
      <setter name="set_ElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayItemAttribute.Form">
      <topicdata group="api" />
      <apidata name="Form" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Form" />
      <setter name="set_Form" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchemaForm" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayItemAttribute.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsNullable" />
      <setter name="set_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayItemAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayItemAttribute.NestingLevel">
      <topicdata group="api" />
      <apidata name="NestingLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NestingLevel" />
      <setter name="set_NestingLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayItemAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlArrayItemAttributes">
      <topicdata group="api" />
      <apidata name="XmlArrayItemAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlArrayItemAttributes">
      <topicdata name="XmlArrayItemAttributes" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlArrayItemAttributes" />
      <apidata name="XmlArrayItemAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)" />
        <element api="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlArrayItemAttributes">
      <topicdata name="XmlArrayItemAttributes" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlArrayItemAttributes" />
      <apidata name="XmlArrayItemAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttributes.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlArrayItemAttributes.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlArrayItemAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlAttributeAttribute">
      <topicdata group="api" />
      <apidata name="XmlAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)" />
          <element api="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.Form" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlAttributeAttribute">
      <topicdata name="XmlAttributeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlAttributeAttribute" />
      <apidata name="XmlAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlAttributeAttribute">
      <topicdata name="XmlAttributeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlAttributeAttribute" />
      <apidata name="XmlAttributeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.Form" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlAttributeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)" />
        <element api="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <parameters>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <parameters>
        <parameter name="attributeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlAttributeAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName">
      <topicdata group="api" />
      <apidata name="AttributeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AttributeName" />
      <setter name="set_AttributeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeAttribute.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataType" />
      <setter name="set_DataType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeAttribute.Form">
      <topicdata group="api" />
      <apidata name="Form" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Form" />
      <setter name="set_Form" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchemaForm" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlAttributeEventArgs">
      <topicdata group="api" />
      <apidata name="XmlAttributeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr" />
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes" />
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber" />
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition" />
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlAttributeEventArgs">
      <topicdata name="XmlAttributeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlAttributeEventArgs" />
      <apidata name="XmlAttributeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlAttributeEventArgs">
      <topicdata name="XmlAttributeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlAttributeEventArgs" />
      <apidata name="XmlAttributeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr" />
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes" />
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber" />
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition" />
        <element api="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeEventArgs" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeEventArgs.Attr">
      <topicdata group="api" />
      <apidata name="Attr" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attr" />
      <returns>
        <type api="T:System.Xml.XmlAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
      <topicdata group="api" />
      <apidata name="ExpectedAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExpectedAttributes" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeEventArgs.LineNumber">
      <topicdata group="api" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeEventArgs.LinePosition">
      <topicdata group="api" />
      <apidata name="LinePosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LinePosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeEventArgs.ObjectBeingDeserialized">
      <topicdata group="api" />
      <apidata name="ObjectBeingDeserialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ObjectBeingDeserialized" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlAttributeEventHandler">
      <topicdata group="api" />
      <apidata name="XmlAttributeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Xml.Serialization.XmlAttributeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlAttributeOverrides">
      <topicdata group="api" />
      <apidata name="XmlAttributeOverrides" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor" />
        <element api="Overload:System.Xml.Serialization.XmlAttributeOverrides.Add">
          <element api="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)" />
          <element api="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlAttributeOverrides.Item">
          <element api="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)" />
          <element api="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlAttributeOverrides">
      <topicdata name="XmlAttributeOverrides" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlAttributeOverrides" />
      <apidata name="XmlAttributeOverrides" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlAttributeOverrides.Add">
          <element api="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)" />
          <element api="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeOverrides" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlAttributeOverrides">
      <topicdata name="XmlAttributeOverrides" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlAttributeOverrides" />
      <apidata name="XmlAttributeOverrides" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor" />
      <elements>
        <element api="Overload:System.Xml.Serialization.XmlAttributeOverrides.Item">
          <element api="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)" />
          <element api="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeOverrides" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlAttributeOverrides.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)" />
        <element api="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlAttributeOverrides.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)" />
        <element api="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAttributeOverrides.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlAttributeOverrides.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlAttributeOverrides.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlAttributeOverrides.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlAttributeOverrides.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlAttributes">
      <topicdata group="api" />
      <apidata name="XmlAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlAttributes.#ctor">
          <element api="M:System.Xml.Serialization.XmlAttributes.#ctor" />
          <element api="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
        </element>
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
        <element api="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlText" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlAttributes">
      <topicdata name="XmlAttributes" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlAttributes" />
      <apidata name="XmlAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlAttributes">
      <topicdata name="XmlAttributes" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlAttributes" />
      <apidata name="XmlAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlAttributes.#ctor" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlArray" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlAttribute" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlEnum" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlIgnore" />
        <element api="P:System.Xml.Serialization.XmlAttributes.Xmlns" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlRoot" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlText" />
        <element api="P:System.Xml.Serialization.XmlAttributes.XmlType" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlAttributes.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlAttributes.#ctor" />
        <element api="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAttributes.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlAttributes.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlAttributes.#ctor" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute">
      <topicdata group="api" />
      <apidata name="XmlAnyAttribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlAnyAttribute" />
      <setter name="set_XmlAnyAttribute" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlAnyAttributeAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlAnyElements">
      <topicdata group="api" />
      <apidata name="XmlAnyElements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XmlAnyElements" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlAnyElementAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlArray">
      <topicdata group="api" />
      <apidata name="XmlArray" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlArray" />
      <setter name="set_XmlArray" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlArrayAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlArrayItems">
      <topicdata group="api" />
      <apidata name="XmlArrayItems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XmlArrayItems" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlArrayItemAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlAttribute">
      <topicdata group="api" />
      <apidata name="XmlAttribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlAttribute" />
      <setter name="set_XmlAttribute" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlAttributeAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlChoiceIdentifier">
      <topicdata group="api" />
      <apidata name="XmlChoiceIdentifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XmlChoiceIdentifier" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlDefaultValue">
      <topicdata group="api" />
      <apidata name="XmlDefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlDefaultValue" />
      <setter name="set_XmlDefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlElements">
      <topicdata group="api" />
      <apidata name="XmlElements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XmlElements" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlElementAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlEnum">
      <topicdata group="api" />
      <apidata name="XmlEnum" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlEnum" />
      <setter name="set_XmlEnum" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlIgnore">
      <topicdata group="api" />
      <apidata name="XmlIgnore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlIgnore" />
      <setter name="set_XmlIgnore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.Xmlns">
      <topicdata group="api" />
      <apidata name="Xmlns" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Xmlns" />
      <setter name="set_Xmlns" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlRoot">
      <topicdata group="api" />
      <apidata name="XmlRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlRoot" />
      <setter name="set_XmlRoot" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlText">
      <topicdata group="api" />
      <apidata name="XmlText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlText" />
      <setter name="set_XmlText" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlTextAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlAttributes.XmlType">
      <topicdata group="api" />
      <apidata name="XmlType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlType" />
      <setter name="set_XmlType" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <topicdata group="api" />
      <apidata name="XmlChoiceIdentifierAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <topicdata name="XmlChoiceIdentifierAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />
      <apidata name="XmlChoiceIdentifierAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
      <topicdata name="XmlChoiceIdentifierAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />
      <apidata name="XmlChoiceIdentifierAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlChoiceIdentifierAttribute.MemberName">
      <topicdata group="api" />
      <apidata name="MemberName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MemberName" />
      <setter name="set_MemberName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlCodeExporter">
      <topicdata group="api" />
      <apidata name="XmlCodeExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.CodeExporter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlCodeExporter.#ctor">
          <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)" />
          <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
          <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)" />
          <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
          <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata">
          <element api="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)" />
          <element api="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)" />
          <element api="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
        <element api="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
        <element api="P:System.Xml.Serialization.CodeExporter.IncludeMetadata" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlCodeExporter">
      <topicdata name="XmlCodeExporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlCodeExporter" />
      <apidata name="XmlCodeExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata">
          <element api="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)" />
          <element api="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)" />
          <element api="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
        <element api="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlCodeExporter">
      <topicdata name="XmlCodeExporter" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlCodeExporter" />
      <apidata name="XmlCodeExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.CodeExporter.IncludeMetadata" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlCodeExporter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)" />
        <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />
        <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)" />
        <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
        <element api="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata">
      <topicdata name="AddMappingMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddMappingMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)" />
        <element api="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)" />
        <element api="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeCompileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeCompileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="codeProvider">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="mappings">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeCompileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.#ctor(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit,System.Xml.Serialization.CodeGenerationOptions,System.Collections.Hashtable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlCodeExporter.#ctor" />
      <parameters>
        <parameter name="codeNamespace">
          <type api="T:System.CodeDom.CodeNamespace" ref="true" />
        </parameter>
        <parameter name="codeCompileUnit">
          <type api="T:System.CodeDom.CodeCompileUnit" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="mappings">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String)">
      <topicdata group="api" />
      <apidata name="AddMappingMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.CodeDom.CodeAttributeDeclarationCollection" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlMemberMapping,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddMappingMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.CodeDom.CodeAttributeDeclarationCollection" ref="true" />
        </parameter>
        <parameter name="member">
          <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="forceUseMemberName">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata(System.CodeDom.CodeAttributeDeclarationCollection,System.Xml.Serialization.XmlTypeMapping,System.String)">
      <topicdata group="api" />
      <apidata name="AddMappingMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlCodeExporter.AddMappingMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.CodeDom.CodeAttributeDeclarationCollection" ref="true" />
        </parameter>
        <parameter name="mapping">
          <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <topicdata group="api" />
      <apidata name="ExportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlMembersMapping">
          <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlCodeExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <topicdata group="api" />
      <apidata name="ExportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlTypeMapping">
          <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlCodeExporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlDeserializationEvents">
      <topicdata group="api" />
      <apidata name="XmlDeserializationEvents" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute" />
        <element api="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement" />
        <element api="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode" />
        <element api="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlDeserializationEvents">
      <topicdata name="XmlDeserializationEvents" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlDeserializationEvents" />
      <apidata name="XmlDeserializationEvents" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlDeserializationEvents" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlDeserializationEvents">
      <topicdata name="XmlDeserializationEvents" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlDeserializationEvents" />
      <apidata name="XmlDeserializationEvents" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute" />
        <element api="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement" />
        <element api="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode" />
        <element api="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlDeserializationEvents" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownAttribute">
      <topicdata group="api" />
      <apidata name="OnUnknownAttribute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OnUnknownAttribute" />
      <setter name="set_OnUnknownAttribute" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlAttributeEventHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlDeserializationEvents" ref="false" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownElement">
      <topicdata group="api" />
      <apidata name="OnUnknownElement" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OnUnknownElement" />
      <setter name="set_OnUnknownElement" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlElementEventHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlDeserializationEvents" ref="false" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnknownNode">
      <topicdata group="api" />
      <apidata name="OnUnknownNode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OnUnknownNode" />
      <setter name="set_OnUnknownNode" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlNodeEventHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlDeserializationEvents" ref="false" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlDeserializationEvents.OnUnreferencedObject">
      <topicdata group="api" />
      <apidata name="OnUnreferencedObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OnUnreferencedObject" />
      <setter name="set_OnUnreferencedObject" />
      <returns>
        <type api="T:System.Xml.Serialization.UnreferencedObjectEventHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlDeserializationEvents" ref="false" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlElementAttribute">
      <topicdata group="api" />
      <apidata name="XmlElementAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlElementAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
          <element api="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.Form" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.Order" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlElementAttribute">
      <topicdata name="XmlElementAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlElementAttribute" />
      <apidata name="XmlElementAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlElementAttribute">
      <topicdata name="XmlElementAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlElementAttribute" />
      <apidata name="XmlElementAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.Form" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.Order" />
        <element api="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
        <element api="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementAttribute.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataType" />
      <setter name="set_DataType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementAttribute.ElementName">
      <topicdata group="api" />
      <apidata name="ElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ElementName" />
      <setter name="set_ElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementAttribute.Form">
      <topicdata group="api" />
      <apidata name="Form" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Form" />
      <setter name="set_Form" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchemaForm" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementAttribute.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsNullable" />
      <setter name="set_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementAttribute.Order">
      <topicdata group="api" />
      <apidata name="Order" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Order" />
      <setter name="set_Order" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlElementAttributes">
      <topicdata group="api" />
      <apidata name="XmlElementAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlElementAttributes.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.#ctor" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlElementAttributes">
      <topicdata name="XmlElementAttributes" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlElementAttributes" />
      <apidata name="XmlElementAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlElementAttributes.#ctor" />
      <elements>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClear" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)" />
        <element api="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlElementAttributes">
      <topicdata name="XmlElementAttributes" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlElementAttributes" />
      <apidata name="XmlElementAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlElementAttributes.#ctor" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttributes.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementAttributes.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attribute">
          <type api="T:System.Xml.Serialization.XmlElementAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementAttributes" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlElementEventArgs">
      <topicdata group="api" />
      <apidata name="XmlElementEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.Element" />
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements" />
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber" />
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition" />
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlElementEventArgs">
      <topicdata name="XmlElementEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlElementEventArgs" />
      <apidata name="XmlElementEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlElementEventArgs">
      <topicdata name="XmlElementEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlElementEventArgs" />
      <apidata name="XmlElementEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.Element" />
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements" />
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber" />
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition" />
        <element api="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementEventArgs" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementEventArgs.Element">
      <topicdata group="api" />
      <apidata name="Element" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Element" />
      <returns>
        <type api="T:System.Xml.XmlElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
      <topicdata group="api" />
      <apidata name="ExpectedElements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExpectedElements" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementEventArgs.LineNumber">
      <topicdata group="api" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementEventArgs.LinePosition">
      <topicdata group="api" />
      <apidata name="LinePosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LinePosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlElementEventArgs.ObjectBeingDeserialized">
      <topicdata group="api" />
      <apidata name="ObjectBeingDeserialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ObjectBeingDeserialized" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlElementEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlElementEventHandler">
      <topicdata group="api" />
      <apidata name="XmlElementEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Xml.Serialization.XmlElementEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlEnumAttribute">
      <topicdata group="api" />
      <apidata name="XmlEnumAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlEnumAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlEnumAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlEnumAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlEnumAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlEnumAttribute">
      <topicdata name="XmlEnumAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlEnumAttribute" />
      <apidata name="XmlEnumAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlEnumAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlEnumAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlEnumAttribute">
      <topicdata name="XmlEnumAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlEnumAttribute" />
      <apidata name="XmlEnumAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlEnumAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlEnumAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlEnumAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlEnumAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlEnumAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlEnumAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlEnumAttribute.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlEnumAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlEnumAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlIgnoreAttribute">
      <topicdata group="api" />
      <apidata name="XmlIgnoreAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlIgnoreAttribute">
      <topicdata name="XmlIgnoreAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      <apidata name="XmlIgnoreAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlIgnoreAttribute">
      <topicdata name="XmlIgnoreAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      <apidata name="XmlIgnoreAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlIgnoreAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlIncludeAttribute">
      <topicdata group="api" />
      <apidata name="XmlIncludeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlIncludeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Method" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlIncludeAttribute">
      <topicdata name="XmlIncludeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlIncludeAttribute" />
      <apidata name="XmlIncludeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlIncludeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlIncludeAttribute">
      <topicdata name="XmlIncludeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlIncludeAttribute" />
      <apidata name="XmlIncludeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlIncludeAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlIncludeAttribute" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlIncludeAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlIncludeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlIncludeAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlIncludeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlMapping">
      <topicdata group="api" />
      <apidata name="XmlMapping" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
          <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)" />
        <element api="P:System.Xml.Serialization.XmlMapping.ElementName" />
        <element api="P:System.Xml.Serialization.XmlMapping.Namespace" />
        <element api="P:System.Xml.Serialization.XmlMapping.XsdElementName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlMapping">
      <topicdata name="XmlMapping" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlMapping" />
      <apidata name="XmlMapping" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMapping" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlMapping">
      <topicdata name="XmlMapping" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlMapping" />
      <apidata name="XmlMapping" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlMapping.ElementName" />
        <element api="P:System.Xml.Serialization.XmlMapping.Namespace" />
        <element api="P:System.Xml.Serialization.XmlMapping.XsdElementName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMapping" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMapping.ElementName">
      <topicdata group="api" />
      <apidata name="ElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMapping.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
      <topicdata group="api" />
      <apidata name="SetKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMapping.XsdElementName">
      <topicdata group="api" />
      <apidata name="XsdElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XsdElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlMappingAccess">
      <topicdata group="api" />
      <apidata name="XmlMappingAccess" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Xml.Serialization.XmlMappingAccess.None" />
        <element api="F:System.Xml.Serialization.XmlMappingAccess.Read" />
        <element api="F:System.Xml.Serialization.XmlMappingAccess.Write" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Xml.Serialization.XmlMappingAccess.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlMappingAccess" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMappingAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Serialization.XmlMappingAccess.Read">
      <topicdata group="api" notopic="" />
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlMappingAccess" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMappingAccess" ref="false" />
      </containers>
    </api>
    <api id="F:System.Xml.Serialization.XmlMappingAccess.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlMappingAccess" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMappingAccess" ref="false" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlMemberMapping">
      <topicdata group="api" />
      <apidata name="XmlMemberMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlMemberMapping.GenerateTypeName(System.CodeDom.Compiler.CodeDomProvider)" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.Any" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.ElementName" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.MemberName" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.Namespace" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.TypeName" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlMemberMapping">
      <topicdata name="XmlMemberMapping" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlMemberMapping" />
      <apidata name="XmlMemberMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlMemberMapping.GenerateTypeName(System.CodeDom.Compiler.CodeDomProvider)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlMemberMapping">
      <topicdata name="XmlMemberMapping" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlMemberMapping" />
      <apidata name="XmlMemberMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlMemberMapping.Any" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.ElementName" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.MemberName" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.Namespace" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.TypeName" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace" />
        <element api="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMemberMapping.Any">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Any" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMemberMapping.CheckSpecified">
      <topicdata group="api" />
      <apidata name="CheckSpecified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CheckSpecified" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
      <topicdata group="api" />
      <apidata name="ElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlMemberMapping.GenerateTypeName(System.CodeDom.Compiler.CodeDomProvider)">
      <topicdata group="api" />
      <apidata name="GenerateTypeName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="codeProvider">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMemberMapping.MemberName">
      <topicdata group="api" />
      <apidata name="MemberName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MemberName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMemberMapping.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMemberMapping.TypeFullName">
      <topicdata group="api" />
      <apidata name="TypeFullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeFullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMemberMapping.TypeName">
      <topicdata group="api" />
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMemberMapping.TypeNamespace">
      <topicdata group="api" />
      <apidata name="TypeNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMemberMapping.XsdElementName">
      <topicdata group="api" />
      <apidata name="XsdElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XsdElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlMembersMapping">
      <topicdata group="api" />
      <apidata name="XmlMembersMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)" />
        <element api="P:System.Xml.Serialization.XmlMapping.ElementName" />
        <element api="P:System.Xml.Serialization.XmlMapping.Namespace" />
        <element api="P:System.Xml.Serialization.XmlMapping.XsdElementName" />
        <element api="P:System.Xml.Serialization.XmlMembersMapping.Count" />
        <element api="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlMembersMapping.TypeName" />
        <element api="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlMembersMapping">
      <topicdata name="XmlMembersMapping" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlMembersMapping" />
      <apidata name="XmlMembersMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMembersMapping" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlMembersMapping">
      <topicdata name="XmlMembersMapping" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlMembersMapping" />
      <apidata name="XmlMembersMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlMapping.ElementName" />
        <element api="P:System.Xml.Serialization.XmlMapping.Namespace" />
        <element api="P:System.Xml.Serialization.XmlMapping.XsdElementName" />
        <element api="P:System.Xml.Serialization.XmlMembersMapping.Count" />
        <element api="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlMembersMapping.TypeName" />
        <element api="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMembersMapping" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMembersMapping.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMembersMapping.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMemberMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMembersMapping.TypeName">
      <topicdata group="api" />
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlMembersMapping.TypeNamespace">
      <topicdata group="api" />
      <apidata name="TypeNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <topicdata group="api" />
      <apidata name="XmlNamespaceDeclarationsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <topicdata name="XmlNamespaceDeclarationsAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />
      <apidata name="XmlNamespaceDeclarationsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute">
      <topicdata name="XmlNamespaceDeclarationsAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />
      <apidata name="XmlNamespaceDeclarationsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNamespaceDeclarationsAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlNodeEventArgs">
      <topicdata group="api" />
      <apidata name="XmlNodeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.Name" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.Text" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlNodeEventArgs">
      <topicdata name="XmlNodeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlNodeEventArgs" />
      <apidata name="XmlNodeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlNodeEventArgs">
      <topicdata name="XmlNodeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlNodeEventArgs" />
      <apidata name="XmlNodeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.Name" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized" />
        <element api="P:System.Xml.Serialization.XmlNodeEventArgs.Text" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlNodeEventArgs.LineNumber">
      <topicdata group="api" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlNodeEventArgs.LinePosition">
      <topicdata group="api" />
      <apidata name="LinePosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LinePosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlNodeEventArgs.LocalName">
      <topicdata group="api" />
      <apidata name="LocalName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LocalName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlNodeEventArgs.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
      <topicdata group="api" />
      <apidata name="NamespaceURI" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NamespaceURI" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlNodeEventArgs.NodeType">
      <topicdata group="api" />
      <apidata name="NodeType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NodeType" />
      <returns>
        <type api="T:System.Xml.XmlNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlNodeEventArgs.ObjectBeingDeserialized">
      <topicdata group="api" />
      <apidata name="ObjectBeingDeserialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ObjectBeingDeserialized" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlNodeEventArgs.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlNodeEventHandler">
      <topicdata group="api" />
      <apidata name="XmlNodeEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlReflectionImporter">
      <topicdata group="api" />
      <apidata name="XmlReflectionImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlReflectionImporter.#ctor">
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping">
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping">
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlReflectionImporter">
      <topicdata name="XmlReflectionImporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlReflectionImporter" />
      <apidata name="XmlReflectionImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping">
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping">
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
          <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping">
      <topicdata name="ImportMembersMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping">
      <topicdata name="ImportTypeMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportTypeMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
        <element api="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <parameters>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <parameters>
        <parameter name="attributeOverrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.#ctor" />
      <parameters>
        <parameter name="attributeOverrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="hasWrapperElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="hasWrapperElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rpc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="hasWrapperElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rpc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="openModel">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="hasWrapperElement">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rpc">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="openModel">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.Xml.Serialization.XmlMappingAccess" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
      <topicdata group="api" />
      <apidata name="ImportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="ImportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <topicdata group="api" />
      <apidata name="ImportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
      <topicdata group="api" />
      <apidata name="ImportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
      <topicdata group="api" />
      <apidata name="IncludeType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
      <topicdata group="api" />
      <apidata name="IncludeTypes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.Reflection.ICustomAttributeProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionImporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlReflectionMember">
      <topicdata group="api" />
      <apidata name="XmlReflectionMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlReflectionMember.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlReflectionMember.#ctor" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.MemberName" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.MemberType" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlReflectionMember">
      <topicdata name="XmlReflectionMember" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlReflectionMember" />
      <apidata name="XmlReflectionMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlReflectionMember.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionMember" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlReflectionMember">
      <topicdata name="XmlReflectionMember" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlReflectionMember" />
      <apidata name="XmlReflectionMember" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlReflectionMember.#ctor" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.MemberName" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.MemberType" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes" />
        <element api="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionMember" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlReflectionMember.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlReflectionMember.IsReturnValue">
      <topicdata group="api" />
      <apidata name="IsReturnValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsReturnValue" />
      <setter name="set_IsReturnValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlReflectionMember.MemberName">
      <topicdata group="api" />
      <apidata name="MemberName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MemberName" />
      <setter name="set_MemberName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlReflectionMember.MemberType">
      <topicdata group="api" />
      <apidata name="MemberType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MemberType" />
      <setter name="set_MemberType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlReflectionMember.OverrideIsNullable">
      <topicdata group="api" />
      <apidata name="OverrideIsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OverrideIsNullable" />
      <setter name="set_OverrideIsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlReflectionMember.SoapAttributes">
      <topicdata group="api" />
      <apidata name="SoapAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapAttributes" />
      <setter name="set_SoapAttributes" />
      <returns>
        <type api="T:System.Xml.Serialization.SoapAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlReflectionMember.XmlAttributes">
      <topicdata group="api" />
      <apidata name="XmlAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlAttributes" />
      <setter name="set_XmlAttributes" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlReflectionMember" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlRootAttribute">
      <topicdata group="api" />
      <apidata name="XmlRootAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlRootAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlRootAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlRootAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlRootAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.XmlRootAttribute.IsNullable" />
        <element api="P:System.Xml.Serialization.XmlRootAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Interface" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlRootAttribute">
      <topicdata name="XmlRootAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlRootAttribute" />
      <apidata name="XmlRootAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlRootAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlRootAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlRootAttribute">
      <topicdata name="XmlRootAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlRootAttribute" />
      <apidata name="XmlRootAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlRootAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlRootAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlRootAttribute.ElementName" />
        <element api="P:System.Xml.Serialization.XmlRootAttribute.IsNullable" />
        <element api="P:System.Xml.Serialization.XmlRootAttribute.Namespace" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlRootAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlRootAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlRootAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlRootAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlRootAttribute.#ctor" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlRootAttribute.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataType" />
      <setter name="set_DataType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlRootAttribute.ElementName">
      <topicdata group="api" />
      <apidata name="ElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ElementName" />
      <setter name="set_ElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlRootAttribute.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsNullable" />
      <setter name="set_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlRootAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSchemaEnumerator">
      <topicdata group="api" />
      <apidata name="XmlSchemaEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)" />
        <element api="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose" />
        <element api="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext" />
        <element api="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset" />
        <element api="P:System.Xml.Serialization.XmlSchemaEnumerator.Current" />
        <element api="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSchemaEnumerator">
      <topicdata name="XmlSchemaEnumerator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSchemaEnumerator" />
      <apidata name="XmlSchemaEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose" />
        <element api="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext" />
        <element api="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaEnumerator" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSchemaEnumerator">
      <topicdata name="XmlSchemaEnumerator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSchemaEnumerator" />
      <apidata name="XmlSchemaEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlSchemaEnumerator.Current" />
        <element api="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaEnumerator" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="list">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaEnumerator" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaEnumerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaEnumerator.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaEnumerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaEnumerator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaEnumerator" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
      <topicdata group="api" eiiName="IEnumerator.Current" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IEnumerator.Current" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaEnumerator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Reset">
      <topicdata group="api" eiiName="IEnumerator.Reset" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaEnumerator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSchemaExporter">
      <topicdata group="api" />
      <apidata name="XmlSchemaExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)" />
        <element api="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType">
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping">
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping">
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)" />
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSchemaExporter">
      <topicdata name="XmlSchemaExporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSchemaExporter" />
      <apidata name="XmlSchemaExporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType">
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping">
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping">
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)" />
          <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType">
      <topicdata name="ExportAnyType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExportAnyType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping">
      <topicdata name="ExportMembersMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExportMembersMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)" />
        <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping">
      <topicdata name="ExportTypeMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExportTypeMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)" />
        <element api="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaExporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
      <topicdata group="api" />
      <apidata name="ExportAnyType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
      <topicdata group="api" />
      <apidata name="ExportAnyType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="members">
          <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
      <topicdata group="api" />
      <apidata name="ExportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlMembersMapping">
          <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ExportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlMembersMapping">
          <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
        </parameter>
        <parameter name="exportEnclosingType">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
      <topicdata group="api" />
      <apidata name="ExportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlMembersMapping">
          <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
      <topicdata group="api" />
      <apidata name="ExportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlTypeMapping">
          <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaExporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSchemaImporter">
      <topicdata group="api" />
      <apidata name="XmlSchemaImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.SchemaImporter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSchemaImporter.#ctor">
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping">
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping">
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType">
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)" />
        <element api="P:System.Xml.Serialization.SchemaImporter.Extensions" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSchemaImporter">
      <topicdata name="XmlSchemaImporter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSchemaImporter" />
      <apidata name="XmlSchemaImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping">
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping">
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType">
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSchemaImporter">
      <topicdata name="XmlSchemaImporter" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSchemaImporter" />
      <apidata name="XmlSchemaImporter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.SchemaImporter.Extensions" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemaImporter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping">
      <topicdata name="ImportDerivedTypeMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportDerivedTypeMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping">
      <topicdata name="ImportMembersMapping" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType">
      <topicdata name="ImportSchemaType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="codeProvider">
          <type api="T:System.CodeDom.Compiler.CodeDomProvider" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Serialization.ImportContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Serialization.ImportContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="typeIdentifiers">
          <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.#ctor" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
        <parameter name="typeIdentifiers">
          <type api="T:System.Xml.Serialization.CodeIdentifiers" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Xml.Serialization.CodeGenerationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
      <topicdata group="api" />
      <apidata name="ImportAnyType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
      <topicdata group="api" />
      <apidata name="ImportDerivedTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportDerivedTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseTypeCanBeIndirect">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="members">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.SoapSchemaMember" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.Xml.XmlQualifiedName" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportMembersMapping" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="names">
          <arrayOf rank="1">
            <type api="T:System.Xml.XmlQualifiedName" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseTypeCanBeIndirect">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlMembersMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
      <topicdata group="api" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportSchemaType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="baseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseTypeCanBeIndirect">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="ImportTypeMapping" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaImporter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <topicdata group="api" />
      <apidata name="XmlSchemaProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny" />
        <element api="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Interface" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <topicdata name="XmlSchemaProviderAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
      <apidata name="XmlSchemaProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSchemaProviderAttribute">
      <topicdata name="XmlSchemaProviderAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
      <apidata name="XmlSchemaProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny" />
        <element api="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSchemaProviderAttribute.IsAny">
      <topicdata group="api" />
      <apidata name="IsAny" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsAny" />
      <setter name="set_IsAny" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSchemaProviderAttribute.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSchemas">
      <topicdata group="api" />
      <apidata name="XmlSchemas" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSchemas.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.CollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSchemas.#ctor" />
        <element api="Overload:System.Xml.Serialization.XmlSchemas.Add">
          <element api="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)" />
          <element api="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)" />
          <element api="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.XmlSchemas.Contains">
          <element api="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.OnClear" />
        <element api="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator" />
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlSchemas.IsCompiled" />
        <element api="Overload:System.Xml.Serialization.XmlSchemas.Item">
          <element api="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)" />
          <element api="P:System.Xml.Serialization.XmlSchemas.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSchemas">
      <topicdata name="XmlSchemas" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSchemas" />
      <apidata name="XmlSchemas" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSchemas.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.CollectionBase.Clear" />
        <element api="M:System.Collections.CollectionBase.GetEnumerator" />
        <element api="M:System.Collections.CollectionBase.OnClearComplete" />
        <element api="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Collections.CollectionBase.OnValidate(System.Object)" />
        <element api="M:System.Collections.CollectionBase.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSchemas.Add">
          <element api="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)" />
          <element api="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)" />
          <element api="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.XmlSchemas.Contains">
          <element api="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.OnClear" />
        <element api="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSchemas">
      <topicdata name="XmlSchemas" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSchemas" />
      <apidata name="XmlSchemas" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSchemas.#ctor" />
      <elements>
        <element api="P:System.Collections.CollectionBase.Capacity" />
        <element api="P:System.Collections.CollectionBase.Count" />
        <element api="P:System.Collections.CollectionBase.InnerList" />
        <element api="P:System.Collections.CollectionBase.List" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlSchemas.IsCompiled" />
        <element api="Overload:System.Xml.Serialization.XmlSchemas.Item">
          <element api="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)" />
          <element api="P:System.Xml.Serialization.XmlSchemas.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemas.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemas.Contains">
      <topicdata name="Contains" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Contains" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSchemas.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)" />
        <element api="P:System.Xml.Serialization.XmlSchemas.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemas.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schema">
          <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemas.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schema">
          <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemas.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
      <topicdata group="api" />
      <apidata name="AddReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schema">
          <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.Compile(System.Xml.Schema.ValidationEventHandler,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Compile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:System.Xml.Schema.ValidationEventHandler" ref="true" />
        </parameter>
        <parameter name="fullCompile">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemas.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="targetNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemas.Contains" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schema">
          <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
      <topicdata group="api" />
      <apidata name="GetSchemas" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schema">
          <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="schema">
          <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSchemas.IsCompiled">
      <topicdata group="api" />
      <apidata name="IsCompiled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCompiled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
      <topicdata group="api" />
      <apidata name="IsDataSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schema">
          <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSchemas.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemas.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSchemas.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnClear">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.OnInsert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnInsert" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.OnRemove(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.OnSet(System.Int32,System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSet" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">
          <type api="T:System.Collections.CollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="oldValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schema">
          <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable`1.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSchemas" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback">
      <topicdata group="api" />
      <apidata name="XmlSerializationCollectionFixupCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="collectionItems">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializationFixupCallback">
      <topicdata group="api" />
      <apidata name="XmlSerializationFixupCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="fixup">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <topicdata group="api" />
      <apidata name="XmlSerializationGeneratedCode" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
          <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializationGeneratedCode">
      <topicdata name="XmlSerializationGeneratedCode" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />
      <apidata name="XmlSerializationGeneratedCode" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationGeneratedCode" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationGeneratedCode.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationGeneratedCode" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializationReadCallback">
      <topicdata group="api" />
      <apidata name="XmlSerializationReadCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializationReader">
      <topicdata group="api" />
      <apidata name="XmlSerializationReader" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.XmlSerializationGeneratedCode" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.#ctor" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.AddFixup">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.InitIDs" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadNull" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ReadSerializable">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ReadString">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownElement">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownNode">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.DecodeName" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Document" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Reader" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializationReader">
      <topicdata name="XmlSerializationReader" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializationReader" />
      <apidata name="XmlSerializationReader" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.AddFixup">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.InitIDs" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadNull" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ReadSerializable">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ReadString">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownElement">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownNode">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSerializationReader">
      <topicdata name="XmlSerializationReader" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSerializationReader" />
      <apidata name="XmlSerializationReader" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlSerializationReader.DecodeName" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Document" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Reader" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.AddFixup">
      <topicdata name="AddFixup" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddFixup" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException">
      <topicdata name="CreateInvalidCastException" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateInvalidCastException" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <topicdata name="ReadReferencedElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadReferencedElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement">
      <topicdata name="ReadReferencingElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadReferencingElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.ReadSerializable">
      <topicdata name="ReadSerializable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadSerializable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.ReadString">
      <topicdata name="ReadString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64">
      <topicdata name="ToByteArrayBase64" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToByteArrayBase64" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex">
      <topicdata name="ToByteArrayHex" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ToByteArrayHex" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute">
      <topicdata name="UnknownAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UnknownAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownElement">
      <topicdata name="UnknownElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UnknownElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownNode">
      <topicdata name="UnknownNode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="UnknownNode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.CollectionFixup)">
      <topicdata group="api" />
      <apidata name="AddFixup" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.AddFixup" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fixup">
          <type api="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" ref="true">
            <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.AddFixup(System.Xml.Serialization.XmlSerializationReader.Fixup)">
      <topicdata group="api" />
      <apidata name="AddFixup" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.AddFixup" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fixup">
          <type api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" ref="true">
            <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
      <topicdata group="api" />
      <apidata name="AddReadCallback" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="read">
          <type api="T:System.Xml.Serialization.XmlSerializationReadCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="AddTarget" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CheckReaderCount(System.Int32@,System.Int32@)">
      <topicdata group="api" />
      <apidata name="CheckReaderCount" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="whileIterations">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
        <parameter name="readerCount">
          <referenceTo>
            <type api="T:System.Int32" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
      <topicdata group="api" />
      <apidata name="CollapseWhitespace" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateAbstractTypeException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateBadDerivationException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xsdDerived">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nsDerived">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="xsdBase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nsBase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clrDerived">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clrBase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
      <topicdata group="api" />
      <apidata name="CreateCtorHasSecurityException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
      <topicdata group="api" />
      <apidata name="CreateInaccessibleConstructorException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name="CreateInvalidCastException" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="CreateInvalidCastException" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateMissingIXmlSerializableType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="clrType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
      <topicdata group="api" />
      <apidata name="CreateReadOnlyCollectionException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="CreateUnknownConstantException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enumType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
      <topicdata group="api" />
      <apidata name="CreateUnknownNodeException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="CreateUnknownTypeException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.DecodeName">
      <topicdata group="api" />
      <apidata name="DecodeName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DecodeName" />
      <setter name="set_DecodeName" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.Document">
      <topicdata group="api" />
      <apidata name="Document" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Document" />
      <returns>
        <type api="T:System.Xml.XmlDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
      <topicdata group="api" />
      <apidata name="EnsureArrayIndex" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="elementType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Array" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
      <topicdata group="api" />
      <apidata name="FixupArrayRefs" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fixup">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetArrayLength" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.GetNullAttr">
      <topicdata group="api" />
      <apidata name="GetNullAttr" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
      <topicdata group="api" />
      <apidata name="GetTarget" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
      <topicdata group="api" />
      <apidata name="GetXsiType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.InitCallbacks">
      <topicdata group="api" />
      <apidata name="InitCallbacks" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.InitIDs">
      <topicdata group="api" />
      <apidata name="InitIDs" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.IsReturnValue">
      <topicdata group="api" />
      <apidata name="IsReturnValue" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsReturnValue" />
      <setter name="set_IsReturnValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
      <topicdata group="api" />
      <apidata name="IsXmlnsAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
      <topicdata group="api" />
      <apidata name="ParseWsdlArrayType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attr">
          <type api="T:System.Xml.XmlAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
      <topicdata group="api" />
      <apidata name="ReadElementQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadEndElement">
      <topicdata group="api" />
      <apidata name="ReadEndElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.Reader">
      <topicdata group="api" />
      <apidata name="Reader" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Reader" />
      <returns>
        <type api="T:System.Xml.XmlReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.ReaderCount">
      <topicdata group="api" />
      <apidata name="ReaderCount" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReaderCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadNull">
      <topicdata group="api" />
      <apidata name="ReadNull" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
      <topicdata group="api" />
      <apidata name="ReadNullableQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableString">
      <topicdata group="api" />
      <apidata name="ReadNullableString" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
      <topicdata group="api" />
      <apidata name="ReadReference" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fixupReference" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement">
      <topicdata group="api" />
      <apidata name="ReadReferencedElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ReadReferencedElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElements">
      <topicdata group="api" />
      <apidata name="ReadReferencedElements" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
      <topicdata group="api" />
      <apidata name="ReadReferencingElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="elementCanBeType">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="fixupReference" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
      <topicdata group="api" />
      <apidata name="ReadReferencingElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fixupReference" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
      <topicdata group="api" />
      <apidata name="ReadReferencingElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fixupReference" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
      <topicdata group="api" />
      <apidata name="ReadSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ReadSerializable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serializable">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ReadSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ReadSerializable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serializable">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </parameter>
        <parameter name="wrappedAny">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String)">
      <topicdata group="api" />
      <apidata name="ReadString" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ReadString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadString(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ReadString" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ReadString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="trim">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="ReadTypedNull" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="ReadTypedPrimitive" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ReadXmlDocument" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wrapped">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ReadXmlNode" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wrapped">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.Referenced(System.Object)">
      <topicdata group="api" />
      <apidata name="Referenced" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
      <topicdata group="api" />
      <apidata name="ResolveDynamicAssembly" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assemblyFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ShrinkArray" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="a">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="elementType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Array" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToByteArrayBase64" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="isNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
      <topicdata group="api" />
      <apidata name="ToByteArrayBase64" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToByteArrayHex" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="isNull">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
      <topicdata group="api" />
      <apidata name="ToByteArrayHex" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
      <topicdata group="api" />
      <apidata name="ToChar" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
      <topicdata group="api" />
      <apidata name="ToDate" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
      <topicdata group="api" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
      <topicdata group="api" />
      <apidata name="ToEnum" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="h">
          <type api="T:System.Collections.Hashtable" ref="true" />
        </parameter>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
      <topicdata group="api" />
      <apidata name="ToTime" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
      <topicdata group="api" />
      <apidata name="ToXmlName" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
      <topicdata group="api" />
      <apidata name="ToXmlNCName" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
      <topicdata group="api" />
      <apidata name="ToXmlNmToken" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
      <topicdata group="api" />
      <apidata name="ToXmlNmTokens" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
      <topicdata group="api" />
      <apidata name="ToXmlQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute)">
      <topicdata group="api" />
      <apidata name="UnknownAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attr">
          <type api="T:System.Xml.XmlAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
      <topicdata group="api" />
      <apidata name="UnknownAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attr">
          <type api="T:System.Xml.XmlAttribute" ref="true" />
        </parameter>
        <parameter name="qnames">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement)">
      <topicdata group="api" />
      <apidata name="UnknownElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="elem">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
      <topicdata group="api" />
      <apidata name="UnknownElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="elem">
          <type api="T:System.Xml.XmlElement" ref="true" />
        </parameter>
        <parameter name="qnames">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object)">
      <topicdata group="api" />
      <apidata name="UnknownNode" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownNode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="UnknownNode" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationReader.UnknownNode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="qnames">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="UnreferencedObject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <topicdata group="api" />
      <apidata name="CollectionFixup" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <topicdata name="CollectionFixup" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" />
      <apidata name="CollectionFixup" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup">
      <topicdata name="CollectionFixup" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" />
      <apidata name="CollectionFixup" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationCollectionFixupCallback,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" ref="true" />
        </parameter>
        <parameter name="collectionItems">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Callback">
      <topicdata group="api" />
      <apidata name="Callback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Callback" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializationCollectionFixupCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.Collection">
      <topicdata group="api" />
      <apidata name="Collection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Collection" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.CollectionFixup.CollectionItems">
      <topicdata group="api" />
      <apidata name="CollectionItems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CollectionItems" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.CollectionFixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <topicdata group="api" />
      <apidata name="Fixup" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor">
          <element api="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)" />
          <element api="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])" />
        </element>
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <topicdata name="Fixup" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />
      <apidata name="Fixup" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSerializationReader.Fixup">
      <topicdata name="Fixup" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />
      <apidata name="Fixup" group="type" subgroup="class" />
      <typedata visibility="family" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids" />
        <element api="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)" />
        <element api="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Xml.Serialization.XmlSerializationFixupCallback" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Xml.Serialization.XmlSerializationFixupCallback" ref="true" />
        </parameter>
        <parameter name="ids">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Callback">
      <topicdata group="api" />
      <apidata name="Callback" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Callback" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializationFixupCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Ids">
      <topicdata group="api" />
      <apidata name="Ids" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Ids" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationReader.Fixup.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationReader.Fixup" ref="true">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </type>
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializationWriteCallback">
      <topicdata group="api" />
      <apidata name="XmlSerializationWriteCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializationWriter">
      <topicdata group="api" />
      <apidata name="XmlSerializationWriter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.XmlSerializationGeneratedCode" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.#ctor" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.FromEnum">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementString">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteValue">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)" />
        <element api="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName" />
        <element api="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces" />
        <element api="P:System.Xml.Serialization.XmlSerializationWriter.Writer" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializationWriter">
      <topicdata name="XmlSerializationWriter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializationWriter" />
      <apidata name="XmlSerializationWriter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.FromEnum">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementString">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)" />
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteValue">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute">
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)" />
          <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSerializationWriter">
      <topicdata name="XmlSerializationWriter" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSerializationWriter" />
      <apidata name="XmlSerializationWriter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName" />
        <element api="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces" />
        <element api="P:System.Xml.Serialization.XmlSerializationWriter.Writer" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException">
      <topicdata name="CreateInvalidAnyTypeException" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateInvalidAnyTypeException" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException">
      <topicdata name="CreateUnknownTypeException" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateUnknownTypeException" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.FromEnum">
      <topicdata name="FromEnum" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FromEnum" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName">
      <topicdata name="FromXmlQualifiedName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FromXmlQualifiedName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute">
      <topicdata name="WriteAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName">
      <topicdata name="WriteElementQualifiedName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteElementQualifiedName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementString">
      <topicdata name="WriteElementString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteElementString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw">
      <topicdata name="WriteElementStringRaw" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteElementStringRaw" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag">
      <topicdata name="WriteEmptyTag" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteEmptyTag" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <topicdata name="WriteEndElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteEndElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw">
      <topicdata name="WriteNullableStringEncodedRaw" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteNullableStringEncodedRaw" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw">
      <topicdata name="WriteNullableStringLiteralRaw" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteNullableStringLiteralRaw" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded">
      <topicdata name="WriteNullTagEncoded" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteNullTagEncoded" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral">
      <topicdata name="WriteNullTagLiteral" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteNullTagLiteral" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement">
      <topicdata name="WritePotentiallyReferencingElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WritePotentiallyReferencingElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement">
      <topicdata name="WriteReferencingElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteReferencingElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable">
      <topicdata name="WriteSerializable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteSerializable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement">
      <topicdata name="WriteStartElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteValue">
      <topicdata name="WriteValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute">
      <topicdata name="WriteXmlAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteXmlAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)" />
        <element api="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
      <topicdata group="api" />
      <apidata name="AddWriteCallback" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeNs">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Xml.Serialization.XmlSerializationWriteCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateChoiceIdentifierValueException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
      <topicdata group="api" />
      <apidata name="CreateInvalidAnyTypeException" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateInvalidAnyTypeException" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateInvalidChoiceIdentifierValueException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="identifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="CreateInvalidEnumValueException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateMismatchChoiceException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="enumValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateUnknownAnyElementException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
      <topicdata group="api" />
      <apidata name="CreateUnknownTypeException" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateUnknownTypeException" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationWriter.EscapeName">
      <topicdata group="api" />
      <apidata name="EscapeName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EscapeName" />
      <setter name="set_EscapeName" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])">
      <topicdata group="api" />
      <apidata name="FromByteArrayBase64" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
      <topicdata group="api" />
      <apidata name="FromByteArrayHex" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
      <topicdata group="api" />
      <apidata name="FromChar" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
      <topicdata group="api" />
      <apidata name="FromDate" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
      <topicdata group="api" />
      <apidata name="FromDateTime" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
      <topicdata group="api" />
      <apidata name="FromEnum" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.FromEnum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="ids">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
      <topicdata group="api" />
      <apidata name="FromEnum" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.FromEnum" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="ids">
          <arrayOf rank="1">
            <type api="T:System.Int64" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
      <topicdata group="api" />
      <apidata name="FromTime" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
      <topicdata group="api" />
      <apidata name="FromXmlName" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
      <topicdata group="api" />
      <apidata name="FromXmlNCName" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ncName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
      <topicdata group="api" />
      <apidata name="FromXmlNmToken" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nmToken">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
      <topicdata group="api" />
      <apidata name="FromXmlNmTokens" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nmTokens">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="FromXmlQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlQualifiedName">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)">
      <topicdata group="api" />
      <apidata name="FromXmlQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlQualifiedName">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="ignoreEmpty">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.InitCallbacks">
      <topicdata group="api" />
      <apidata name="InitCallbacks" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationWriter.Namespaces">
      <topicdata group="api" />
      <apidata name="Namespaces" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespaces" />
      <setter name="set_Namespaces" />
      <returns>
        <type api="T:System.Collections.ArrayList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
      <topicdata group="api" />
      <apidata name="ResolveDynamicAssembly" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assemblyFullName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.TopLevelElement">
      <topicdata group="api" />
      <apidata name="TopLevelElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteElementEncoded" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="any">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteElementLiteral" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="any">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementQualifiedName" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteElementString" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteElementString" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementString" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementString" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteElementStringRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementStringRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteElementStringRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteElementStringRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementStringRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteElementStringRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementStringRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteElementStringRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
      <topicdata group="api" />
      <apidata name="WriteEmptyTag" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteEmptyTag" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement">
      <topicdata group="api" />
      <apidata name="WriteEndElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)">
      <topicdata group="api" />
      <apidata name="WriteEndElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteEndElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
      <topicdata group="api" />
      <apidata name="WriteId" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)">
      <topicdata group="api" />
      <apidata name="WriteNamespaceDeclarations" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlns">
          <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteNullableQualifiedNameEncoded" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteNullableQualifiedNameLiteral" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteNullableStringEncoded" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteNullableStringEncodedRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteNullableStringEncodedRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteNullableStringLiteral" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteNullableStringLiteralRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteNullableStringLiteralRaw" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
      <topicdata group="api" />
      <apidata name="WriteNullTagEncoded" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteNullTagEncoded" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
      <topicdata group="api" />
      <apidata name="WriteNullTagLiteral" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteNullTagLiteral" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="WritePotentiallyReferencingElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="n">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="WritePotentiallyReferencingElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="n">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="ambientType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WritePotentiallyReferencingElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="n">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="ambientType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="suppressReference">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WritePotentiallyReferencingElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="n">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="ambientType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="suppressReference">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializationWriter.Writer">
      <topicdata group="api" />
      <apidata name="Writer" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Writer" />
      <setter name="set_Writer" />
      <returns>
        <type api="T:System.Xml.XmlWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements">
      <topicdata group="api" />
      <apidata name="WriteReferencedElements" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="WriteReferencingElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="n">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteReferencingElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="n">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteRpcResult" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serializable">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteSerializable" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="serializable">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="wrapped">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument">
      <topicdata group="api" />
      <apidata name="WriteStartDocument" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="writePrefixed">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="writePrefixed">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
      <topicdata group="api" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="writePrefixed">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="xmlns">
          <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteTypedPrimitive" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="xsiType">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])">
      <topicdata group="api" />
      <apidata name="WriteValue" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
      <topicdata group="api" />
      <apidata name="WriteValue" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="WriteXmlAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
      <topicdata group="api" />
      <apidata name="WriteXmlAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
        <parameter name="container">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteXsiType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializer">
      <topicdata group="api" />
      <apidata name="XmlSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <element api="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />
        <element api="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <element api="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSerializer.#ctor">
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor" />
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])" />
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.CreateReader" />
        <element api="M:System.Xml.Serialization.XmlSerializer.CreateWriter" />
        <element api="Overload:System.Xml.Serialization.XmlSerializer.Deserialize">
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializer.FromMappings">
          <element api="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])" />
          <element api="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])" />
        <element api="Overload:System.Xml.Serialization.XmlSerializer.GenerateSerializer">
          <element api="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])" />
          <element api="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName">
          <element api="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializer.Serialize">
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializer">
      <topicdata name="XmlSerializer" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializer" />
      <apidata name="XmlSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.CreateReader" />
        <element api="M:System.Xml.Serialization.XmlSerializer.CreateWriter" />
        <element api="Overload:System.Xml.Serialization.XmlSerializer.Deserialize">
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializer.FromMappings">
          <element api="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])" />
          <element api="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])" />
        <element api="Overload:System.Xml.Serialization.XmlSerializer.GenerateSerializer">
          <element api="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])" />
          <element api="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName">
          <element api="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)" />
        </element>
        <element api="Overload:System.Xml.Serialization.XmlSerializer.Serialize">
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" />
      </containers>
    </api>
    <api id="Events.T:System.Xml.Serialization.XmlSerializer">
      <topicdata name="XmlSerializer" group="list" subgroup="Events" typeTopicId="T:System.Xml.Serialization.XmlSerializer" />
      <apidata name="XmlSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute" />
        <element api="E:System.Xml.Serialization.XmlSerializer.UnknownElement" />
        <element api="E:System.Xml.Serialization.XmlSerializer.UnknownNode" />
        <element api="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor" />
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])" />
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializer.Deserialize">
      <topicdata name="Deserialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Deserialize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializer.FromMappings">
      <topicdata name="FromMappings" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FromMappings" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])" />
        <element api="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializer.GenerateSerializer">
      <topicdata name="GenerateSerializer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GenerateSerializer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])" />
        <element api="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName">
      <topicdata name="GetXmlSerializerAssemblyName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetXmlSerializerAssemblyName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializer.Serialize">
      <topicdata name="Serialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="extraTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="overrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="overrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
        <parameter name="extraTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="overrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
        <parameter name="extraTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="location">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="overrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
        <parameter name="extraTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="location">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="evidence">
          <type api="T:System.Security.Policy.Evidence" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method is obsolete and will be removed in a future release of the .NET Framework. Please use a XmlSerializer constructor overload which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializer.#ctor" />
      <parameters>
        <parameter name="xmlTypeMapping">
          <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="CanDeserialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.CreateReader">
      <topicdata group="api" />
      <apidata name="CreateReader" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.CreateWriter">
      <topicdata group="api" />
      <apidata name="CreateWriter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textReader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
      <topicdata group="api" />
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
      <topicdata group="api" />
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="encodingStyle">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
      <topicdata group="api" />
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="encodingStyle">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="events">
          <type api="T:System.Xml.Serialization.XmlDeserializationEvents" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
      <topicdata group="api" />
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Deserialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlReader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="events">
          <type api="T:System.Xml.Serialization.XmlDeserializationEvents" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
      <topicdata group="api" />
      <apidata name="FromMappings" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Serialization.XmlSerializer.FromMappings" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mappings">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
      <topicdata group="api" />
      <apidata name="FromMappings" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Serialization.XmlSerializer.FromMappings" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mappings">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="evidence">
          <type api="T:System.Security.Policy.Evidence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of FromMappings which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
      <topicdata group="api" />
      <apidata name="FromMappings" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Serialization.XmlSerializer.FromMappings" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mappings">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
      <topicdata group="api" />
      <apidata name="FromTypes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="types">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
      <topicdata group="api" />
      <apidata name="GenerateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Serialization.XmlSerializer.GenerateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="types">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="mappings">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
      <topicdata group="api" />
      <apidata name="GenerateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Serialization.XmlSerializer.GenerateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="types">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="mappings">
          <arrayOf rank="1">
            <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="parameters">
          <type api="T:System.CodeDom.Compiler.CompilerParameters" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
      <topicdata group="api" />
      <apidata name="GetXmlSerializerAssemblyName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="GetXmlSerializerAssemblyName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Serialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Serialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Serialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Serialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Xml.Serialization.XmlSerializer.Serialize" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Serialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlWriter">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Serialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlWriter">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Serialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlWriter">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
        </parameter>
        <parameter name="encodingStyle">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializer.Serialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlWriter">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="o">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
        </parameter>
        <parameter name="encodingStyle">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Xml.Serialization.XmlSerializer.UnknownAttribute">
      <topicdata group="api" />
      <apidata name="UnknownAttribute" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnknownAttribute" />
      <remover name="remove_UnknownAttribute" />
      <eventhandler>
        <type api="T:System.Xml.Serialization.XmlAttributeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Xml.Serialization.XmlAttributeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Xml.Serialization.XmlSerializer.UnknownElement">
      <topicdata group="api" />
      <apidata name="UnknownElement" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnknownElement" />
      <remover name="remove_UnknownElement" />
      <eventhandler>
        <type api="T:System.Xml.Serialization.XmlElementEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Xml.Serialization.XmlElementEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Xml.Serialization.XmlSerializer.UnknownNode">
      <topicdata group="api" />
      <apidata name="UnknownNode" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnknownNode" />
      <remover name="remove_UnknownNode" />
      <eventhandler>
        <type api="T:System.Xml.Serialization.XmlNodeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Xml.Serialization.XmlNodeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Xml.Serialization.XmlSerializer.UnreferencedObject">
      <topicdata group="api" />
      <apidata name="UnreferencedObject" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnreferencedObject" />
      <remover name="remove_UnreferencedObject" />
      <eventhandler>
        <type api="T:System.Xml.Serialization.UnreferencedObjectEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Xml.Serialization.UnreferencedObjectEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <topicdata group="api" />
      <apidata name="XmlSerializerAssemblyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName" />
        <element api="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <topicdata name="XmlSerializerAssemblyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />
      <apidata name="XmlSerializerAssemblyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSerializerAssemblyAttribute">
      <topicdata name="XmlSerializerAssemblyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />
      <apidata name="XmlSerializerAssemblyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName" />
        <element api="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor" />
      <parameters>
        <parameter name="assemblyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor" />
      <parameters>
        <parameter name="assemblyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="codeBase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.AssemblyName">
      <topicdata group="api" />
      <apidata name="AssemblyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblyName" />
      <setter name="set_AssemblyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerAssemblyAttribute.CodeBase">
      <topicdata group="api" />
      <apidata name="CodeBase" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CodeBase" />
      <setter name="set_CodeBase" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerAssemblyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializerFactory">
      <topicdata group="api" />
      <apidata name="XmlSerializerFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerFactory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.#ctor" />
        <element api="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer">
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializerFactory">
      <topicdata name="XmlSerializerFactory" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializerFactory" />
      <apidata name="XmlSerializerFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer">
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
          <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer">
      <topicdata name="CreateSerializer" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)" />
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])" />
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)" />
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)" />
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
      <topicdata group="api" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
      <topicdata group="api" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="extraTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
      <topicdata group="api" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="overrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
      <topicdata group="api" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="overrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
        <parameter name="extraTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="overrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
        <parameter name="extraTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="location">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
      <topicdata group="api" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="overrides">
          <type api="T:System.Xml.Serialization.XmlAttributeOverrides" ref="true" />
        </parameter>
        <parameter name="extraTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
        <parameter name="defaultNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="location">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="evidence">
          <type api="T:System.Security.Policy.Evidence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method is obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateSerializer which does not take an Evidence parameter. See http://go2.microsoft.com/fwlink/?LinkId=131738 for more information.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <topicdata group="api" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="root">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
      <topicdata group="api" />
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlTypeMapping">
          <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerFactory" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializerImplementation">
      <topicdata group="api" />
      <apidata name="XmlSerializerImplementation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor" />
        <element api="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)" />
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.Reader" />
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods" />
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers" />
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods" />
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.Writer" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializerImplementation">
      <topicdata name="XmlSerializerImplementation" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializerImplementation" />
      <apidata name="XmlSerializerImplementation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)" />
        <element api="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSerializerImplementation">
      <topicdata name="XmlSerializerImplementation" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSerializerImplementation" />
      <apidata name="XmlSerializerImplementation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.Reader" />
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods" />
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers" />
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods" />
        <element api="P:System.Xml.Serialization.XmlSerializerImplementation.Writer" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerImplementation.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerImplementation.CanSerialize(System.Type)">
      <topicdata group="api" />
      <apidata name="CanSerialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
      <topicdata group="api" />
      <apidata name="GetSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerImplementation.Reader">
      <topicdata group="api" />
      <apidata name="Reader" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Reader" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializationReader" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerImplementation.ReadMethods">
      <topicdata group="api" />
      <apidata name="ReadMethods" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ReadMethods" />
      <returns>
        <type api="T:System.Collections.Hashtable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerImplementation.TypedSerializers">
      <topicdata group="api" />
      <apidata name="TypedSerializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_TypedSerializers" />
      <returns>
        <type api="T:System.Collections.Hashtable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerImplementation.WriteMethods">
      <topicdata group="api" />
      <apidata name="WriteMethods" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_WriteMethods" />
      <returns>
        <type api="T:System.Collections.Hashtable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerImplementation.Writer">
      <topicdata group="api" />
      <apidata name="Writer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Writer" />
      <returns>
        <type api="T:System.Xml.Serialization.XmlSerializationWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerImplementation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializerNamespaces">
      <topicdata group="api" />
      <apidata name="XmlSerializerNamespaces" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
          <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor" />
          <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])" />
          <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)" />
        </element>
        <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray" />
        <element api="P:System.Xml.Serialization.XmlSerializerNamespaces.Count" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializerNamespaces">
      <topicdata name="XmlSerializerNamespaces" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializerNamespaces" />
      <apidata name="XmlSerializerNamespaces" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)" />
        <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSerializerNamespaces">
      <topicdata name="XmlSerializerNamespaces" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSerializerNamespaces" />
      <apidata name="XmlSerializerNamespaces" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlSerializerNamespaces.Count" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor" />
        <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])" />
        <element api="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializerNamespaces.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializerNamespaces.#ctor" />
      <parameters>
        <parameter name="namespaces">
          <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializerNamespaces.#ctor" />
      <parameters>
        <parameter name="namespaces">
          <arrayOf rank="1">
            <type api="T:System.Xml.XmlQualifiedName" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerNamespaces.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
      <topicdata group="api" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerNamespaces" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <topicdata group="api" />
      <apidata name="XmlSerializerVersionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId" />
        <element api="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type" />
        <element api="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <topicdata name="XmlSerializerVersionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />
      <apidata name="XmlSerializerVersionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlSerializerVersionAttribute">
      <topicdata name="XmlSerializerVersionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />
      <apidata name="XmlSerializerVersionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId" />
        <element api="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type" />
        <element api="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlSerializerVersionAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerVersionAttribute.ParentAssemblyId">
      <topicdata group="api" />
      <apidata name="ParentAssemblyId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ParentAssemblyId" />
      <setter name="set_ParentAssemblyId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlSerializerVersionAttribute.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlSerializerVersionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlTextAttribute">
      <topicdata group="api" />
      <apidata name="XmlTextAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlTextAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
              <field name="ReturnValue" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlTextAttribute">
      <topicdata name="XmlTextAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlTextAttribute" />
      <apidata name="XmlTextAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTextAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlTextAttribute">
      <topicdata name="XmlTextAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlTextAttribute" />
      <apidata name="XmlTextAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlTextAttribute.DataType" />
        <element api="P:System.Xml.Serialization.XmlTextAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTextAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlTextAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlTextAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlTextAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlTextAttribute.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTextAttribute.DataType">
      <topicdata group="api" />
      <apidata name="DataType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DataType" />
      <setter name="set_DataType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTextAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTextAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlTypeAttribute">
      <topicdata group="api" />
      <apidata name="XmlTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Serialization.XmlTypeAttribute.#ctor">
          <element api="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
          <element api="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)" />
        </element>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
        <element api="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
        <element api="P:System.Xml.Serialization.XmlTypeAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Interface" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlTypeAttribute">
      <topicdata name="XmlTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlTypeAttribute" />
      <apidata name="XmlTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlTypeAttribute">
      <topicdata name="XmlTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlTypeAttribute" />
      <apidata name="XmlTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType" />
        <element api="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema" />
        <element api="P:System.Xml.Serialization.XmlTypeAttribute.Namespace" />
        <element api="P:System.Xml.Serialization.XmlTypeAttribute.TypeName" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
        <element api="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlTypeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Serialization.XmlTypeAttribute.#ctor" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTypeAttribute.AnonymousType">
      <topicdata group="api" />
      <apidata name="AnonymousType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AnonymousType" />
      <setter name="set_AnonymousType" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTypeAttribute.IncludeInSchema">
      <topicdata group="api" />
      <apidata name="IncludeInSchema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeInSchema" />
      <setter name="set_IncludeInSchema" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTypeAttribute.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTypeAttribute.TypeName">
      <topicdata group="api" />
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TypeName" />
      <setter name="set_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Xml.Serialization.XmlTypeMapping">
      <topicdata group="api" />
      <apidata name="XmlTypeMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Serialization.XmlMapping" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)" />
        <element api="P:System.Xml.Serialization.XmlMapping.ElementName" />
        <element api="P:System.Xml.Serialization.XmlMapping.Namespace" />
        <element api="P:System.Xml.Serialization.XmlMapping.XsdElementName" />
        <element api="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName" />
        <element api="P:System.Xml.Serialization.XmlTypeMapping.TypeName" />
        <element api="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName" />
        <element api="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
      </containers>
    </api>
    <api id="Methods.T:System.Xml.Serialization.XmlTypeMapping">
      <topicdata name="XmlTypeMapping" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Serialization.XmlTypeMapping" />
      <apidata name="XmlTypeMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeMapping" />
      </containers>
    </api>
    <api id="Properties.T:System.Xml.Serialization.XmlTypeMapping">
      <topicdata name="XmlTypeMapping" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Serialization.XmlTypeMapping" />
      <apidata name="XmlTypeMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Xml.Serialization.XmlMapping.ElementName" />
        <element api="P:System.Xml.Serialization.XmlMapping.Namespace" />
        <element api="P:System.Xml.Serialization.XmlMapping.XsdElementName" />
        <element api="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName" />
        <element api="P:System.Xml.Serialization.XmlTypeMapping.TypeName" />
        <element api="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName" />
        <element api="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace" />
      </elements>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeMapping" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTypeMapping.TypeFullName">
      <topicdata group="api" />
      <apidata name="TypeFullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeFullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTypeMapping.TypeName">
      <topicdata group="api" />
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeName">
      <topicdata group="api" />
      <apidata name="XsdTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XsdTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Xml.Serialization.XmlTypeMapping.XsdTypeNamespace">
      <topicdata group="api" />
      <apidata name="XsdTypeNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XsdTypeNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Xml" module="System.Xml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Xml.Serialization" />
        <type api="T:System.Xml.Serialization.XmlTypeMapping" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>