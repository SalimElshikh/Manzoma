<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="PresentationFramework">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Windows.ThemeInfoAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.ResourceDictionaryLocation" ref="false" />
            <enumValue>
              <field name="ExternalAssembly" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Windows.ResourceDictionaryLocation" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationFramework.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationFramework.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>PresentationFramework.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="WindowsBase">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WindowsBase.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Windows.Data">
      <topicdata group="api" />
      <apidata name="System.Windows.Data" group="namespace" />
      <elements>
        <element api="T:System.Windows.Data.BindingStatus" />
        <element api="T:System.Windows.Data.Binding" />
        <element api="T:System.Windows.Data.BindingMode" />
        <element api="T:System.Windows.Data.UpdateSourceTrigger" />
        <element api="T:System.Windows.Data.BindingBase" />
        <element api="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />
        <element api="T:System.Windows.Data.BindingExpression" />
        <element api="T:System.Windows.Data.BindingExpressionBase" />
        <element api="T:System.Windows.Data.BindingGroup" />
        <element api="T:System.Windows.Data.BindingListCollectionView" />
        <element api="T:System.Windows.Data.BindingOperations" />
        <element api="T:System.Windows.Data.CollectionContainer" />
        <element api="T:System.Windows.Data.CollectionRegisteringEventArgs" />
        <element api="T:System.Windows.Data.CollectionSynchronizationCallback" />
        <element api="T:System.Windows.Data.CollectionView" />
        <element api="T:System.Windows.Data.CollectionViewGroup" />
        <element api="T:System.Windows.Data.CollectionViewRegisteringEventArgs" />
        <element api="T:System.Windows.Data.CollectionViewSource" />
        <element api="T:System.Windows.Data.CompositeCollection" />
        <element api="T:System.Windows.Data.DataChangedEventManager" />
        <element api="T:System.Windows.Data.DataTransferEventArgs" />
        <element api="T:System.Windows.Data.FilterEventArgs" />
        <element api="T:System.Windows.Data.FilterEventHandler" />
        <element api="T:System.Windows.Data.IMultiValueConverter" />
        <element api="T:System.Windows.Data.IValueConverter" />
        <element api="T:System.Windows.Data.ListCollectionView" />
        <element api="T:System.Windows.Data.GroupDescriptionSelectorCallback" />
        <element api="T:System.Windows.Data.MultiBinding" />
        <element api="T:System.Windows.Data.MultiBindingExpression" />
        <element api="T:System.Windows.Data.ObjectDataProvider" />
        <element api="T:System.Windows.Data.PriorityBinding" />
        <element api="T:System.Windows.Data.PriorityBindingExpression" />
        <element api="T:System.Windows.Data.PropertyGroupDescription" />
        <element api="T:System.Windows.Data.RelativeSourceMode" />
        <element api="T:System.Windows.Data.RelativeSource" />
        <element api="T:System.Windows.Data.ValueConversionAttribute" />
        <element api="T:System.Windows.Data.ValueUnavailableException" />
        <element api="T:System.Windows.Data.XmlNamespaceMappingCollection" />
        <element api="T:System.Windows.Data.XmlDataProvider" />
        <element api="T:System.Windows.Data.XmlNamespaceMapping" />
        <element api="T:System.Windows.Data.DataSourceProvider" />
      </elements>
    </api>
    <api id="T:System.Windows.Data.Binding">
      <topicdata group="api" />
      <apidata name="Binding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.Binding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.BindingBase" ref="true" />
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Data.Binding.SourceUpdated" />
        <element api="E:System.Windows.Data.Binding.TargetUpdated" />
        <element api="F:System.Windows.Data.Binding.DoNothing" />
        <element api="F:System.Windows.Data.Binding.IndexerName" />
        <element api="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
        <element api="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
        <element api="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Data.Binding.#ctor">
          <element api="M:System.Windows.Data.Binding.#ctor" />
          <element api="M:System.Windows.Data.Binding.#ctor(System.String)" />
        </element>
        <element api="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
        <element api="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
        <element api="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
        <element api="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
        <element api="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
        <element api="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
        <element api="P:System.Windows.Data.Binding.AsyncState" />
        <element api="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
        <element api="P:System.Windows.Data.Binding.Converter" />
        <element api="P:System.Windows.Data.Binding.ConverterCulture" />
        <element api="P:System.Windows.Data.Binding.ConverterParameter" />
        <element api="P:System.Windows.Data.Binding.ElementName" />
        <element api="P:System.Windows.Data.Binding.IsAsync" />
        <element api="P:System.Windows.Data.Binding.Mode" />
        <element api="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
        <element api="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
        <element api="P:System.Windows.Data.Binding.NotifyOnValidationError" />
        <element api="P:System.Windows.Data.Binding.Path" />
        <element api="P:System.Windows.Data.Binding.RelativeSource" />
        <element api="P:System.Windows.Data.Binding.Source" />
        <element api="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
        <element api="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
        <element api="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
        <element api="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
        <element api="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
        <element api="P:System.Windows.Data.Binding.ValidationRules" />
        <element api="P:System.Windows.Data.Binding.XmlNamespaceManager" />
        <element api="P:System.Windows.Data.Binding.XPath" />
        <element api="P:System.Windows.Data.BindingBase.BindingGroupName" />
        <element api="P:System.Windows.Data.BindingBase.Delay" />
        <element api="P:System.Windows.Data.BindingBase.FallbackValue" />
        <element api="P:System.Windows.Data.BindingBase.StringFormat" />
        <element api="P:System.Windows.Data.BindingBase.TargetNullValue" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.Binding">
      <topicdata name="Binding" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.Binding" />
      <apidata name="Binding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.Binding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
        <element api="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
        <element api="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
        <element api="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
        <element api="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
        <element api="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.Binding">
      <topicdata name="Binding" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.Binding" />
      <apidata name="Binding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.Binding.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.Binding.AsyncState" />
        <element api="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
        <element api="P:System.Windows.Data.Binding.Converter" />
        <element api="P:System.Windows.Data.Binding.ConverterCulture" />
        <element api="P:System.Windows.Data.Binding.ConverterParameter" />
        <element api="P:System.Windows.Data.Binding.ElementName" />
        <element api="P:System.Windows.Data.Binding.IsAsync" />
        <element api="P:System.Windows.Data.Binding.Mode" />
        <element api="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
        <element api="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
        <element api="P:System.Windows.Data.Binding.NotifyOnValidationError" />
        <element api="P:System.Windows.Data.Binding.Path" />
        <element api="P:System.Windows.Data.Binding.RelativeSource" />
        <element api="P:System.Windows.Data.Binding.Source" />
        <element api="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
        <element api="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
        <element api="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
        <element api="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
        <element api="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
        <element api="P:System.Windows.Data.Binding.ValidationRules" />
        <element api="P:System.Windows.Data.Binding.XPath" />
        <element api="P:System.Windows.Data.BindingBase.BindingGroupName" />
        <element api="P:System.Windows.Data.BindingBase.Delay" />
        <element api="P:System.Windows.Data.BindingBase.FallbackValue" />
        <element api="P:System.Windows.Data.BindingBase.StringFormat" />
        <element api="P:System.Windows.Data.BindingBase.TargetNullValue" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Data.Binding">
      <topicdata name="Binding" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Data.Binding" />
      <apidata name="Binding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.Binding.#ctor" />
      <elements>
        <element api="F:System.Windows.Data.Binding.DoNothing" />
        <element api="F:System.Windows.Data.Binding.IndexerName" />
        <element api="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
        <element api="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
        <element api="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" />
      </containers>
    </api>
    <api id="AttachedProperties.T:System.Windows.Data.Binding">
      <topicdata name="Binding" group="list" subgroup="AttachedProperties" subsubgroup="AttachedProperties" typeTopicId="T:System.Windows.Data.Binding" />
      <apidata name="Binding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.Binding.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" />
      </containers>
    </api>
    <api id="AttachedEvents.T:System.Windows.Data.Binding">
      <topicdata name="Binding" group="list" subgroup="AttachedEvents" subsubgroup="AttachedEvents" typeTopicId="T:System.Windows.Data.Binding" />
      <apidata name="Binding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.Binding.#ctor" />
      <elements>
        <element api="E:System.Windows.Data.Binding.SourceUpdated" />
        <element api="E:System.Windows.Data.Binding.TargetUpdated" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.Binding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Data.Binding.#ctor" />
        <element api="M:System.Windows.Data.Binding.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.Binding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.Binding.#ctor" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.Binding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.Binding.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <topicdata group="api" />
      <apidata name="AddSourceUpdatedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <topicdata group="api" />
      <apidata name="AddTargetUpdatedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.Binding.AsyncState">
      <topicdata group="api" />
      <apidata name="AsyncState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AsyncState" />
      <setter name="set_AsyncState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.BindsDirectlyToSource">
      <topicdata group="api" />
      <apidata name="BindsDirectlyToSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BindsDirectlyToSource" />
      <setter name="set_BindsDirectlyToSource" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.Converter">
      <topicdata group="api" />
      <apidata name="Converter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Converter" />
      <setter name="set_Converter" />
      <returns>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.ConverterCulture">
      <topicdata group="api" />
      <apidata name="ConverterCulture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConverterCulture" />
      <setter name="set_ConverterCulture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.CultureInfoIetfLanguageTagConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.ConverterParameter">
      <topicdata group="api" />
      <apidata name="ConverterParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConverterParameter" />
      <setter name="set_ConverterParameter" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Windows.Data.Binding.DoNothing">
      <topicdata group="api" />
      <apidata name="DoNothing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.Binding.ElementName">
      <topicdata group="api" />
      <apidata name="ElementName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ElementName" />
      <setter name="set_ElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
      <topicdata group="api" />
      <apidata name="GetXmlNamespaceManager" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.Binding.IndexerName">
      <topicdata group="api" />
      <apidata name="IndexerName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Item[]</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.Binding.IsAsync">
      <topicdata group="api" />
      <apidata name="IsAsync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsAsync" />
      <setter name="set_IsAsync" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.Data.BindingMode" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
      <topicdata group="api" />
      <apidata name="NotifyOnSourceUpdated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotifyOnSourceUpdated" />
      <setter name="set_NotifyOnSourceUpdated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
      <topicdata group="api" />
      <apidata name="NotifyOnTargetUpdated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotifyOnTargetUpdated" />
      <setter name="set_NotifyOnTargetUpdated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.NotifyOnValidationError">
      <topicdata group="api" />
      <apidata name="NotifyOnValidationError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotifyOnValidationError" />
      <setter name="set_NotifyOnValidationError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.Windows.PropertyPath" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.Binding.RelativeSource">
      <topicdata group="api" />
      <apidata name="RelativeSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RelativeSource" />
      <setter name="set_RelativeSource" />
      <returns>
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <topicdata group="api" />
      <apidata name="RemoveSourceUpdatedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
      <topicdata group="api" />
      <apidata name="RemoveTargetUpdatedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
      <topicdata group="api" />
      <apidata name="SetXmlNamespaceManager" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.Binding.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.Binding.SourceUpdated">
      <topicdata group="api" />
      <apidata name="SourceUpdated" group="member" subgroup="event" subsubgroup="attachedEvent" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SourceUpdated" />
      <remover name="remove_SourceUpdated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attachedeventdata>
        <field>
          <member api="F:System.Windows.Data.Binding.SourceUpdatedEvent">
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </member>
        </field>
        <adder>
          <member api="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </member>
        </adder>
        <remover>
          <member api="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </member>
        </remover>
      </attachedeventdata>
    </api>
    <api id="F:System.Windows.Data.Binding.SourceUpdatedEvent">
      <topicdata group="api" />
      <apidata name="SourceUpdatedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.Binding.TargetUpdated">
      <topicdata group="api" />
      <apidata name="TargetUpdated" group="member" subgroup="event" subsubgroup="attachedEvent" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_TargetUpdated" />
      <remover name="remove_TargetUpdated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attachedeventdata>
        <field>
          <member api="F:System.Windows.Data.Binding.TargetUpdatedEvent">
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </member>
        </field>
        <adder>
          <member api="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </member>
        </adder>
        <remover>
          <member api="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </member>
        </remover>
      </attachedeventdata>
    </api>
    <api id="F:System.Windows.Data.Binding.TargetUpdatedEvent">
      <topicdata group="api" />
      <apidata name="TargetUpdatedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
      <topicdata group="api" />
      <apidata name="UpdateSourceExceptionFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateSourceExceptionFilter" />
      <setter name="set_UpdateSourceExceptionFilter" />
      <returns>
        <type api="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.UpdateSourceTrigger">
      <topicdata group="api" />
      <apidata name="UpdateSourceTrigger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateSourceTrigger" />
      <setter name="set_UpdateSourceTrigger" />
      <returns>
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.ValidatesOnDataErrors">
      <topicdata group="api" />
      <apidata name="ValidatesOnDataErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidatesOnDataErrors" />
      <setter name="set_ValidatesOnDataErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.ValidatesOnExceptions">
      <topicdata group="api" />
      <apidata name="ValidatesOnExceptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidatesOnExceptions" />
      <setter name="set_ValidatesOnExceptions" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors">
      <topicdata group="api" />
      <apidata name="ValidatesOnNotifyDataErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidatesOnNotifyDataErrors" />
      <setter name="set_ValidatesOnNotifyDataErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.Binding.ValidationRules">
      <topicdata group="api" />
      <apidata name="ValidationRules" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationRules" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Controls.ValidationRule" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.Binding.XmlNamespaceManager">
      <topicdata group="api" />
      <apidata name="XmlNamespaceManager" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlNamespaceManager" />
      <setter name="set_XmlNamespaceManager" />
      <returns>
        <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
            <type api="T:System.Windows.Data.Binding" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
    </api>
    <api id="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
      <topicdata group="api" />
      <apidata name="XmlNamespaceManagerProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.Binding.XPath">
      <topicdata group="api" />
      <apidata name="XPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XPath" />
      <setter name="set_XPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Data.BindingBase">
      <topicdata group="api" />
      <apidata name="BindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Data.Binding" ref="true" />
          <type api="T:System.Windows.Data.MultiBinding" ref="true" />
          <type api="T:System.Windows.Data.PriorityBinding" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
        <element api="P:System.Windows.Data.BindingBase.BindingGroupName" />
        <element api="P:System.Windows.Data.BindingBase.Delay" />
        <element api="P:System.Windows.Data.BindingBase.FallbackValue" />
        <element api="P:System.Windows.Data.BindingBase.StringFormat" />
        <element api="P:System.Windows.Data.BindingBase.TargetNullValue" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Object" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.LocalizabilityAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.LocalizationCategory" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
          <assignment name="Modifiability">
            <type api="T:System.Windows.Modifiability" ref="false" />
            <enumValue>
              <field name="Unmodifiable" />
            </enumValue>
          </assignment>
          <assignment name="Readability">
            <type api="T:System.Windows.Readability" ref="false" />
            <enumValue>
              <field name="Unreadable" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Data.BindingBase">
      <topicdata name="BindingBase" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.BindingBase" />
      <apidata name="BindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingBase" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.BindingBase">
      <topicdata name="BindingBase" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.BindingBase" />
      <apidata name="BindingBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.BindingBase.BindingGroupName" />
        <element api="P:System.Windows.Data.BindingBase.Delay" />
        <element api="P:System.Windows.Data.BindingBase.FallbackValue" />
        <element api="P:System.Windows.Data.BindingBase.StringFormat" />
        <element api="P:System.Windows.Data.BindingBase.TargetNullValue" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingBase" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingBase.BindingGroupName">
      <topicdata group="api" />
      <apidata name="BindingGroupName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BindingGroupName" />
      <setter name="set_BindingGroupName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.BindingBase.Delay">
      <topicdata group="api" />
      <apidata name="Delay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Delay" />
      <setter name="set_Delay" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.BindingBase.FallbackValue">
      <topicdata group="api" />
      <apidata name="FallbackValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FallbackValue" />
      <setter name="set_FallbackValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="ProvideValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingBase.StringFormat">
      <topicdata group="api" />
      <apidata name="StringFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StringFormat" />
      <setter name="set_StringFormat" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.BindingBase.TargetNullValue">
      <topicdata group="api" />
      <apidata name="TargetNullValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetNullValue" />
      <setter name="set_TargetNullValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.BindingExpression">
      <topicdata group="api" />
      <apidata name="BindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          <type api="T:System.Windows.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.IWeakEventListener" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.BindingExpression.UpdateSource" />
        <element api="M:System.Windows.Data.BindingExpression.UpdateTarget" />
        <element api="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
        <element api="P:System.Windows.Data.BindingExpression.DataItem" />
        <element api="P:System.Windows.Data.BindingExpression.ParentBinding" />
        <element api="P:System.Windows.Data.BindingExpression.ResolvedSource" />
        <element api="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
        <element api="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Status" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Target" />
        <element api="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.BindingExpression">
      <topicdata name="BindingExpression" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.BindingExpression" />
      <apidata name="BindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.BindingExpression.UpdateSource" />
        <element api="M:System.Windows.Data.BindingExpression.UpdateTarget" />
        <element api="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpression" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.BindingExpression">
      <topicdata name="BindingExpression" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.BindingExpression" />
      <apidata name="BindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.BindingExpression.DataItem" />
        <element api="P:System.Windows.Data.BindingExpression.ParentBinding" />
        <element api="P:System.Windows.Data.BindingExpression.ResolvedSource" />
        <element api="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
        <element api="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Status" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Target" />
        <element api="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpression" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpression.DataItem">
      <topicdata group="api" />
      <apidata name="DataItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpression.ParentBinding">
      <topicdata group="api" />
      <apidata name="ParentBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParentBinding" />
      <returns>
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpression.ResolvedSource">
      <topicdata group="api" />
      <apidata name="ResolvedSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResolvedSource" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName">
      <topicdata group="api" />
      <apidata name="ResolvedSourcePropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResolvedSourcePropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <topicdata group="api" eiiName="IWeakEventListener.ReceiveWeakEvent" />
      <apidata name="ReceiveWeakEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="managerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingExpression.UpdateSource">
      <topicdata group="api" />
      <apidata name="UpdateSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingExpression.UpdateTarget">
      <topicdata group="api" />
      <apidata name="UpdateTarget" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpression" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.BindingExpressionBase">
      <topicdata group="api" />
      <apidata name="BindingExpressionBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Data.BindingExpression" ref="true" />
          <type api="T:System.Windows.Data.MultiBindingExpression" ref="true" />
          <type api="T:System.Windows.Data.PriorityBindingExpression" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Windows.IWeakEventListener" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.BindingExpressionBase.UpdateSource" />
        <element api="M:System.Windows.Data.BindingExpressionBase.UpdateTarget" />
        <element api="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
        <element api="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Status" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Target" />
        <element api="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.BindingExpressionBase">
      <topicdata name="BindingExpressionBase" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.BindingExpressionBase" />
      <apidata name="BindingExpressionBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.BindingExpressionBase.UpdateSource" />
        <element api="M:System.Windows.Data.BindingExpressionBase.UpdateTarget" />
        <element api="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.BindingExpressionBase">
      <topicdata name="BindingExpressionBase" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.BindingExpressionBase" />
      <apidata name="BindingExpressionBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Status" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Target" />
        <element api="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.BindingGroup">
      <topicdata group="api" />
      <apidata name="BindingGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BindingGroup" />
      <returns>
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.HasError">
      <topicdata group="api" />
      <apidata name="HasError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.HasValidationError">
      <topicdata group="api" />
      <apidata name="HasValidationError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasValidationError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.IsDirty">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase">
      <topicdata group="api" />
      <apidata name="ParentBindingBase" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParentBindingBase" />
      <returns>
        <type api="T:System.Windows.Data.BindingBase" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Status" />
      <returns>
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <topicdata group="api" eiiName="IWeakEventListener.ReceiveWeakEvent" />
      <apidata name="ReceiveWeakEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="managerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.Target">
      <topicdata group="api" />
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Target" />
      <returns>
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.TargetProperty">
      <topicdata group="api" />
      <apidata name="TargetProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetProperty" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
      <topicdata group="api" />
      <apidata name="UpdateSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
      <topicdata group="api" />
      <apidata name="UpdateTarget" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate">
      <topicdata group="api" />
      <apidata name="ValidateWithoutUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.ValidationError">
      <topicdata group="api" />
      <apidata name="ValidationError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValidationError" />
      <returns>
        <type api="T:System.Windows.Controls.ValidationError" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingExpressionBase.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Controls.ValidationError" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.BindingGroup">
      <topicdata group="api" />
      <apidata name="BindingGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.BindingGroup.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingGroup.#ctor" />
        <element api="M:System.Windows.Data.BindingGroup.BeginEdit" />
        <element api="M:System.Windows.Data.BindingGroup.CancelEdit" />
        <element api="M:System.Windows.Data.BindingGroup.CommitEdit" />
        <element api="Overload:System.Windows.Data.BindingGroup.GetValue">
          <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
        </element>
        <element api="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
        <element api="M:System.Windows.Data.BindingGroup.UpdateSources" />
        <element api="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
        <element api="Overload:System.Windows.Data.BindingGroup.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Data.BindingGroup.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.Data.BindingGroup.BindingExpressions" />
        <element api="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
        <element api="P:System.Windows.Data.BindingGroup.HasValidationError" />
        <element api="P:System.Windows.Data.BindingGroup.IsDirty" />
        <element api="P:System.Windows.Data.BindingGroup.Items" />
        <element api="P:System.Windows.Data.BindingGroup.Name" />
        <element api="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
        <element api="P:System.Windows.Data.BindingGroup.Owner" />
        <element api="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
        <element api="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
        <element api="P:System.Windows.Data.BindingGroup.ValidationErrors" />
        <element api="P:System.Windows.Data.BindingGroup.ValidationRules" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.BindingGroup">
      <topicdata name="BindingGroup" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.BindingGroup" />
      <apidata name="BindingGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.BindingGroup.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingGroup.BeginEdit" />
        <element api="M:System.Windows.Data.BindingGroup.CancelEdit" />
        <element api="M:System.Windows.Data.BindingGroup.CommitEdit" />
        <element api="Overload:System.Windows.Data.BindingGroup.GetValue">
          <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
        </element>
        <element api="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
        <element api="M:System.Windows.Data.BindingGroup.UpdateSources" />
        <element api="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
        <element api="Overload:System.Windows.Data.BindingGroup.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Data.BindingGroup.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.BindingGroup">
      <topicdata name="BindingGroup" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.BindingGroup" />
      <apidata name="BindingGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.BindingGroup.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.BindingGroup.BindingExpressions" />
        <element api="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
        <element api="P:System.Windows.Data.BindingGroup.HasValidationError" />
        <element api="P:System.Windows.Data.BindingGroup.IsDirty" />
        <element api="P:System.Windows.Data.BindingGroup.Items" />
        <element api="P:System.Windows.Data.BindingGroup.Name" />
        <element api="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
        <element api="P:System.Windows.Data.BindingGroup.Owner" />
        <element api="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
        <element api="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
        <element api="P:System.Windows.Data.BindingGroup.ValidationErrors" />
        <element api="P:System.Windows.Data.BindingGroup.ValidationRules" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.BindingGroup.GetValue">
      <topicdata name="GetValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingGroup.BeginEdit">
      <topicdata group="api" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.BindingExpressions">
      <topicdata group="api" />
      <apidata name="BindingExpressions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BindingExpressions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingGroup.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.CanRestoreValues">
      <topicdata group="api" />
      <apidata name="CanRestoreValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanRestoreValues" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingGroup.CommitEdit">
      <topicdata group="api" />
      <apidata name="CommitEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Windows.Data.BindingGroup.GetValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.HasValidationError">
      <topicdata group="api" />
      <apidata name="HasValidationError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasValidationError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.IsDirty">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.Items">
      <topicdata group="api" />
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Items" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.NotifyOnValidationError">
      <topicdata group="api" />
      <apidata name="NotifyOnValidationError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotifyOnValidationError" />
      <setter name="set_NotifyOnValidationError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.Owner">
      <topicdata group="api" />
      <apidata name="Owner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Owner" />
      <returns>
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.SharesProposedValues">
      <topicdata group="api" />
      <apidata name="SharesProposedValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SharesProposedValues" />
      <setter name="set_SharesProposedValues" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)">
      <topicdata group="api" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingGroup.UpdateSources">
      <topicdata group="api" />
      <apidata name="UpdateSources" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError">
      <topicdata group="api" />
      <apidata name="ValidatesOnNotifyDataError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidatesOnNotifyDataError" />
      <setter name="set_ValidatesOnNotifyDataError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate">
      <topicdata group="api" />
      <apidata name="ValidateWithoutUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Controls.ValidationError" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingGroup.ValidationRules">
      <topicdata group="api" />
      <apidata name="ValidationRules" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationRules" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Controls.ValidationRule" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingGroup" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.BindingListCollectionView">
      <topicdata group="api" />
      <apidata name="BindingListCollectionView" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IComparer" ref="true" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        <type api="T:System.ComponentModel.IItemProperties" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Windows.Data.CollectionView.CurrentChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanging" />
        <element api="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingListCollectionView.#ctor(System.ComponentModel.IBindingList)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.AddNew" />
        <element api="M:System.Windows.Data.BindingListCollectionView.CancelEdit" />
        <element api="M:System.Windows.Data.BindingListCollectionView.CancelNew" />
        <element api="M:System.Windows.Data.BindingListCollectionView.CommitEdit" />
        <element api="M:System.Windows.Data.BindingListCollectionView.CommitNew" />
        <element api="M:System.Windows.Data.BindingListCollectionView.Contains(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.DetachFromSourceCollection" />
        <element api="M:System.Windows.Data.BindingListCollectionView.EditItem(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.GetItemAt(System.Int32)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.IndexOf(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.MoveCurrentToPosition(System.Int32)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.PassesFilter(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.Remove(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.DeferRefresh" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToFirst" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToLast" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToNext" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious" />
        <element api="M:System.Windows.Data.CollectionView.Refresh" />
        <element api="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanAddNew" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanCancelEdit" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveFiltering" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveGrouping" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveSorting" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanCustomFilter" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanFilter" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanGroup" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanRemove" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanSort" />
        <element api="P:System.Windows.Data.BindingListCollectionView.Count" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CurrentAddItem" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CurrentEditItem" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CustomFilter" />
        <element api="P:System.Windows.Data.BindingListCollectionView.GroupBySelector" />
        <element api="P:System.Windows.Data.BindingListCollectionView.GroupDescriptions" />
        <element api="P:System.Windows.Data.BindingListCollectionView.Groups" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsAddingNew" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsDataInGroupOrder" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsEditingItem" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsEmpty" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting" />
        <element api="P:System.Windows.Data.BindingListCollectionView.ItemProperties" />
        <element api="P:System.Windows.Data.BindingListCollectionView.LiveFilteringProperties" />
        <element api="P:System.Windows.Data.BindingListCollectionView.LiveGroupingProperties" />
        <element api="P:System.Windows.Data.BindingListCollectionView.LiveSortingProperties" />
        <element api="P:System.Windows.Data.BindingListCollectionView.NewItemPlaceholderPosition" />
        <element api="P:System.Windows.Data.BindingListCollectionView.SortDescriptions" />
        <element api="P:System.Windows.Data.CollectionView.Comparer" />
        <element api="P:System.Windows.Data.CollectionView.Culture" />
        <element api="P:System.Windows.Data.CollectionView.CurrentItem" />
        <element api="P:System.Windows.Data.CollectionView.CurrentPosition" />
        <element api="P:System.Windows.Data.CollectionView.Filter" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentAfterLast" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst" />
        <element api="P:System.Windows.Data.CollectionView.IsInUse" />
        <element api="P:System.Windows.Data.CollectionView.NeedsRefresh" />
        <element api="P:System.Windows.Data.CollectionView.SourceCollection" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.BindingListCollectionView">
      <topicdata name="BindingListCollectionView" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.BindingListCollectionView" />
      <apidata name="BindingListCollectionView" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingListCollectionView.AddNew" />
        <element api="M:System.Windows.Data.BindingListCollectionView.CancelEdit" />
        <element api="M:System.Windows.Data.BindingListCollectionView.CancelNew" />
        <element api="M:System.Windows.Data.BindingListCollectionView.CommitEdit" />
        <element api="M:System.Windows.Data.BindingListCollectionView.CommitNew" />
        <element api="M:System.Windows.Data.BindingListCollectionView.Contains(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.DetachFromSourceCollection" />
        <element api="M:System.Windows.Data.BindingListCollectionView.EditItem(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.GetItemAt(System.Int32)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.IndexOf(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.MoveCurrentToPosition(System.Int32)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.PassesFilter(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.Remove(System.Object)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.Data.BindingListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.DeferRefresh" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToFirst" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToLast" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToNext" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious" />
        <element api="M:System.Windows.Data.CollectionView.Refresh" />
        <element api="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.BindingListCollectionView">
      <topicdata name="BindingListCollectionView" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.BindingListCollectionView" />
      <apidata name="BindingListCollectionView" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.BindingListCollectionView.CanAddNew" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanCancelEdit" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveFiltering" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveGrouping" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveSorting" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanCustomFilter" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanFilter" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanGroup" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanRemove" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CanSort" />
        <element api="P:System.Windows.Data.BindingListCollectionView.Count" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CurrentAddItem" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CurrentEditItem" />
        <element api="P:System.Windows.Data.BindingListCollectionView.CustomFilter" />
        <element api="P:System.Windows.Data.BindingListCollectionView.GroupBySelector" />
        <element api="P:System.Windows.Data.BindingListCollectionView.GroupDescriptions" />
        <element api="P:System.Windows.Data.BindingListCollectionView.Groups" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsAddingNew" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsDataInGroupOrder" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsEditingItem" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsEmpty" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping" />
        <element api="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting" />
        <element api="P:System.Windows.Data.BindingListCollectionView.ItemProperties" />
        <element api="P:System.Windows.Data.BindingListCollectionView.LiveFilteringProperties" />
        <element api="P:System.Windows.Data.BindingListCollectionView.LiveGroupingProperties" />
        <element api="P:System.Windows.Data.BindingListCollectionView.LiveSortingProperties" />
        <element api="P:System.Windows.Data.BindingListCollectionView.NewItemPlaceholderPosition" />
        <element api="P:System.Windows.Data.BindingListCollectionView.SortDescriptions" />
        <element api="P:System.Windows.Data.CollectionView.Comparer" />
        <element api="P:System.Windows.Data.CollectionView.Culture" />
        <element api="P:System.Windows.Data.CollectionView.CurrentItem" />
        <element api="P:System.Windows.Data.CollectionView.CurrentPosition" />
        <element api="P:System.Windows.Data.CollectionView.Filter" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentAfterLast" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst" />
        <element api="P:System.Windows.Data.CollectionView.IsInUse" />
        <element api="P:System.Windows.Data.CollectionView.NeedsRefresh" />
        <element api="P:System.Windows.Data.CollectionView.SourceCollection" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.BindingListCollectionView">
      <topicdata name="BindingListCollectionView" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.BindingListCollectionView" />
      <apidata name="BindingListCollectionView" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.Data.CollectionView.CurrentChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanging" />
        <element api="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.#ctor(System.ComponentModel.IBindingList)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="list">
          <type api="T:System.ComponentModel.IBindingList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.AddNew">
      <topicdata group="api" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.AddNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanAddNew">
      <topicdata group="api" />
      <apidata name="CanAddNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanAddNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanCancelEdit">
      <topicdata group="api" />
      <apidata name="CanCancelEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanCancelEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.CancelNew">
      <topicdata group="api" />
      <apidata name="CancelNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.CancelNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveFiltering">
      <topicdata group="api" />
      <apidata name="CanChangeLiveFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveFiltering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveGrouping">
      <topicdata group="api" />
      <apidata name="CanChangeLiveGrouping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveGrouping" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanChangeLiveSorting">
      <topicdata group="api" />
      <apidata name="CanChangeLiveSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanCustomFilter">
      <topicdata group="api" />
      <apidata name="CanCustomFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanCustomFilter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanFilter">
      <topicdata group="api" />
      <apidata name="CanFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.CanFilter">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanFilter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CanFilter">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanGroup">
      <topicdata group="api" />
      <apidata name="CanGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.CanGroup">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanGroup" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CanGroup">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanRemove">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CanRemove">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CanSort">
      <topicdata group="api" />
      <apidata name="CanSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.CanSort">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSort" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CanSort">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.CommitEdit">
      <topicdata group="api" />
      <apidata name="CommitEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.CommitNew">
      <topicdata group="api" />
      <apidata name="CommitNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.CommitNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.Contains(System.Object)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.Count">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CurrentAddItem">
      <topicdata group="api" />
      <apidata name="CurrentAddItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CurrentAddItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CurrentEditItem">
      <topicdata group="api" />
      <apidata name="CurrentEditItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CurrentEditItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.CustomFilter">
      <topicdata group="api" />
      <apidata name="CustomFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomFilter" />
      <setter name="set_CustomFilter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.DetachFromSourceCollection">
      <topicdata group="api" />
      <apidata name="DetachFromSourceCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.DetachFromSourceCollection">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.EditItem(System.Object)">
      <topicdata group="api" />
      <apidata name="EditItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.GetItemAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetItemAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.GroupBySelector">
      <topicdata group="api" />
      <apidata name="GroupBySelector" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupBySelector" />
      <setter name="set_GroupBySelector" />
      <returns>
        <type api="T:System.Windows.Data.GroupDescriptionSelectorCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.GroupDescriptions">
      <topicdata group="api" />
      <apidata name="GroupDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.GroupDescriptions">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_GroupDescriptions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.GroupDescription" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.GroupDescriptions">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.Groups">
      <topicdata group="api" />
      <apidata name="Groups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.Groups">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Groups" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.Groups">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.IndexOf(System.Object)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.IsAddingNew">
      <topicdata group="api" />
      <apidata name="IsAddingNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsAddingNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.IsDataInGroupOrder">
      <topicdata group="api" />
      <apidata name="IsDataInGroupOrder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDataInGroupOrder" />
      <setter name="set_IsDataInGroupOrder" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.IsEditingItem">
      <topicdata group="api" />
      <apidata name="IsEditingItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsEditingItem" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.IsEmpty">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.IsEmpty">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.IsLiveFiltering">
      <topicdata group="api" />
      <apidata name="IsLiveFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveFiltering" />
      <setter name="set_IsLiveFiltering" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.IsLiveGrouping">
      <topicdata group="api" />
      <apidata name="IsLiveGrouping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveGrouping" />
      <setter name="set_IsLiveGrouping" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.IsLiveSorting">
      <topicdata group="api" />
      <apidata name="IsLiveSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveSorting" />
      <setter name="set_IsLiveSorting" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.ItemProperties">
      <topicdata group="api" />
      <apidata name="ItemProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ItemProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.ItemPropertyInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IItemProperties.ItemProperties">
          <type api="T:System.ComponentModel.IItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.LiveFilteringProperties">
      <topicdata group="api" />
      <apidata name="LiveFilteringProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LiveFilteringProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.LiveGroupingProperties">
      <topicdata group="api" />
      <apidata name="LiveGroupingProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LiveGroupingProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.LiveSortingProperties">
      <topicdata group="api" />
      <apidata name="LiveSortingProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LiveSortingProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.MoveCurrentToPosition(System.Int32)">
      <topicdata group="api" />
      <apidata name="MoveCurrentToPosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.NewItemPlaceholderPosition">
      <topicdata group="api" />
      <apidata name="NewItemPlaceholderPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_NewItemPlaceholderPosition" />
      <setter name="set_NewItemPlaceholderPosition" />
      <returns>
        <type api="T:System.ComponentModel.NewItemPlaceholderPosition" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.PassesFilter(System.Object)">
      <topicdata group="api" />
      <apidata name="PassesFilter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingListCollectionView.SortDescriptions">
      <topicdata group="api" />
      <apidata name="SortDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.SortDescriptions">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SortDescriptions" />
      <returns>
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.SortDescriptions">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <topicdata group="api" eiiName="IComparer.Compare" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="o1">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="o2">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IComparer.Compare(System.Object,System.Object)">
          <type api="T:System.Collections.IComparer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.BindingMode">
      <topicdata group="api" />
      <apidata name="BindingMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Data.BindingMode.TwoWay" />
        <element api="F:System.Windows.Data.BindingMode.OneWay" />
        <element api="F:System.Windows.Data.BindingMode.OneTime" />
        <element api="F:System.Windows.Data.BindingMode.OneWayToSource" />
        <element api="F:System.Windows.Data.BindingMode.Default" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingMode.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingMode.OneTime">
      <topicdata group="api" notopic="" />
      <apidata name="OneTime" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingMode.OneWay">
      <topicdata group="api" notopic="" />
      <apidata name="OneWay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingMode.OneWayToSource">
      <topicdata group="api" notopic="" />
      <apidata name="OneWayToSource" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingMode.TwoWay">
      <topicdata group="api" notopic="" />
      <apidata name="TwoWay" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.BindingOperations">
      <topicdata group="api" />
      <apidata name="BindingOperations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
        <element api="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
        <element api="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
        <element api="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
        <element api="Overload:System.Windows.Data.BindingOperations.EnableCollectionSynchronization">
          <element api="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
          <element api="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
        </element>
        <element api="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
        <element api="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.BindingOperations">
      <topicdata name="BindingOperations" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.BindingOperations" />
      <apidata name="BindingOperations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
        <element api="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
        <element api="Overload:System.Windows.Data.BindingOperations.EnableCollectionSynchronization">
          <element api="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
          <element api="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
        </element>
        <element api="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
        <element api="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.BindingOperations">
      <topicdata name="BindingOperations" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.BindingOperations" />
      <apidata name="BindingOperations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.BindingOperations">
      <topicdata name="BindingOperations" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.BindingOperations" />
      <apidata name="BindingOperations" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
        <element api="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.BindingOperations.EnableCollectionSynchronization">
      <topicdata name="EnableCollectionSynchronization" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="EnableCollectionSynchronization" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
        <element api="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AccessCollection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
        <parameter name="accessMethod">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="writeAccess">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
      <topicdata group="api" />
      <apidata name="ClearAllBindings" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="ClearBinding" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.BindingOperations.CollectionRegistering">
      <topicdata group="api" />
      <apidata name="CollectionRegistering" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionRegistering" />
      <remover name="remove_CollectionRegistering" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.CollectionRegisteringEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Data.CollectionRegisteringEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.BindingOperations.CollectionViewRegistering">
      <topicdata group="api" />
      <apidata name="CollectionViewRegistering" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionViewRegistering" />
      <remover name="remove_CollectionViewRegistering" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.CollectionViewRegisteringEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Data.CollectionViewRegisteringEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="DisableCollectionSynchronization" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.BindingOperations.DisconnectedSource">
      <topicdata group="api" />
      <apidata name="DisconnectedSource" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisconnectedSource" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)">
      <topicdata group="api" />
      <apidata name="EnableCollectionSynchronization" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Windows.Data.BindingOperations.EnableCollectionSynchronization" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
        <parameter name="lockObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)">
      <topicdata group="api" />
      <apidata name="EnableCollectionSynchronization" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Windows.Data.BindingOperations.EnableCollectionSynchronization" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="synchronizationCallback">
          <type api="T:System.Windows.Data.CollectionSynchronizationCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetBinding" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.Binding" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetBindingBase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.BindingBase" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetBindingExpression" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.BindingExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetBindingExpressionBase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetMultiBinding" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetMultiBindingExpression" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.MultiBindingExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetPriorityBinding" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.PriorityBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetPriorityBindingExpression" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.PriorityBindingExpression" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)">
      <topicdata group="api" />
      <apidata name="GetSourceUpdatingBindingGroups" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="root">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.BindingGroup" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)">
      <topicdata group="api" />
      <apidata name="GetSourceUpdatingBindings" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="root">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="IsDataBound" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
      <topicdata group="api" />
      <apidata name="SetBinding" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="dp">
          <type api="T:System.Windows.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="binding">
          <type api="T:System.Windows.Data.BindingBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingOperations" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.BindingStatus">
      <topicdata group="api" />
      <apidata name="BindingStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Data.BindingStatus.Unattached" />
        <element api="F:System.Windows.Data.BindingStatus.Inactive" />
        <element api="F:System.Windows.Data.BindingStatus.Active" />
        <element api="F:System.Windows.Data.BindingStatus.Detached" />
        <element api="F:System.Windows.Data.BindingStatus.AsyncRequestPending" />
        <element api="F:System.Windows.Data.BindingStatus.PathError" />
        <element api="F:System.Windows.Data.BindingStatus.UpdateTargetError" />
        <element api="F:System.Windows.Data.BindingStatus.UpdateSourceError" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingStatus.Active">
      <topicdata group="api" notopic="" />
      <apidata name="Active" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingStatus.AsyncRequestPending">
      <topicdata group="api" notopic="" />
      <apidata name="AsyncRequestPending" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingStatus.Detached">
      <topicdata group="api" notopic="" />
      <apidata name="Detached" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingStatus.Inactive">
      <topicdata group="api" notopic="" />
      <apidata name="Inactive" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingStatus.PathError">
      <topicdata group="api" notopic="" />
      <apidata name="PathError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingStatus.Unattached">
      <topicdata group="api" notopic="" />
      <apidata name="Unattached" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingStatus.UpdateSourceError">
      <topicdata group="api" notopic="" />
      <apidata name="UpdateSourceError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.BindingStatus.UpdateTargetError">
      <topicdata group="api" notopic="" />
      <apidata name="UpdateTargetError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.BindingStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.CollectionContainer">
      <topicdata group="api" />
      <apidata name="CollectionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionContainer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        <type api="T:System.Windows.IWeakEventListener" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Windows.Data.CollectionContainer.CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionContainer.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="F:System.Windows.Data.CollectionContainer.CollectionProperty" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionContainer.#ctor" />
        <element api="M:System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="M:System.Windows.Data.CollectionContainer.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.CollectionContainer.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="Overload:System.Windows.Data.CollectionContainer.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Data.CollectionContainer.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.Data.CollectionContainer.Collection" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.CollectionContainer">
      <topicdata name="CollectionContainer" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.CollectionContainer" />
      <apidata name="CollectionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionContainer.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="M:System.Windows.Data.CollectionContainer.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.CollectionContainer.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="Overload:System.Windows.Data.CollectionContainer.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Data.CollectionContainer.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.CollectionContainer">
      <topicdata name="CollectionContainer" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.CollectionContainer" />
      <apidata name="CollectionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionContainer.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.CollectionContainer.Collection" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.CollectionContainer">
      <topicdata name="CollectionContainer" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.CollectionContainer" />
      <apidata name="CollectionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionContainer.#ctor" />
      <elements>
        <element api="E:System.Windows.Data.CollectionContainer.CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionContainer.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Data.CollectionContainer">
      <topicdata name="CollectionContainer" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Data.CollectionContainer" />
      <apidata name="CollectionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionContainer.#ctor" />
      <elements>
        <element api="F:System.Windows.Data.CollectionContainer.CollectionProperty" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionContainer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionContainer.Collection">
      <topicdata group="api" />
      <apidata name="Collection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Collection" />
      <setter name="set_Collection" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionContainer.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionContainer.CollectionProperty">
      <topicdata group="api" />
      <apidata name="CollectionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnContainedCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionContainer.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="ReceiveWeakEvent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="managerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionContainer.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <topicdata group="api" eiiName="INotifyCollectionChanged.CollectionChanged" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <remover name="remove_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionContainer.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <topicdata group="api" eiiName="IWeakEventListener.ReceiveWeakEvent" />
      <apidata name="ReceiveWeakEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="managerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionContainer" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.CollectionRegisteringEventArgs">
      <topicdata group="api" />
      <apidata name="CollectionRegisteringEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.Data.CollectionRegisteringEventArgs.Collection" />
        <element api="P:System.Windows.Data.CollectionRegisteringEventArgs.Parent" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.CollectionRegisteringEventArgs">
      <topicdata name="CollectionRegisteringEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.CollectionRegisteringEventArgs" />
      <apidata name="CollectionRegisteringEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionRegisteringEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.CollectionRegisteringEventArgs">
      <topicdata name="CollectionRegisteringEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.CollectionRegisteringEventArgs" />
      <apidata name="CollectionRegisteringEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.CollectionRegisteringEventArgs.Collection" />
        <element api="P:System.Windows.Data.CollectionRegisteringEventArgs.Parent" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionRegisteringEventArgs" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionRegisteringEventArgs.Collection">
      <topicdata group="api" />
      <apidata name="Collection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Collection" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionRegisteringEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionRegisteringEventArgs.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionRegisteringEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.CollectionSynchronizationCallback">
      <topicdata group="api" />
      <apidata name="CollectionSynchronizationCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="accessMethod">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="writeAccess">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.CollectionView">
      <topicdata group="api" />
      <apidata name="CollectionView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Data.BindingListCollectionView" ref="true" />
          <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
          <type api="T:System.Windows.Controls.ItemCollection" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Data.CollectionView.CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanging" />
        <element api="E:System.Windows.Data.CollectionView.PropertyChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)" />
        <element api="M:System.Windows.Data.CollectionView.ClearChangeLog" />
        <element api="M:System.Windows.Data.CollectionView.ClearPendingChanges" />
        <element api="M:System.Windows.Data.CollectionView.Contains(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.DeferRefresh" />
        <element api="M:System.Windows.Data.CollectionView.DetachFromSourceCollection" />
        <element api="M:System.Windows.Data.CollectionView.GetEnumerator" />
        <element api="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)" />
        <element api="M:System.Windows.Data.CollectionView.IndexOf(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToFirst" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToLast" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToNext" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious" />
        <element api="M:System.Windows.Data.CollectionView.OKToChangeCurrent" />
        <element api="M:System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged" />
        <element api="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="Overload:System.Windows.Data.CollectionView.OnCollectionChanged">
          <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
          <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.OnCurrentChanged" />
        <element api="Overload:System.Windows.Data.CollectionView.OnCurrentChanging">
          <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging" />
          <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="M:System.Windows.Data.CollectionView.ProcessPendingChanges" />
        <element api="M:System.Windows.Data.CollectionView.Refresh" />
        <element api="M:System.Windows.Data.CollectionView.RefreshOrDefer" />
        <element api="M:System.Windows.Data.CollectionView.RefreshOverride" />
        <element api="Overload:System.Windows.Data.CollectionView.SetCurrent">
          <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)" />
          <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" />
        <element api="P:System.Windows.Data.CollectionView.CanFilter" />
        <element api="P:System.Windows.Data.CollectionView.CanGroup" />
        <element api="P:System.Windows.Data.CollectionView.CanSort" />
        <element api="P:System.Windows.Data.CollectionView.Comparer" />
        <element api="P:System.Windows.Data.CollectionView.Count" />
        <element api="P:System.Windows.Data.CollectionView.Culture" />
        <element api="P:System.Windows.Data.CollectionView.CurrentItem" />
        <element api="P:System.Windows.Data.CollectionView.CurrentPosition" />
        <element api="P:System.Windows.Data.CollectionView.Filter" />
        <element api="P:System.Windows.Data.CollectionView.GroupDescriptions" />
        <element api="P:System.Windows.Data.CollectionView.Groups" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentAfterLast" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentInSync" />
        <element api="P:System.Windows.Data.CollectionView.IsDynamic" />
        <element api="P:System.Windows.Data.CollectionView.IsEmpty" />
        <element api="P:System.Windows.Data.CollectionView.IsInUse" />
        <element api="P:System.Windows.Data.CollectionView.IsRefreshDeferred" />
        <element api="P:System.Windows.Data.CollectionView.NeedsRefresh" />
        <element api="P:System.Windows.Data.CollectionView.NewItemPlaceholder" />
        <element api="P:System.Windows.Data.CollectionView.SortDescriptions" />
        <element api="P:System.Windows.Data.CollectionView.SourceCollection" />
        <element api="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.CollectionView">
      <topicdata name="CollectionView" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.CollectionView" />
      <apidata name="CollectionView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionView.ClearChangeLog" />
        <element api="M:System.Windows.Data.CollectionView.ClearPendingChanges" />
        <element api="M:System.Windows.Data.CollectionView.Contains(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.DeferRefresh" />
        <element api="M:System.Windows.Data.CollectionView.DetachFromSourceCollection" />
        <element api="M:System.Windows.Data.CollectionView.GetEnumerator" />
        <element api="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)" />
        <element api="M:System.Windows.Data.CollectionView.IndexOf(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToFirst" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToLast" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToNext" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious" />
        <element api="M:System.Windows.Data.CollectionView.OKToChangeCurrent" />
        <element api="M:System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged" />
        <element api="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="Overload:System.Windows.Data.CollectionView.OnCollectionChanged">
          <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
          <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.OnCurrentChanged" />
        <element api="Overload:System.Windows.Data.CollectionView.OnCurrentChanging">
          <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging" />
          <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="M:System.Windows.Data.CollectionView.ProcessPendingChanges" />
        <element api="M:System.Windows.Data.CollectionView.Refresh" />
        <element api="M:System.Windows.Data.CollectionView.RefreshOrDefer" />
        <element api="M:System.Windows.Data.CollectionView.RefreshOverride" />
        <element api="Overload:System.Windows.Data.CollectionView.SetCurrent">
          <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)" />
          <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.CollectionView">
      <topicdata name="CollectionView" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.CollectionView" />
      <apidata name="CollectionView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" />
        <element api="P:System.Windows.Data.CollectionView.CanFilter" />
        <element api="P:System.Windows.Data.CollectionView.CanGroup" />
        <element api="P:System.Windows.Data.CollectionView.CanSort" />
        <element api="P:System.Windows.Data.CollectionView.Comparer" />
        <element api="P:System.Windows.Data.CollectionView.Count" />
        <element api="P:System.Windows.Data.CollectionView.Culture" />
        <element api="P:System.Windows.Data.CollectionView.CurrentItem" />
        <element api="P:System.Windows.Data.CollectionView.CurrentPosition" />
        <element api="P:System.Windows.Data.CollectionView.Filter" />
        <element api="P:System.Windows.Data.CollectionView.GroupDescriptions" />
        <element api="P:System.Windows.Data.CollectionView.Groups" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentAfterLast" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentInSync" />
        <element api="P:System.Windows.Data.CollectionView.IsDynamic" />
        <element api="P:System.Windows.Data.CollectionView.IsEmpty" />
        <element api="P:System.Windows.Data.CollectionView.IsInUse" />
        <element api="P:System.Windows.Data.CollectionView.IsRefreshDeferred" />
        <element api="P:System.Windows.Data.CollectionView.NeedsRefresh" />
        <element api="P:System.Windows.Data.CollectionView.NewItemPlaceholder" />
        <element api="P:System.Windows.Data.CollectionView.SortDescriptions" />
        <element api="P:System.Windows.Data.CollectionView.SourceCollection" />
        <element api="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.CollectionView">
      <topicdata name="CollectionView" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.CollectionView" />
      <apidata name="CollectionView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Windows.Data.CollectionView.CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanging" />
        <element api="E:System.Windows.Data.CollectionView.PropertyChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.CollectionView.OnCollectionChanged">
      <topicdata name="OnCollectionChanged" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnCollectionChanged" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.CollectionView.OnCurrentChanging">
      <topicdata name="OnCurrentChanging" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnCurrentChanging" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging" />
        <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.CollectionView.SetCurrent">
      <topicdata name="SetCurrent" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetCurrent" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)" />
        <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges">
      <topicdata group="api" />
      <apidata name="AllowsCrossThreadChanges" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllowsCrossThreadChanges" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.CanFilter">
      <topicdata group="api" />
      <apidata name="CanFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanFilter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CanFilter">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.CanGroup">
      <topicdata group="api" />
      <apidata name="CanGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanGroup" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CanGroup">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.CanSort">
      <topicdata group="api" />
      <apidata name="CanSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanSort" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CanSort">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.ClearChangeLog">
      <topicdata group="api" />
      <apidata name="ClearChangeLog" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Replaced by ClearPendingChanges</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.CollectionView.ClearPendingChanges">
      <topicdata group="api" />
      <apidata name="ClearPendingChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionView.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.Comparer">
      <topicdata group="api" />
      <apidata name="Comparer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Comparer" />
      <returns>
        <type api="T:System.Collections.IComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Culture" />
      <setter name="set_Culture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.Culture">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.CultureInfoIetfLanguageTagConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Windows.Data.CollectionView.CurrentChanged">
      <topicdata group="api" />
      <apidata name="CurrentChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CurrentChanged" />
      <remover name="remove_CurrentChanged" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.ICollectionView.CurrentChanged">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionView.CurrentChanging">
      <topicdata group="api" />
      <apidata name="CurrentChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CurrentChanging" />
      <remover name="remove_CurrentChanging" />
      <eventhandler>
        <type api="T:System.ComponentModel.CurrentChangingEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.ICollectionView.CurrentChanging">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.CurrentItem">
      <topicdata group="api" />
      <apidata name="CurrentItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CurrentItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CurrentItem">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.CurrentPosition">
      <topicdata group="api" />
      <apidata name="CurrentPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CurrentPosition" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CurrentPosition">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.DeferRefresh">
      <topicdata group="api" />
      <apidata name="DeferRefresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.DeferRefresh">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.DetachFromSourceCollection">
      <topicdata group="api" />
      <apidata name="DetachFromSourceCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter" />
      <setter name="set_Filter" />
      <returns>
        <type api="T:System.Predicate`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.Filter">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetItemAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.GroupDescriptions">
      <topicdata group="api" />
      <apidata name="GroupDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_GroupDescriptions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.GroupDescription" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.GroupDescriptions">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.Groups">
      <topicdata group="api" />
      <apidata name="Groups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Groups" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.Groups">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.IsCurrentAfterLast">
      <topicdata group="api" />
      <apidata name="IsCurrentAfterLast" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsCurrentAfterLast" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.IsCurrentAfterLast">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst">
      <topicdata group="api" />
      <apidata name="IsCurrentBeforeFirst" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsCurrentBeforeFirst" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.IsCurrentBeforeFirst">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.IsCurrentInSync">
      <topicdata group="api" />
      <apidata name="IsCurrentInSync" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCurrentInSync" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.IsDynamic">
      <topicdata group="api" />
      <apidata name="IsDynamic" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDynamic" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.IsEmpty">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.IsInUse">
      <topicdata group="api" />
      <apidata name="IsInUse" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsInUse" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.IsRefreshDeferred">
      <topicdata group="api" />
      <apidata name="IsRefreshDeferred" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRefreshDeferred" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)">
      <topicdata group="api" />
      <apidata name="MoveCurrentTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.MoveCurrentTo(System.Object)">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.MoveCurrentToFirst">
      <topicdata group="api" />
      <apidata name="MoveCurrentToFirst" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.MoveCurrentToFirst">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.MoveCurrentToLast">
      <topicdata group="api" />
      <apidata name="MoveCurrentToLast" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.MoveCurrentToLast">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.MoveCurrentToNext">
      <topicdata group="api" />
      <apidata name="MoveCurrentToNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.MoveCurrentToNext">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)">
      <topicdata group="api" />
      <apidata name="MoveCurrentToPosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious">
      <topicdata group="api" />
      <apidata name="MoveCurrentToPrevious" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.MoveCurrentToPrevious">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.NeedsRefresh">
      <topicdata group="api" />
      <apidata name="NeedsRefresh" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_NeedsRefresh" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.NewItemPlaceholder">
      <topicdata group="api" />
      <apidata name="NewItemPlaceholder" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewItemPlaceholder" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.OKToChangeCurrent">
      <topicdata group="api" />
      <apidata name="OKToChangeCurrent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged">
      <topicdata group="api" />
      <apidata name="OnAllowsCrossThreadChangesChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnBeginChangeLogging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Replaced by OnAllowsCrossThreadChangesChanged</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Data.CollectionView.OnCollectionChanged" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Data.CollectionView.OnCollectionChanged" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.OnCurrentChanged">
      <topicdata group="api" />
      <apidata name="OnCurrentChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.OnCurrentChanging">
      <topicdata group="api" />
      <apidata name="OnCurrentChanging" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Data.CollectionView.OnCurrentChanging" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
      <topicdata group="api" />
      <apidata name="OnCurrentChanging" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Data.CollectionView.OnCurrentChanging" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.ComponentModel.CurrentChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)">
      <topicdata group="api" />
      <apidata name="PassesFilter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="ProcessCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.ProcessPendingChanges">
      <topicdata group="api" />
      <apidata name="ProcessPendingChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionView.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.Refresh">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.RefreshOrDefer">
      <topicdata group="api" />
      <apidata name="RefreshOrDefer" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.RefreshOverride">
      <topicdata group="api" />
      <apidata name="RefreshOverride" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetCurrent" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Data.CollectionView.SetCurrent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetCurrent" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Data.CollectionView.SetCurrent" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newPosition">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.SortDescriptions">
      <topicdata group="api" />
      <apidata name="SortDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SortDescriptions" />
      <returns>
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.SortDescriptions">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.SourceCollection">
      <topicdata group="api" />
      <apidata name="SourceCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SourceCollection" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.SourceCollection">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <topicdata group="api" eiiName="INotifyCollectionChanged.CollectionChanged" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <remover name="remove_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <topicdata group="api" eiiName="INotifyPropertyChanged.PropertyChanged" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <remover name="remove_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher">
      <topicdata group="api" />
      <apidata name="UpdatedOutsideDispatcher" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UpdatedOutsideDispatcher" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.CollectionViewGroup">
      <topicdata group="api" />
      <apidata name="CollectionViewGroup" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Windows.Data.CollectionViewGroup.PropertyChanged" />
        <element api="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)" />
        <element api="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel" />
        <element api="P:System.Windows.Data.CollectionViewGroup.ItemCount" />
        <element api="P:System.Windows.Data.CollectionViewGroup.Items" />
        <element api="P:System.Windows.Data.CollectionViewGroup.Name" />
        <element api="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount" />
        <element api="P:System.Windows.Data.CollectionViewGroup.ProtectedItems" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.CollectionViewGroup">
      <topicdata name="CollectionViewGroup" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.CollectionViewGroup" />
      <apidata name="CollectionViewGroup" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.CollectionViewGroup">
      <topicdata name="CollectionViewGroup" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.CollectionViewGroup" />
      <apidata name="CollectionViewGroup" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel" />
        <element api="P:System.Windows.Data.CollectionViewGroup.ItemCount" />
        <element api="P:System.Windows.Data.CollectionViewGroup.Items" />
        <element api="P:System.Windows.Data.CollectionViewGroup.Name" />
        <element api="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount" />
        <element api="P:System.Windows.Data.CollectionViewGroup.ProtectedItems" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.CollectionViewGroup">
      <topicdata name="CollectionViewGroup" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.CollectionViewGroup" />
      <apidata name="CollectionViewGroup" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.Data.CollectionViewGroup.PropertyChanged" />
        <element api="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
      <topicdata group="api" />
      <apidata name="IsBottomLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsBottomLevel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewGroup.ItemCount">
      <topicdata group="api" />
      <apidata name="ItemCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ItemCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewGroup.Items">
      <topicdata group="api" />
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Items" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewGroup.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
      <topicdata group="api" />
      <apidata name="ProtectedItemCount" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtectedItemCount" />
      <setter name="set_ProtectedItemCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
      <topicdata group="api" />
      <apidata name="ProtectedItems" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProtectedItems" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionViewGroup.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <topicdata group="api" eiiName="INotifyPropertyChanged.PropertyChanged" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <remover name="remove_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.CollectionViewRegisteringEventArgs">
      <topicdata group="api" />
      <apidata name="CollectionViewRegisteringEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.Data.CollectionViewRegisteringEventArgs.CollectionView" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.CollectionViewRegisteringEventArgs">
      <topicdata name="CollectionViewRegisteringEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.CollectionViewRegisteringEventArgs" />
      <apidata name="CollectionViewRegisteringEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewRegisteringEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.CollectionViewRegisteringEventArgs">
      <topicdata name="CollectionViewRegisteringEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.CollectionViewRegisteringEventArgs" />
      <apidata name="CollectionViewRegisteringEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.CollectionViewRegisteringEventArgs.CollectionView" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewRegisteringEventArgs" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewRegisteringEventArgs.CollectionView">
      <topicdata group="api" />
      <apidata name="CollectionView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CollectionView" />
      <returns>
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewRegisteringEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.CollectionViewSource">
      <topicdata group="api" />
      <apidata name="CollectionViewSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionViewSource.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        <type api="T:System.Windows.IWeakEventListener" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Windows.Data.CollectionViewSource.Filter" />
        <element api="F:System.Windows.Data.CollectionViewSource.CanChangeLiveFilteringProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.CanChangeLiveGroupingProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.CanChangeLiveSortingProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequestedProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequestedProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveSortingProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveSortingRequestedProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.SourceProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.ViewProperty" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionViewSource.#ctor" />
        <element api="M:System.Windows.Data.CollectionViewSource.DeferRefresh" />
        <element api="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)" />
        <element api="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)" />
        <element api="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)" />
        <element api="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)" />
        <element api="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit" />
        <element api="M:System.Windows.Data.CollectionViewSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="Overload:System.Windows.Data.CollectionViewSource.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Data.CollectionViewSource.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
        <element api="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" />
        <element api="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" />
        <element api="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" />
        <element api="P:System.Windows.Data.CollectionViewSource.CollectionViewType" />
        <element api="P:System.Windows.Data.CollectionViewSource.Culture" />
        <element api="P:System.Windows.Data.CollectionViewSource.GroupDescriptions" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" />
        <element api="P:System.Windows.Data.CollectionViewSource.LiveFilteringProperties" />
        <element api="P:System.Windows.Data.CollectionViewSource.LiveGroupingProperties" />
        <element api="P:System.Windows.Data.CollectionViewSource.LiveSortingProperties" />
        <element api="P:System.Windows.Data.CollectionViewSource.SortDescriptions" />
        <element api="P:System.Windows.Data.CollectionViewSource.Source" />
        <element api="P:System.Windows.Data.CollectionViewSource.View" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.CollectionViewSource">
      <topicdata name="CollectionViewSource" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.CollectionViewSource" />
      <apidata name="CollectionViewSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionViewSource.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionViewSource.DeferRefresh" />
        <element api="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)" />
        <element api="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)" />
        <element api="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)" />
        <element api="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)" />
        <element api="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit" />
        <element api="M:System.Windows.Data.CollectionViewSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="Overload:System.Windows.Data.CollectionViewSource.ClearValue">
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
          <element api="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
        </element>
        <element api="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.Equals(System.Object)" />
        <element api="M:System.Windows.DependencyObject.GetHashCode" />
        <element api="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <element api="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <element api="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
        <element api="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
        <element api="Overload:System.Windows.Data.CollectionViewSource.SetValue">
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
          <element api="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
        </element>
        <element api="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.CollectionViewSource">
      <topicdata name="CollectionViewSource" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.CollectionViewSource" />
      <apidata name="CollectionViewSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionViewSource.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering" />
        <element api="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping" />
        <element api="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting" />
        <element api="P:System.Windows.Data.CollectionViewSource.CollectionViewType" />
        <element api="P:System.Windows.Data.CollectionViewSource.Culture" />
        <element api="P:System.Windows.Data.CollectionViewSource.GroupDescriptions" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveSorting" />
        <element api="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested" />
        <element api="P:System.Windows.Data.CollectionViewSource.LiveFilteringProperties" />
        <element api="P:System.Windows.Data.CollectionViewSource.LiveGroupingProperties" />
        <element api="P:System.Windows.Data.CollectionViewSource.LiveSortingProperties" />
        <element api="P:System.Windows.Data.CollectionViewSource.SortDescriptions" />
        <element api="P:System.Windows.Data.CollectionViewSource.Source" />
        <element api="P:System.Windows.Data.CollectionViewSource.View" />
        <element api="P:System.Windows.DependencyObject.DependencyObjectType" />
        <element api="P:System.Windows.DependencyObject.IsSealed" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.CollectionViewSource">
      <topicdata name="CollectionViewSource" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.CollectionViewSource" />
      <apidata name="CollectionViewSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionViewSource.#ctor" />
      <elements>
        <element api="E:System.Windows.Data.CollectionViewSource.Filter" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" />
      </containers>
    </api>
    <api id="Fields.T:System.Windows.Data.CollectionViewSource">
      <topicdata name="CollectionViewSource" group="list" subgroup="Fields" typeTopicId="T:System.Windows.Data.CollectionViewSource" />
      <apidata name="CollectionViewSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CollectionViewSource.#ctor" />
      <elements>
        <element api="F:System.Windows.Data.CollectionViewSource.CanChangeLiveFilteringProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.CanChangeLiveGroupingProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.CanChangeLiveSortingProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequestedProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequestedProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveSortingProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.IsLiveSortingRequestedProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.SourceProperty" />
        <element api="F:System.Windows.Data.CollectionViewSource.ViewProperty" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.CanChangeLiveFiltering">
      <topicdata group="api" />
      <apidata name="CanChangeLiveFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveFiltering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.CanChangeLiveFilteringProperty">
      <topicdata group="api" />
      <apidata name="CanChangeLiveFilteringProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.CanChangeLiveGrouping">
      <topicdata group="api" />
      <apidata name="CanChangeLiveGrouping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveGrouping" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.CanChangeLiveGroupingProperty">
      <topicdata group="api" />
      <apidata name="CanChangeLiveGroupingProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.CanChangeLiveSorting">
      <topicdata group="api" />
      <apidata name="CanChangeLiveSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.CanChangeLiveSortingProperty">
      <topicdata group="api" />
      <apidata name="CanChangeLiveSortingProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.CollectionViewType">
      <topicdata group="api" />
      <apidata name="CollectionViewType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CollectionViewType" />
      <setter name="set_CollectionViewType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty">
      <topicdata group="api" />
      <apidata name="CollectionViewTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Culture" />
      <setter name="set_Culture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.CultureInfoIetfLanguageTagConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
      <topicdata group="api" />
      <apidata name="DeferRefresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CollectionViewSource.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Filter" />
      <remover name="remove_Filter" />
      <eventhandler>
        <type api="T:System.Windows.Data.FilterEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.Data.FilterEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)">
      <topicdata group="api" />
      <apidata name="GetDefaultView" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
      <topicdata group="api" />
      <apidata name="GroupDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupDescriptions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.GroupDescription" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)">
      <topicdata group="api" />
      <apidata name="IsDefaultView" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="view">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.IsLiveFiltering">
      <topicdata group="api" />
      <apidata name="IsLiveFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLiveFiltering" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringProperty">
      <topicdata group="api" />
      <apidata name="IsLiveFilteringProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequested">
      <topicdata group="api" />
      <apidata name="IsLiveFilteringRequested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveFilteringRequested" />
      <setter name="set_IsLiveFilteringRequested" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.IsLiveFilteringRequestedProperty">
      <topicdata group="api" />
      <apidata name="IsLiveFilteringRequestedProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.IsLiveGrouping">
      <topicdata group="api" />
      <apidata name="IsLiveGrouping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLiveGrouping" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingProperty">
      <topicdata group="api" />
      <apidata name="IsLiveGroupingProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequested">
      <topicdata group="api" />
      <apidata name="IsLiveGroupingRequested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveGroupingRequested" />
      <setter name="set_IsLiveGroupingRequested" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.IsLiveGroupingRequestedProperty">
      <topicdata group="api" />
      <apidata name="IsLiveGroupingRequestedProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.IsLiveSorting">
      <topicdata group="api" />
      <apidata name="IsLiveSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLiveSorting" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.IsLiveSortingProperty">
      <topicdata group="api" />
      <apidata name="IsLiveSortingProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.IsLiveSortingRequested">
      <topicdata group="api" />
      <apidata name="IsLiveSortingRequested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveSortingRequested" />
      <setter name="set_IsLiveSortingRequested" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.IsLiveSortingRequestedProperty">
      <topicdata group="api" />
      <apidata name="IsLiveSortingRequestedProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.LiveFilteringProperties">
      <topicdata group="api" />
      <apidata name="LiveFilteringProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LiveFilteringProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.LiveGroupingProperties">
      <topicdata group="api" />
      <apidata name="LiveGroupingProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LiveGroupingProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.LiveSortingProperties">
      <topicdata group="api" />
      <apidata name="LiveSortingProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LiveSortingProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="OnCollectionViewTypeChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="oldCollectionViewType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="newCollectionViewType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="OnSourceChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="oldSource">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="newSource">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="ReceiveWeakEvent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="managerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
      <topicdata group="api" />
      <apidata name="SortDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SortDescriptions" />
      <returns>
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.SourceProperty">
      <topicdata group="api" />
      <apidata name="SourceProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <topicdata group="api" eiiName="ISupportInitialize.BeginInit" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.System#ComponentModel#ISupportInitialize#EndInit">
      <topicdata group="api" eiiName="ISupportInitialize.EndInit" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CollectionViewSource.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <topicdata group="api" eiiName="IWeakEventListener.ReceiveWeakEvent" />
      <apidata name="ReceiveWeakEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="managerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CollectionViewSource.View">
      <topicdata group="api" />
      <apidata name="View" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_View" />
      <returns>
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.CollectionViewSource.ViewProperty">
      <topicdata group="api" />
      <apidata name="ViewProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CollectionViewSource" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.CompositeCollection">
      <topicdata group="api" />
      <apidata name="CompositeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CompositeCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        <type api="T:System.ComponentModel.ICollectionViewFactory" ref="true" />
        <type api="T:System.Windows.IWeakEventListener" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.Windows.Data.CompositeCollection.CollectionChanged" />
        <element api="E:System.Windows.Data.CompositeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Data.CompositeCollection.#ctor">
          <element api="M:System.Windows.Data.CompositeCollection.#ctor" />
          <element api="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)" />
        </element>
        <element api="M:System.Windows.Data.CompositeCollection.Add(System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.Clear" />
        <element api="M:System.Windows.Data.CompositeCollection.Contains(System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.CompositeCollection.Remove(System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView" />
        <element api="M:System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="P:System.Windows.Data.CompositeCollection.Count" />
        <element api="P:System.Windows.Data.CompositeCollection.Item(System.Int32)" />
        <element api="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.LocalizabilityAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.LocalizationCategory" ref="false" />
            <enumValue>
              <field name="Ignore" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Data.CompositeCollection">
      <topicdata name="CompositeCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.CompositeCollection" />
      <apidata name="CompositeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CompositeCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CompositeCollection.Add(System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.Clear" />
        <element api="M:System.Windows.Data.CompositeCollection.Contains(System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.CompositeCollection.Remove(System.Object)" />
        <element api="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView" />
        <element api="M:System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.CompositeCollection">
      <topicdata name="CompositeCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.CompositeCollection" />
      <apidata name="CompositeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CompositeCollection.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.CompositeCollection.Count" />
        <element api="P:System.Windows.Data.CompositeCollection.Item(System.Int32)" />
        <element api="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.CompositeCollection">
      <topicdata name="CompositeCollection" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.CompositeCollection" />
      <apidata name="CompositeCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.CompositeCollection.#ctor" />
      <elements>
        <element api="E:System.Windows.Data.CompositeCollection.CollectionChanged" />
        <element api="E:System.Windows.Data.CompositeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.CompositeCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Data.CompositeCollection.#ctor" />
        <element api="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.CompositeCollection.#ctor" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.CompositeCollection.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.Add(System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="newItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CompositeCollection.CollectionChanged">
      <topicdata group="api" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_CollectionChanged" />
      <remover name="remove_CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="containItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CompositeCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="indexItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="insertIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="insertItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CompositeCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="itemIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="ReceiveWeakEvent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="managerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="removeItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="removeIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CompositeCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.CompositeCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.CompositeCollection.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <topicdata group="api" eiiName="INotifyCollectionChanged.CollectionChanged" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <remover name="remove_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.System#ComponentModel#ICollectionViewFactory#CreateView">
      <topicdata group="api" eiiName="ICollectionViewFactory.CreateView" />
      <apidata name="CreateView" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionViewFactory.CreateView">
          <type api="T:System.ComponentModel.ICollectionViewFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.CompositeCollection.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
      <topicdata group="api" eiiName="IWeakEventListener.ReceiveWeakEvent" />
      <apidata name="ReceiveWeakEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="managerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.CompositeCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.DataChangedEventManager">
      <topicdata group="api" />
      <apidata name="DataChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.WeakEventManager" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataChangedEventManager.AddHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})" />
        <element api="M:System.Windows.Data.DataChangedEventManager.AddListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.Data.DataChangedEventManager.NewListenerList" />
        <element api="M:System.Windows.Data.DataChangedEventManager.RemoveHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})" />
        <element api="M:System.Windows.Data.DataChangedEventManager.RemoveListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.Data.DataChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.Windows.Data.DataChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.DataChangedEventManager">
      <topicdata name="DataChangedEventManager" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.DataChangedEventManager" />
      <apidata name="DataChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataChangedEventManager.AddHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})" />
        <element api="M:System.Windows.Data.DataChangedEventManager.AddListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.Data.DataChangedEventManager.NewListenerList" />
        <element api="M:System.Windows.Data.DataChangedEventManager.RemoveHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})" />
        <element api="M:System.Windows.Data.DataChangedEventManager.RemoveListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.Data.DataChangedEventManager.StartListening(System.Object)" />
        <element api="M:System.Windows.Data.DataChangedEventManager.StopListening(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)" />
        <element api="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedAddListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveHandler(System.Object,System.Delegate)" />
        <element api="M:System.Windows.WeakEventManager.ProtectedRemoveListener(System.Object,System.Windows.IWeakEventListener)" />
        <element api="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)" />
        <element api="M:System.Windows.WeakEventManager.Remove(System.Object)" />
        <element api="M:System.Windows.WeakEventManager.ScheduleCleanup" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataChangedEventManager" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.DataChangedEventManager">
      <topicdata name="DataChangedEventManager" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.DataChangedEventManager" />
      <apidata name="DataChangedEventManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
        <element api="P:System.Windows.WeakEventManager.Item(System.Object)" />
        <element api="P:System.Windows.WeakEventManager.ReadLock" />
        <element api="P:System.Windows.WeakEventManager.WriteLock" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataChangedEventManager" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataChangedEventManager.AddHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.EventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataChangedEventManager.AddListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <topicdata group="api" />
      <apidata name="AddListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataChangedEventManager.NewListenerList">
      <topicdata group="api" />
      <apidata name="NewListenerList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.NewListenerList">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Windows.WeakEventManager.ListenerList" ref="true">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataChangedEventManager.RemoveHandler(System.Windows.Data.DataSourceProvider,System.EventHandler{System.EventArgs})">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:System.EventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataChangedEventManager.RemoveListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
      <topicdata group="api" />
      <apidata name="RemoveListener" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
        </parameter>
        <parameter name="listener">
          <type api="T:System.Windows.IWeakEventListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataChangedEventManager.StartListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StartListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StartListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataChangedEventManager.StopListening(System.Object)">
      <topicdata group="api" />
      <apidata name="StopListening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.WeakEventManager.StopListening(System.Object)">
          <type api="T:System.Windows.WeakEventManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataChangedEventManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.DataSourceProvider">
      <topicdata group="api" />
      <apidata name="DataSourceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Windows.Data.ObjectDataProvider" ref="true" />
          <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Windows.Data.DataSourceProvider.DataChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataSourceProvider.#ctor" />
        <element api="M:System.Windows.Data.DataSourceProvider.BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.BeginQuery" />
        <element api="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.EndInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.InitialLoad" />
        <element api="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="Overload:System.Windows.Data.DataSourceProvider.OnQueryFinished">
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)" />
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)" />
        </element>
        <element api="M:System.Windows.Data.DataSourceProvider.Refresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit" />
        <element api="P:System.Windows.Data.DataSourceProvider.Data" />
        <element api="P:System.Windows.Data.DataSourceProvider.Dispatcher" />
        <element api="P:System.Windows.Data.DataSourceProvider.Error" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.DataSourceProvider">
      <topicdata name="DataSourceProvider" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.DataSourceProvider" />
      <apidata name="DataSourceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataSourceProvider.BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.BeginQuery" />
        <element api="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.EndInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.InitialLoad" />
        <element api="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="Overload:System.Windows.Data.DataSourceProvider.OnQueryFinished">
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)" />
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)" />
        </element>
        <element api="M:System.Windows.Data.DataSourceProvider.Refresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.DataSourceProvider">
      <topicdata name="DataSourceProvider" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.DataSourceProvider" />
      <apidata name="DataSourceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.DataSourceProvider.Data" />
        <element api="P:System.Windows.Data.DataSourceProvider.Dispatcher" />
        <element api="P:System.Windows.Data.DataSourceProvider.Error" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.DataSourceProvider">
      <topicdata name="DataSourceProvider" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.DataSourceProvider" />
      <apidata name="DataSourceProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Windows.Data.DataSourceProvider.DataChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.DataSourceProvider.OnQueryFinished">
      <topicdata name="OnQueryFinished" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnQueryFinished" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)" />
        <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.BeginInit">
      <topicdata group="api" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.BeginQuery">
      <topicdata group="api" />
      <apidata name="BeginQuery" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.DataSourceProvider.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Data" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Windows.Data.DataSourceProvider.DataChanged">
      <topicdata group="api" />
      <apidata name="DataChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DataChanged" />
      <remover name="remove_DataChanged" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
      <topicdata group="api" />
      <apidata name="DeferRefresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IDisposable" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.DataSourceProvider.Dispatcher">
      <topicdata group="api" />
      <apidata name="Dispatcher" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Dispatcher" />
      <setter name="set_Dispatcher" />
      <returns>
        <type api="T:System.Windows.Threading.Dispatcher" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.DataSourceProvider.Error">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Error" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.InitialLoad">
      <topicdata group="api" />
      <apidata name="InitialLoad" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled">
      <topicdata group="api" />
      <apidata name="IsInitialLoadEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsInitialLoadEnabled" />
      <setter name="set_IsInitialLoadEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred">
      <topicdata group="api" />
      <apidata name="IsRefreshDeferred" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRefreshDeferred" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)">
      <topicdata group="api" />
      <apidata name="OnQueryFinished" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Data.DataSourceProvider.OnQueryFinished" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="newData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnQueryFinished" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Windows.Data.DataSourceProvider.OnQueryFinished" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="newData">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="completionWork">
          <type api="T:System.Windows.Threading.DispatcherOperationCallback" ref="true" />
        </parameter>
        <parameter name="callbackArguments">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.DataSourceProvider.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.Refresh">
      <topicdata group="api" />
      <apidata name="Refresh" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <topicdata group="api" eiiName="INotifyPropertyChanged.PropertyChanged" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <remover name="remove_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit">
      <topicdata group="api" eiiName="ISupportInitialize.BeginInit" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit">
      <topicdata group="api" eiiName="ISupportInitialize.EndInit" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WindowsBase" module="WindowsBase" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.DataTransferEventArgs">
      <topicdata group="api" />
      <apidata name="DataTransferEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataTransferEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
        <element api="M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)" />
        <element api="P:System.Windows.Data.DataTransferEventArgs.Property" />
        <element api="P:System.Windows.Data.DataTransferEventArgs.TargetObject" />
        <element api="P:System.Windows.RoutedEventArgs.Handled" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
        <element api="P:System.Windows.RoutedEventArgs.RoutedEvent" />
        <element api="P:System.Windows.RoutedEventArgs.Source" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.DataTransferEventArgs">
      <topicdata name="DataTransferEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.DataTransferEventArgs" />
      <apidata name="DataTransferEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataTransferEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
        <element api="M:System.Windows.RoutedEventArgs.OnSetSource(System.Object)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataTransferEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.DataTransferEventArgs">
      <topicdata name="DataTransferEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.DataTransferEventArgs" />
      <apidata name="DataTransferEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.DataTransferEventArgs.Property" />
        <element api="P:System.Windows.Data.DataTransferEventArgs.TargetObject" />
        <element api="P:System.Windows.RoutedEventArgs.Handled" />
        <element api="P:System.Windows.RoutedEventArgs.OriginalSource" />
        <element api="P:System.Windows.RoutedEventArgs.RoutedEvent" />
        <element api="P:System.Windows.RoutedEventArgs.Source" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataTransferEventArgs" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.DataTransferEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeEventHandler" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="genericHandler">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
        <parameter name="genericTarget">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.DataTransferEventArgs.Property">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Property" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.DataTransferEventArgs.TargetObject">
      <topicdata group="api" />
      <apidata name="TargetObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetObject" />
      <returns>
        <type api="T:System.Windows.DependencyObject" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.DataTransferEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.FilterEventArgs">
      <topicdata group="api" />
      <apidata name="FilterEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Windows.Data.FilterEventArgs.Accepted" />
        <element api="P:System.Windows.Data.FilterEventArgs.Item" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.FilterEventArgs">
      <topicdata name="FilterEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.FilterEventArgs" />
      <apidata name="FilterEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.FilterEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.FilterEventArgs">
      <topicdata name="FilterEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.FilterEventArgs" />
      <apidata name="FilterEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.FilterEventArgs.Accepted" />
        <element api="P:System.Windows.Data.FilterEventArgs.Item" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.FilterEventArgs" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.FilterEventArgs.Accepted">
      <topicdata group="api" />
      <apidata name="Accepted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Accepted" />
      <setter name="set_Accepted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.FilterEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.FilterEventArgs.Item">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.FilterEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.FilterEventHandler">
      <topicdata group="api" />
      <apidata name="FilterEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Windows.Data.FilterEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.GroupDescriptionSelectorCallback">
      <topicdata group="api" />
      <apidata name="GroupDescriptionSelectorCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="group">
          <type api="T:System.Windows.Data.CollectionViewGroup" ref="true" />
        </parameter>
        <parameter name="level">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.GroupDescription" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.IMultiValueConverter">
      <topicdata group="api" />
      <apidata name="IMultiValueConverter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter" ref="true" />
        <type api="T:System.Windows.Controls.BorderGapMaskConverter" ref="true" />
        <type api="T:System.Windows.Controls.MenuScrollingVisibilityConverter" ref="true" />
        <type api="T:Microsoft.Windows.Themes.ProgressBarHighlightConverter" ref="true" />
        <type api="T:Microsoft.Windows.Themes.ProgressBarHighlightConverter" ref="true" />
        <type api="T:Microsoft.Windows.Themes.ProgressBarBrushConverter" ref="true" />
        <type api="T:Microsoft.Windows.Themes.ProgressBarBrushConverter" ref="true" />
        <type api="T:Microsoft.Windows.Themes.ProgressBarBrushConverter" ref="true" />
        <type api="T:Microsoft.Windows.Themes.ProgressBarBrushConverter" ref="true" />
        <type api="T:System.Activities.Presentation.Converters.ObjectToModelValueConverter" ref="true" />
        <type api="T:System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter" ref="true" />
        <type api="T:System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter" ref="true" />
        <type api="T:System.Windows.Controls.Ribbon.Primitives.RibbonScrollButtonVisibilityConverter" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.IMultiValueConverter">
      <topicdata name="IMultiValueConverter" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.IMultiValueConverter" />
      <apidata name="IMultiValueConverter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.IMultiValueConverter" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="values">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.IMultiValueConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.IMultiValueConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.IValueConverter">
      <topicdata group="api" />
      <apidata name="IValueConverter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Windows.Navigation.JournalEntryListConverter" ref="true" />
        <type api="T:System.Windows.Documents.ZoomPercentageConverter" ref="true" />
        <type api="T:System.Windows.Controls.AlternationConverter" ref="true" />
        <type api="T:System.Windows.Controls.BooleanToVisibilityConverter" ref="true" />
        <type api="T:System.Activities.Core.Presentation.GenericTypeArgumentConverter" ref="true" />
        <type api="T:System.Activities.Presentation.Converters.ModelToObjectValueConverter" ref="true" />
        <type api="T:System.Activities.Presentation.Converters.ArgumentToExpressionConverter" ref="true" />
        <type api="T:System.Activities.Presentation.Converters.ModelPropertyEntryToModelItemConverter" ref="true" />
        <type api="T:System.Activities.Presentation.Converters.ModelPropertyEntryToOwnerActivityConverter" ref="true" />
        <type api="T:System.Windows.Controls.Ribbon.Primitives.RibbonWindowSmallIconConverter" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.IValueConverter">
      <topicdata name="IValueConverter" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.IValueConverter" />
      <apidata name="IValueConverter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.IValueConverter" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.ListCollectionView">
      <topicdata group="api" />
      <apidata name="ListCollectionView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IComparer" ref="true" />
        <type api="T:System.ComponentModel.IEditableCollectionViewAddNewItem" ref="true" />
        <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        <type api="T:System.ComponentModel.IItemProperties" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Windows.Data.CollectionView.CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanging" />
        <element api="E:System.Windows.Data.CollectionView.PropertyChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionView.ClearChangeLog" />
        <element api="M:System.Windows.Data.CollectionView.ClearPendingChanges" />
        <element api="M:System.Windows.Data.CollectionView.DeferRefresh" />
        <element api="M:System.Windows.Data.CollectionView.DetachFromSourceCollection" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToFirst" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToLast" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToNext" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious" />
        <element api="M:System.Windows.Data.CollectionView.OKToChangeCurrent" />
        <element api="Overload:System.Windows.Data.ListCollectionView.OnCollectionChanged">
          <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
          <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.OnCurrentChanged" />
        <element api="Overload:System.Windows.Data.ListCollectionView.OnCurrentChanging">
          <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging" />
          <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Windows.Data.CollectionView.ProcessPendingChanges" />
        <element api="M:System.Windows.Data.CollectionView.Refresh" />
        <element api="M:System.Windows.Data.CollectionView.RefreshOrDefer" />
        <element api="Overload:System.Windows.Data.ListCollectionView.SetCurrent">
          <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)" />
          <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)" />
        <element api="M:System.Windows.Data.ListCollectionView.AddNew" />
        <element api="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.CancelEdit" />
        <element api="M:System.Windows.Data.ListCollectionView.CancelNew" />
        <element api="M:System.Windows.Data.ListCollectionView.CommitEdit" />
        <element api="M:System.Windows.Data.ListCollectionView.CommitNew" />
        <element api="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.Contains(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.GetEnumerator" />
        <element api="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)" />
        <element api="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator" />
        <element api="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)" />
        <element api="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)" />
        <element api="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged" />
        <element api="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="M:System.Windows.Data.ListCollectionView.RefreshOverride" />
        <element api="M:System.Windows.Data.ListCollectionView.Remove(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)" />
        <element api="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" />
        <element api="P:System.Windows.Data.CollectionView.Comparer" />
        <element api="P:System.Windows.Data.CollectionView.Culture" />
        <element api="P:System.Windows.Data.CollectionView.CurrentItem" />
        <element api="P:System.Windows.Data.CollectionView.CurrentPosition" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentAfterLast" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentInSync" />
        <element api="P:System.Windows.Data.CollectionView.IsDynamic" />
        <element api="P:System.Windows.Data.CollectionView.IsInUse" />
        <element api="P:System.Windows.Data.CollectionView.IsRefreshDeferred" />
        <element api="P:System.Windows.Data.CollectionView.NeedsRefresh" />
        <element api="P:System.Windows.Data.CollectionView.SourceCollection" />
        <element api="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher" />
        <element api="P:System.Windows.Data.ListCollectionView.ActiveComparer" />
        <element api="P:System.Windows.Data.ListCollectionView.ActiveFilter" />
        <element api="P:System.Windows.Data.ListCollectionView.CanAddNew" />
        <element api="P:System.Windows.Data.ListCollectionView.CanAddNewItem" />
        <element api="P:System.Windows.Data.ListCollectionView.CanCancelEdit" />
        <element api="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering" />
        <element api="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping" />
        <element api="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting" />
        <element api="P:System.Windows.Data.ListCollectionView.CanFilter" />
        <element api="P:System.Windows.Data.ListCollectionView.CanGroup" />
        <element api="P:System.Windows.Data.ListCollectionView.CanRemove" />
        <element api="P:System.Windows.Data.ListCollectionView.CanSort" />
        <element api="P:System.Windows.Data.ListCollectionView.Count" />
        <element api="P:System.Windows.Data.ListCollectionView.CurrentAddItem" />
        <element api="P:System.Windows.Data.ListCollectionView.CurrentEditItem" />
        <element api="P:System.Windows.Data.ListCollectionView.CustomSort" />
        <element api="P:System.Windows.Data.ListCollectionView.Filter" />
        <element api="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
        <element api="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
        <element api="P:System.Windows.Data.ListCollectionView.Groups" />
        <element api="P:System.Windows.Data.ListCollectionView.InternalCount" />
        <element api="P:System.Windows.Data.ListCollectionView.InternalList" />
        <element api="P:System.Windows.Data.ListCollectionView.IsAddingNew" />
        <element api="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder" />
        <element api="P:System.Windows.Data.ListCollectionView.IsEditingItem" />
        <element api="P:System.Windows.Data.ListCollectionView.IsEmpty" />
        <element api="P:System.Windows.Data.ListCollectionView.IsGrouping" />
        <element api="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" />
        <element api="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" />
        <element api="P:System.Windows.Data.ListCollectionView.IsLiveSorting" />
        <element api="P:System.Windows.Data.ListCollectionView.ItemProperties" />
        <element api="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties" />
        <element api="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties" />
        <element api="P:System.Windows.Data.ListCollectionView.LiveSortingProperties" />
        <element api="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition" />
        <element api="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
        <element api="P:System.Windows.Data.ListCollectionView.UsesLocalArray" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.ListCollectionView">
      <topicdata name="ListCollectionView" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.ListCollectionView" />
      <apidata name="ListCollectionView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.CollectionView.ClearChangeLog" />
        <element api="M:System.Windows.Data.CollectionView.ClearPendingChanges" />
        <element api="M:System.Windows.Data.CollectionView.DeferRefresh" />
        <element api="M:System.Windows.Data.CollectionView.DetachFromSourceCollection" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToFirst" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToLast" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToNext" />
        <element api="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious" />
        <element api="M:System.Windows.Data.CollectionView.OKToChangeCurrent" />
        <element api="Overload:System.Windows.Data.ListCollectionView.OnCollectionChanged">
          <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
          <element api="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.OnCurrentChanged" />
        <element api="Overload:System.Windows.Data.ListCollectionView.OnCurrentChanging">
          <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging" />
          <element api="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Windows.Data.CollectionView.ProcessPendingChanges" />
        <element api="M:System.Windows.Data.CollectionView.Refresh" />
        <element api="M:System.Windows.Data.CollectionView.RefreshOrDefer" />
        <element api="Overload:System.Windows.Data.ListCollectionView.SetCurrent">
          <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)" />
          <element api="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Windows.Data.CollectionView.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Windows.Data.ListCollectionView.AddNew" />
        <element api="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.CancelEdit" />
        <element api="M:System.Windows.Data.ListCollectionView.CancelNew" />
        <element api="M:System.Windows.Data.ListCollectionView.CommitEdit" />
        <element api="M:System.Windows.Data.ListCollectionView.CommitNew" />
        <element api="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.Contains(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.GetEnumerator" />
        <element api="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)" />
        <element api="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator" />
        <element api="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)" />
        <element api="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)" />
        <element api="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged" />
        <element api="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
        <element api="M:System.Windows.Data.ListCollectionView.RefreshOverride" />
        <element api="M:System.Windows.Data.ListCollectionView.Remove(System.Object)" />
        <element api="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)" />
        <element api="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.ListCollectionView">
      <topicdata name="ListCollectionView" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.ListCollectionView" />
      <apidata name="ListCollectionView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.CollectionView.AllowsCrossThreadChanges" />
        <element api="P:System.Windows.Data.CollectionView.Comparer" />
        <element api="P:System.Windows.Data.CollectionView.Culture" />
        <element api="P:System.Windows.Data.CollectionView.CurrentItem" />
        <element api="P:System.Windows.Data.CollectionView.CurrentPosition" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentAfterLast" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst" />
        <element api="P:System.Windows.Data.CollectionView.IsCurrentInSync" />
        <element api="P:System.Windows.Data.CollectionView.IsDynamic" />
        <element api="P:System.Windows.Data.CollectionView.IsInUse" />
        <element api="P:System.Windows.Data.CollectionView.IsRefreshDeferred" />
        <element api="P:System.Windows.Data.CollectionView.NeedsRefresh" />
        <element api="P:System.Windows.Data.CollectionView.SourceCollection" />
        <element api="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher" />
        <element api="P:System.Windows.Data.ListCollectionView.ActiveComparer" />
        <element api="P:System.Windows.Data.ListCollectionView.ActiveFilter" />
        <element api="P:System.Windows.Data.ListCollectionView.CanAddNew" />
        <element api="P:System.Windows.Data.ListCollectionView.CanAddNewItem" />
        <element api="P:System.Windows.Data.ListCollectionView.CanCancelEdit" />
        <element api="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering" />
        <element api="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping" />
        <element api="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting" />
        <element api="P:System.Windows.Data.ListCollectionView.CanFilter" />
        <element api="P:System.Windows.Data.ListCollectionView.CanGroup" />
        <element api="P:System.Windows.Data.ListCollectionView.CanRemove" />
        <element api="P:System.Windows.Data.ListCollectionView.CanSort" />
        <element api="P:System.Windows.Data.ListCollectionView.Count" />
        <element api="P:System.Windows.Data.ListCollectionView.CurrentAddItem" />
        <element api="P:System.Windows.Data.ListCollectionView.CurrentEditItem" />
        <element api="P:System.Windows.Data.ListCollectionView.CustomSort" />
        <element api="P:System.Windows.Data.ListCollectionView.Filter" />
        <element api="P:System.Windows.Data.ListCollectionView.GroupBySelector" />
        <element api="P:System.Windows.Data.ListCollectionView.GroupDescriptions" />
        <element api="P:System.Windows.Data.ListCollectionView.Groups" />
        <element api="P:System.Windows.Data.ListCollectionView.InternalCount" />
        <element api="P:System.Windows.Data.ListCollectionView.InternalList" />
        <element api="P:System.Windows.Data.ListCollectionView.IsAddingNew" />
        <element api="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder" />
        <element api="P:System.Windows.Data.ListCollectionView.IsEditingItem" />
        <element api="P:System.Windows.Data.ListCollectionView.IsEmpty" />
        <element api="P:System.Windows.Data.ListCollectionView.IsGrouping" />
        <element api="P:System.Windows.Data.ListCollectionView.IsLiveFiltering" />
        <element api="P:System.Windows.Data.ListCollectionView.IsLiveGrouping" />
        <element api="P:System.Windows.Data.ListCollectionView.IsLiveSorting" />
        <element api="P:System.Windows.Data.ListCollectionView.ItemProperties" />
        <element api="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties" />
        <element api="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties" />
        <element api="P:System.Windows.Data.ListCollectionView.LiveSortingProperties" />
        <element api="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition" />
        <element api="P:System.Windows.Data.ListCollectionView.SortDescriptions" />
        <element api="P:System.Windows.Data.ListCollectionView.UsesLocalArray" />
        <element api="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.ListCollectionView">
      <topicdata name="ListCollectionView" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.ListCollectionView" />
      <apidata name="ListCollectionView" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Windows.Data.CollectionView.CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanged" />
        <element api="E:System.Windows.Data.CollectionView.CurrentChanging" />
        <element api="E:System.Windows.Data.CollectionView.PropertyChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="E:System.Windows.Data.CollectionView.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.ActiveComparer">
      <topicdata group="api" />
      <apidata name="ActiveComparer" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ActiveComparer" />
      <setter name="set_ActiveComparer" />
      <returns>
        <type api="T:System.Collections.IComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.ActiveFilter">
      <topicdata group="api" />
      <apidata name="ActiveFilter" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ActiveFilter" />
      <setter name="set_ActiveFilter" />
      <returns>
        <type api="T:System.Predicate`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.AddNew">
      <topicdata group="api" />
      <apidata name="AddNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.AddNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.AddNewItem(System.Object)">
      <topicdata group="api" />
      <apidata name="AddNewItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="newItem">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionViewAddNewItem.AddNewItem(System.Object)">
          <type api="T:System.ComponentModel.IEditableCollectionViewAddNewItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanAddNew">
      <topicdata group="api" />
      <apidata name="CanAddNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanAddNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CanAddNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanAddNewItem">
      <topicdata group="api" />
      <apidata name="CanAddNewItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanAddNewItem" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionViewAddNewItem.CanAddNewItem">
          <type api="T:System.ComponentModel.IEditableCollectionViewAddNewItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanCancelEdit">
      <topicdata group="api" />
      <apidata name="CanCancelEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanCancelEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CanCancelEdit">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.CancelEdit">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.CancelNew">
      <topicdata group="api" />
      <apidata name="CancelNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.CancelNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanChangeLiveFiltering">
      <topicdata group="api" />
      <apidata name="CanChangeLiveFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveFiltering" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveFiltering">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanChangeLiveGrouping">
      <topicdata group="api" />
      <apidata name="CanChangeLiveGrouping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveGrouping" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveGrouping">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanChangeLiveSorting">
      <topicdata group="api" />
      <apidata name="CanChangeLiveSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanChangeLiveSorting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.CanChangeLiveSorting">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanFilter">
      <topicdata group="api" />
      <apidata name="CanFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.CanFilter">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanFilter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CanFilter">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanGroup">
      <topicdata group="api" />
      <apidata name="CanGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.CanGroup">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanGroup" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CanGroup">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanRemove">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CanRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CanRemove">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CanSort">
      <topicdata group="api" />
      <apidata name="CanSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.CanSort">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSort" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.CanSort">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.CommitEdit">
      <topicdata group="api" />
      <apidata name="CommitEdit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.CommitEdit">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.CommitNew">
      <topicdata group="api" />
      <apidata name="CommitNew" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.CommitNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="o1">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="o2">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.Contains(System.Object)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.Contains(System.Object)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.Contains(System.Object)">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.Count">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CurrentAddItem">
      <topicdata group="api" />
      <apidata name="CurrentAddItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CurrentAddItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CurrentAddItem">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CurrentEditItem">
      <topicdata group="api" />
      <apidata name="CurrentEditItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CurrentEditItem" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.CurrentEditItem">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.CustomSort">
      <topicdata group="api" />
      <apidata name="CustomSort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomSort" />
      <setter name="set_CustomSort" />
      <returns>
        <type api="T:System.Collections.IComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.EditItem(System.Object)">
      <topicdata group="api" />
      <apidata name="EditItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.EditItem(System.Object)">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.Filter">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.Filter">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Filter" />
      <setter name="set_Filter" />
      <returns>
        <type api="T:System.Predicate`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.Filter">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.GetEnumerator">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetItemAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.GroupBySelector">
      <topicdata group="api" />
      <apidata name="GroupBySelector" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupBySelector" />
      <setter name="set_GroupBySelector" />
      <returns>
        <type api="T:System.Windows.Data.GroupDescriptionSelectorCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.GroupDescriptions">
      <topicdata group="api" />
      <apidata name="GroupDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.GroupDescriptions">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_GroupDescriptions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.GroupDescription" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.GroupDescriptions">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.Groups">
      <topicdata group="api" />
      <apidata name="Groups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.Groups">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Groups" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.Groups">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.IndexOf(System.Object)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)">
      <topicdata group="api" />
      <apidata name="InternalContains" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.InternalCount">
      <topicdata group="api" />
      <apidata name="InternalCount" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InternalCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator">
      <topicdata group="api" />
      <apidata name="InternalGetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)">
      <topicdata group="api" />
      <apidata name="InternalIndexOf" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="InternalItemAt" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.InternalList">
      <topicdata group="api" />
      <apidata name="InternalList" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InternalList" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.IsAddingNew">
      <topicdata group="api" />
      <apidata name="IsAddingNew" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsAddingNew" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.IsAddingNew">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder">
      <topicdata group="api" />
      <apidata name="IsDataInGroupOrder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDataInGroupOrder" />
      <setter name="set_IsDataInGroupOrder" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.IsEditingItem">
      <topicdata group="api" />
      <apidata name="IsEditingItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsEditingItem" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.IsEditingItem">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.IsEmpty">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.IsEmpty">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.IsGrouping">
      <topicdata group="api" />
      <apidata name="IsGrouping" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsGrouping" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.IsLiveFiltering">
      <topicdata group="api" />
      <apidata name="IsLiveFiltering" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveFiltering" />
      <setter name="set_IsLiveFiltering" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveFiltering">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.IsLiveGrouping">
      <topicdata group="api" />
      <apidata name="IsLiveGrouping" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveGrouping" />
      <setter name="set_IsLiveGrouping" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveGrouping">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.IsLiveSorting">
      <topicdata group="api" />
      <apidata name="IsLiveSorting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLiveSorting" />
      <setter name="set_IsLiveSorting" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.IsLiveSorting">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.ItemProperties">
      <topicdata group="api" />
      <apidata name="ItemProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ItemProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.ItemPropertyInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IItemProperties.ItemProperties">
          <type api="T:System.ComponentModel.IItemProperties" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.LiveFilteringProperties">
      <topicdata group="api" />
      <apidata name="LiveFilteringProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LiveFilteringProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveFilteringProperties">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.LiveGroupingProperties">
      <topicdata group="api" />
      <apidata name="LiveGroupingProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LiveGroupingProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveGroupingProperties">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.LiveSortingProperties">
      <topicdata group="api" />
      <apidata name="LiveSortingProperties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_LiveSortingProperties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionViewLiveShaping.LiveSortingProperties">
          <type api="T:System.ComponentModel.ICollectionViewLiveShaping" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)">
      <topicdata group="api" />
      <apidata name="MoveCurrentToPosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="position">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionView.MoveCurrentToPosition(System.Int32)">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.NewItemPlaceholderPosition">
      <topicdata group="api" />
      <apidata name="NewItemPlaceholderPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_NewItemPlaceholderPosition" />
      <setter name="set_NewItemPlaceholderPosition" />
      <returns>
        <type api="T:System.ComponentModel.NewItemPlaceholderPosition" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.OnAllowsCrossThreadChangesChanged">
      <topicdata group="api" />
      <apidata name="OnAllowsCrossThreadChangesChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.OnAllowsCrossThreadChangesChanged">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnBeginChangeLogging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="args">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Replaced by OnAllowsCrossThreadChangesChanged</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)">
      <topicdata group="api" />
      <apidata name="PassesFilter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="ProcessCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="args">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.RefreshOverride">
      <topicdata group="api" />
      <apidata name="RefreshOverride" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.CollectionView.RefreshOverride">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.Remove(System.Object)">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)">
          <type api="T:System.ComponentModel.IEditableCollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.SortDescriptions">
      <topicdata group="api" />
      <apidata name="SortDescriptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.CollectionView.SortDescriptions">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SortDescriptions" />
      <returns>
        <type api="T:System.ComponentModel.SortDescriptionCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.ICollectionView.SortDescriptions">
          <type api="T:System.ComponentModel.ICollectionView" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ListCollectionView.System#Collections#IComparer#Compare(System.Object,System.Object)">
      <topicdata group="api" eiiName="IComparer.Compare" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="o1">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="o2">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IComparer.Compare(System.Object,System.Object)">
          <type api="T:System.Collections.IComparer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ListCollectionView.UsesLocalArray">
      <topicdata group="api" />
      <apidata name="UsesLocalArray" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UsesLocalArray" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.MultiBinding">
      <topicdata group="api" />
      <apidata name="MultiBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.MultiBinding.#ctor" contentProperty="P:System.Windows.Data.MultiBinding.Bindings" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.BindingBase" ref="true" />
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IAddChild" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
        <element api="M:System.Windows.Data.MultiBinding.#ctor" />
        <element api="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
        <element api="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)" />
        <element api="P:System.Windows.Data.BindingBase.BindingGroupName" />
        <element api="P:System.Windows.Data.BindingBase.Delay" />
        <element api="P:System.Windows.Data.BindingBase.FallbackValue" />
        <element api="P:System.Windows.Data.BindingBase.StringFormat" />
        <element api="P:System.Windows.Data.BindingBase.TargetNullValue" />
        <element api="P:System.Windows.Data.MultiBinding.Bindings" />
        <element api="P:System.Windows.Data.MultiBinding.Converter" />
        <element api="P:System.Windows.Data.MultiBinding.ConverterCulture" />
        <element api="P:System.Windows.Data.MultiBinding.ConverterParameter" />
        <element api="P:System.Windows.Data.MultiBinding.Mode" />
        <element api="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated" />
        <element api="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated" />
        <element api="P:System.Windows.Data.MultiBinding.NotifyOnValidationError" />
        <element api="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
        <element api="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger" />
        <element api="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
        <element api="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
        <element api="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors" />
        <element api="P:System.Windows.Data.MultiBinding.ValidationRules" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Bindings</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Data.MultiBinding">
      <topicdata name="MultiBinding" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.MultiBinding" />
      <apidata name="MultiBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.MultiBinding.#ctor" contentProperty="P:System.Windows.Data.MultiBinding.Bindings" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
        <element api="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
        <element api="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.MultiBinding">
      <topicdata name="MultiBinding" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.MultiBinding" />
      <apidata name="MultiBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.MultiBinding.#ctor" contentProperty="P:System.Windows.Data.MultiBinding.Bindings" />
      <elements>
        <element api="P:System.Windows.Data.BindingBase.BindingGroupName" />
        <element api="P:System.Windows.Data.BindingBase.Delay" />
        <element api="P:System.Windows.Data.BindingBase.FallbackValue" />
        <element api="P:System.Windows.Data.BindingBase.StringFormat" />
        <element api="P:System.Windows.Data.BindingBase.TargetNullValue" />
        <element api="P:System.Windows.Data.MultiBinding.Bindings" />
        <element api="P:System.Windows.Data.MultiBinding.Converter" />
        <element api="P:System.Windows.Data.MultiBinding.ConverterCulture" />
        <element api="P:System.Windows.Data.MultiBinding.ConverterParameter" />
        <element api="P:System.Windows.Data.MultiBinding.Mode" />
        <element api="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated" />
        <element api="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated" />
        <element api="P:System.Windows.Data.MultiBinding.NotifyOnValidationError" />
        <element api="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
        <element api="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger" />
        <element api="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
        <element api="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
        <element api="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors" />
        <element api="P:System.Windows.Data.MultiBinding.ValidationRules" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.MultiBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.Bindings">
      <topicdata group="api" />
      <apidata name="Bindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bindings" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.Converter">
      <topicdata group="api" />
      <apidata name="Converter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Converter" />
      <setter name="set_Converter" />
      <returns>
        <type api="T:System.Windows.Data.IMultiValueConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.ConverterCulture">
      <topicdata group="api" />
      <apidata name="ConverterCulture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConverterCulture" />
      <setter name="set_ConverterCulture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.CultureInfoIetfLanguageTagConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.ConverterParameter">
      <topicdata group="api" />
      <apidata name="ConverterParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConverterParameter" />
      <setter name="set_ConverterParameter" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.Windows.Data.BindingMode" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.Data.BindingMode" ref="false" />
            <enumValue>
              <field name="Default" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated">
      <topicdata group="api" />
      <apidata name="NotifyOnSourceUpdated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotifyOnSourceUpdated" />
      <setter name="set_NotifyOnSourceUpdated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated">
      <topicdata group="api" />
      <apidata name="NotifyOnTargetUpdated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotifyOnTargetUpdated" />
      <setter name="set_NotifyOnTargetUpdated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.NotifyOnValidationError">
      <topicdata group="api" />
      <apidata name="NotifyOnValidationError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NotifyOnValidationError" />
      <setter name="set_NotifyOnValidationError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <topicdata group="api" eiiName="IAddChild.AddChild" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddChild(System.Object)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <topicdata group="api" eiiName="IAddChild.AddText" />
      <apidata name="AddText" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddText(System.String)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter">
      <topicdata group="api" />
      <apidata name="UpdateSourceExceptionFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateSourceExceptionFilter" />
      <setter name="set_UpdateSourceExceptionFilter" />
      <returns>
        <type api="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger">
      <topicdata group="api" />
      <apidata name="UpdateSourceTrigger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UpdateSourceTrigger" />
      <setter name="set_UpdateSourceTrigger" />
      <returns>
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
            <enumValue>
              <field name="PropertyChanged" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors">
      <topicdata group="api" />
      <apidata name="ValidatesOnDataErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidatesOnDataErrors" />
      <setter name="set_ValidatesOnDataErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions">
      <topicdata group="api" />
      <apidata name="ValidatesOnExceptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidatesOnExceptions" />
      <setter name="set_ValidatesOnExceptions" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors">
      <topicdata group="api" />
      <apidata name="ValidatesOnNotifyDataErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidatesOnNotifyDataErrors" />
      <setter name="set_ValidatesOnNotifyDataErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.MultiBinding.ValidationRules">
      <topicdata group="api" />
      <apidata name="ValidationRules" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationRules" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Controls.ValidationRule" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.MultiBindingExpression">
      <topicdata group="api" />
      <apidata name="MultiBindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          <type api="T:System.Windows.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
        <element api="M:System.Windows.Data.MultiBindingExpression.UpdateSource" />
        <element api="M:System.Windows.Data.MultiBindingExpression.UpdateTarget" />
        <element api="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
        <element api="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Status" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Target" />
        <element api="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
        <element api="P:System.Windows.Data.MultiBindingExpression.BindingExpressions" />
        <element api="P:System.Windows.Data.MultiBindingExpression.HasError" />
        <element api="P:System.Windows.Data.MultiBindingExpression.HasValidationError" />
        <element api="P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding" />
        <element api="P:System.Windows.Data.MultiBindingExpression.ValidationError" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.MultiBindingExpression">
      <topicdata name="MultiBindingExpression" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.MultiBindingExpression" />
      <apidata name="MultiBindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
        <element api="M:System.Windows.Data.MultiBindingExpression.UpdateSource" />
        <element api="M:System.Windows.Data.MultiBindingExpression.UpdateTarget" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBindingExpression" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.MultiBindingExpression">
      <topicdata name="MultiBindingExpression" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.MultiBindingExpression" />
      <apidata name="MultiBindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
        <element api="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Status" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Target" />
        <element api="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
        <element api="P:System.Windows.Data.MultiBindingExpression.BindingExpressions" />
        <element api="P:System.Windows.Data.MultiBindingExpression.HasError" />
        <element api="P:System.Windows.Data.MultiBindingExpression.HasValidationError" />
        <element api="P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding" />
        <element api="P:System.Windows.Data.MultiBindingExpression.ValidationError" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBindingExpression" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.MultiBindingExpression.BindingExpressions">
      <topicdata group="api" />
      <apidata name="BindingExpressions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BindingExpressions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.MultiBindingExpression.HasError">
      <topicdata group="api" />
      <apidata name="HasError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.BindingExpressionBase.HasError">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.MultiBindingExpression.HasValidationError">
      <topicdata group="api" />
      <apidata name="HasValidationError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.BindingExpressionBase.HasValidationError">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasValidationError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding">
      <topicdata group="api" />
      <apidata name="ParentMultiBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParentMultiBinding" />
      <returns>
        <type api="T:System.Windows.Data.MultiBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.MultiBindingExpression.UpdateSource">
      <topicdata group="api" />
      <apidata name="UpdateSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.MultiBindingExpression.UpdateTarget">
      <topicdata group="api" />
      <apidata name="UpdateTarget" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.MultiBindingExpression.ValidationError">
      <topicdata group="api" />
      <apidata name="ValidationError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.BindingExpressionBase.ValidationError">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidationError" />
      <returns>
        <type api="T:System.Windows.Controls.ValidationError" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.MultiBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.ObjectDataProvider">
      <topicdata group="api" />
      <apidata name="ObjectDataProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.ObjectDataProvider.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Windows.Data.DataSourceProvider.DataChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataSourceProvider.BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.EndInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.InitialLoad" />
        <element api="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="Overload:System.Windows.Data.ObjectDataProvider.OnQueryFinished">
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)" />
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)" />
        </element>
        <element api="M:System.Windows.Data.DataSourceProvider.Refresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit" />
        <element api="M:System.Windows.Data.ObjectDataProvider.#ctor" />
        <element api="M:System.Windows.Data.ObjectDataProvider.BeginQuery" />
        <element api="P:System.Windows.Data.DataSourceProvider.Data" />
        <element api="P:System.Windows.Data.DataSourceProvider.Dispatcher" />
        <element api="P:System.Windows.Data.DataSourceProvider.Error" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred" />
        <element api="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" />
        <element api="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <element api="P:System.Windows.Data.ObjectDataProvider.MethodName" />
        <element api="P:System.Windows.Data.ObjectDataProvider.MethodParameters" />
        <element api="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />
        <element api="P:System.Windows.Data.ObjectDataProvider.ObjectType" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.LocalizabilityAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.LocalizationCategory" ref="false" />
            <enumValue>
              <field name="NeverLocalize" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Data.ObjectDataProvider">
      <topicdata name="ObjectDataProvider" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.ObjectDataProvider" />
      <apidata name="ObjectDataProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.ObjectDataProvider.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataSourceProvider.BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.EndInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.InitialLoad" />
        <element api="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="Overload:System.Windows.Data.ObjectDataProvider.OnQueryFinished">
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)" />
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)" />
        </element>
        <element api="M:System.Windows.Data.DataSourceProvider.Refresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit" />
        <element api="M:System.Windows.Data.ObjectDataProvider.BeginQuery" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.ObjectDataProvider">
      <topicdata name="ObjectDataProvider" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.ObjectDataProvider" />
      <apidata name="ObjectDataProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.ObjectDataProvider.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.DataSourceProvider.Data" />
        <element api="P:System.Windows.Data.DataSourceProvider.Dispatcher" />
        <element api="P:System.Windows.Data.DataSourceProvider.Error" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred" />
        <element api="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" />
        <element api="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <element api="P:System.Windows.Data.ObjectDataProvider.MethodName" />
        <element api="P:System.Windows.Data.ObjectDataProvider.MethodParameters" />
        <element api="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />
        <element api="P:System.Windows.Data.ObjectDataProvider.ObjectType" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.ObjectDataProvider">
      <topicdata name="ObjectDataProvider" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.ObjectDataProvider" />
      <apidata name="ObjectDataProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.ObjectDataProvider.#ctor" />
      <elements>
        <element api="E:System.Windows.Data.DataSourceProvider.DataChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ObjectDataProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ObjectDataProvider.BeginQuery">
      <topicdata group="api" />
      <apidata name="BeginQuery" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters">
      <topicdata group="api" />
      <apidata name="ConstructorParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConstructorParameters" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous">
      <topicdata group="api" />
      <apidata name="IsAsynchronous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsAsynchronous" />
      <setter name="set_IsAsynchronous" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.ObjectDataProvider.MethodName">
      <topicdata group="api" />
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MethodName" />
      <setter name="set_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.ObjectDataProvider.MethodParameters">
      <topicdata group="api" />
      <apidata name="MethodParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MethodParameters" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ObjectDataProvider.ObjectInstance">
      <topicdata group="api" />
      <apidata name="ObjectInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ObjectInstance" />
      <setter name="set_ObjectInstance" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ObjectDataProvider.ObjectType">
      <topicdata group="api" />
      <apidata name="ObjectType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ObjectType" />
      <setter name="set_ObjectType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ObjectDataProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.PriorityBinding">
      <topicdata group="api" />
      <apidata name="PriorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.PriorityBinding.#ctor" contentProperty="P:System.Windows.Data.PriorityBinding.Bindings" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.BindingBase" ref="true" />
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IAddChild" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
        <element api="M:System.Windows.Data.PriorityBinding.#ctor" />
        <element api="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
        <element api="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddText(System.String)" />
        <element api="P:System.Windows.Data.BindingBase.BindingGroupName" />
        <element api="P:System.Windows.Data.BindingBase.Delay" />
        <element api="P:System.Windows.Data.BindingBase.FallbackValue" />
        <element api="P:System.Windows.Data.BindingBase.StringFormat" />
        <element api="P:System.Windows.Data.BindingBase.TargetNullValue" />
        <element api="P:System.Windows.Data.PriorityBinding.Bindings" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Bindings</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Data.PriorityBinding">
      <topicdata name="PriorityBinding" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.PriorityBinding" />
      <apidata name="PriorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.PriorityBinding.#ctor" contentProperty="P:System.Windows.Data.PriorityBinding.Bindings" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
        <element api="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
        <element api="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddText(System.String)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBinding" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.PriorityBinding">
      <topicdata name="PriorityBinding" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.PriorityBinding" />
      <apidata name="PriorityBinding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.PriorityBinding.#ctor" contentProperty="P:System.Windows.Data.PriorityBinding.Bindings" />
      <elements>
        <element api="P:System.Windows.Data.BindingBase.BindingGroupName" />
        <element api="P:System.Windows.Data.BindingBase.Delay" />
        <element api="P:System.Windows.Data.BindingBase.FallbackValue" />
        <element api="P:System.Windows.Data.BindingBase.StringFormat" />
        <element api="P:System.Windows.Data.BindingBase.TargetNullValue" />
        <element api="P:System.Windows.Data.PriorityBinding.Bindings" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBinding" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.PriorityBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBinding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.PriorityBinding.Bindings">
      <topicdata group="api" />
      <apidata name="Bindings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bindings" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.BindingBase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <topicdata group="api" eiiName="IAddChild.AddChild" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddChild(System.Object)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBinding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.PriorityBinding.System#Windows#Markup#IAddChild#AddText(System.String)">
      <topicdata group="api" eiiName="IAddChild.AddText" />
      <apidata name="AddText" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddText(System.String)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBinding" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.PriorityBindingExpression">
      <topicdata group="api" />
      <apidata name="PriorityBindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          <type api="T:System.Windows.Expression" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
        <element api="M:System.Windows.Data.PriorityBindingExpression.UpdateSource" />
        <element api="M:System.Windows.Data.PriorityBindingExpression.UpdateTarget" />
        <element api="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Status" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Target" />
        <element api="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
        <element api="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" />
        <element api="P:System.Windows.Data.PriorityBindingExpression.BindingExpressions" />
        <element api="P:System.Windows.Data.PriorityBindingExpression.HasValidationError" />
        <element api="P:System.Windows.Data.PriorityBindingExpression.ParentPriorityBinding" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.PriorityBindingExpression">
      <topicdata name="PriorityBindingExpression" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.PriorityBindingExpression" />
      <apidata name="PriorityBindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.BindingExpressionBase.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
        <element api="M:System.Windows.Data.BindingExpressionBase.ValidateWithoutUpdate" />
        <element api="M:System.Windows.Data.PriorityBindingExpression.UpdateSource" />
        <element api="M:System.Windows.Data.PriorityBindingExpression.UpdateTarget" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBindingExpression" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.PriorityBindingExpression">
      <topicdata name="PriorityBindingExpression" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.PriorityBindingExpression" />
      <apidata name="PriorityBindingExpression" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.BindingExpressionBase.BindingGroup" />
        <element api="P:System.Windows.Data.BindingExpressionBase.HasError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.IsDirty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Status" />
        <element api="P:System.Windows.Data.BindingExpressionBase.Target" />
        <element api="P:System.Windows.Data.BindingExpressionBase.TargetProperty" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationError" />
        <element api="P:System.Windows.Data.BindingExpressionBase.ValidationErrors" />
        <element api="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" />
        <element api="P:System.Windows.Data.PriorityBindingExpression.BindingExpressions" />
        <element api="P:System.Windows.Data.PriorityBindingExpression.HasValidationError" />
        <element api="P:System.Windows.Data.PriorityBindingExpression.ParentPriorityBinding" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBindingExpression" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression">
      <topicdata group="api" />
      <apidata name="ActiveBindingExpression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActiveBindingExpression" />
      <returns>
        <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.PriorityBindingExpression.BindingExpressions">
      <topicdata group="api" />
      <apidata name="BindingExpressions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BindingExpressions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.PriorityBindingExpression.HasValidationError">
      <topicdata group="api" />
      <apidata name="HasValidationError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Windows.Data.BindingExpressionBase.HasValidationError">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HasValidationError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.PriorityBindingExpression.ParentPriorityBinding">
      <topicdata group="api" />
      <apidata name="ParentPriorityBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParentPriorityBinding" />
      <returns>
        <type api="T:System.Windows.Data.PriorityBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.PriorityBindingExpression.UpdateSource">
      <topicdata group="api" />
      <apidata name="UpdateSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.PriorityBindingExpression.UpdateTarget">
      <topicdata group="api" />
      <apidata name="UpdateTarget" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
          <type api="T:System.Windows.Data.BindingExpressionBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PriorityBindingExpression" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.PropertyGroupDescription">
      <topicdata group="api" />
      <apidata name="PropertyGroupDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.PropertyGroupDescription.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.GroupDescription" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.GroupDescription.PropertyChanged" />
        <element api="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Data.PropertyGroupDescription.#ctor">
          <element api="M:System.Windows.Data.PropertyGroupDescription.#ctor" />
          <element api="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)" />
          <element api="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)" />
          <element api="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)" />
        </element>
        <element api="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)" />
        <element api="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)" />
        <element api="P:System.ComponentModel.GroupDescription.CustomSort" />
        <element api="P:System.ComponentModel.GroupDescription.GroupNames" />
        <element api="P:System.ComponentModel.GroupDescription.SortDescriptions" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.CompareNameAscending" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.CompareNameDescending" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.Converter" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.PropertyName" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.StringComparison" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.PropertyGroupDescription">
      <topicdata name="PropertyGroupDescription" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.PropertyGroupDescription" />
      <apidata name="PropertyGroupDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.PropertyGroupDescription.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.GroupDescription.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)" />
        <element api="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.PropertyGroupDescription">
      <topicdata name="PropertyGroupDescription" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.PropertyGroupDescription" />
      <apidata name="PropertyGroupDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.PropertyGroupDescription.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.GroupDescription.CustomSort" />
        <element api="P:System.ComponentModel.GroupDescription.GroupNames" />
        <element api="P:System.ComponentModel.GroupDescription.SortDescriptions" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.CompareNameAscending" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.CompareNameDescending" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.Converter" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.PropertyName" />
        <element api="P:System.Windows.Data.PropertyGroupDescription.StringComparison" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.PropertyGroupDescription">
      <topicdata name="PropertyGroupDescription" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.PropertyGroupDescription" />
      <apidata name="PropertyGroupDescription" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.PropertyGroupDescription.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.GroupDescription.PropertyChanged" />
        <element api="E:System.ComponentModel.GroupDescription.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.PropertyGroupDescription.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Data.PropertyGroupDescription.#ctor" />
        <element api="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)" />
        <element api="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)" />
        <element api="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.PropertyGroupDescription.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.PropertyGroupDescription.#ctor" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.PropertyGroupDescription.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.PropertyGroupDescription.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="converter">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.PropertyGroupDescription.#ctor" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="converter">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </parameter>
        <parameter name="stringComparison">
          <type api="T:System.StringComparison" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.PropertyGroupDescription.CompareNameAscending">
      <topicdata group="api" />
      <apidata name="CompareNameAscending" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CompareNameAscending" />
      <returns>
        <type api="T:System.Collections.IComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.PropertyGroupDescription.CompareNameDescending">
      <topicdata group="api" />
      <apidata name="CompareNameDescending" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CompareNameDescending" />
      <returns>
        <type api="T:System.Collections.IComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.PropertyGroupDescription.Converter">
      <topicdata group="api" />
      <apidata name="Converter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Converter" />
      <setter name="set_Converter" />
      <returns>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name="GroupNameFromItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
          <type api="T:System.ComponentModel.GroupDescription" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="level">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="NamesMatch" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.GroupDescription.NamesMatch(System.Object,System.Object)">
          <type api="T:System.ComponentModel.GroupDescription" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="groupName">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="itemName">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
      <topicdata group="api" />
      <apidata name="PropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyName" />
      <setter name="set_PropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
      <topicdata group="api" />
      <apidata name="StringComparison" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StringComparison" />
      <setter name="set_StringComparison" />
      <returns>
        <type api="T:System.StringComparison" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.PropertyGroupDescription" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.StringComparison" ref="false" />
            <enumValue>
              <field name="Ordinal" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Windows.Data.RelativeSource">
      <topicdata group="api" />
      <apidata name="RelativeSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.RelativeSource.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Data.RelativeSource.#ctor">
          <element api="M:System.Windows.Data.RelativeSource.#ctor" />
          <element api="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)" />
          <element api="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)" />
        </element>
        <element api="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)" />
        <element api="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit" />
        <element api="P:System.Windows.Data.RelativeSource.AncestorLevel" />
        <element api="P:System.Windows.Data.RelativeSource.AncestorType" />
        <element api="P:System.Windows.Data.RelativeSource.Mode" />
        <element api="P:System.Windows.Data.RelativeSource.PreviousData" />
        <element api="P:System.Windows.Data.RelativeSource.Self" />
        <element api="P:System.Windows.Data.RelativeSource.TemplatedParent" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.Data.RelativeSource" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Data.RelativeSource">
      <topicdata name="RelativeSource" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.RelativeSource" />
      <apidata name="RelativeSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.RelativeSource.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)" />
        <element api="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.RelativeSource">
      <topicdata name="RelativeSource" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.RelativeSource" />
      <apidata name="RelativeSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.RelativeSource.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.RelativeSource.AncestorLevel" />
        <element api="P:System.Windows.Data.RelativeSource.AncestorType" />
        <element api="P:System.Windows.Data.RelativeSource.Mode" />
        <element api="P:System.Windows.Data.RelativeSource.PreviousData" />
        <element api="P:System.Windows.Data.RelativeSource.Self" />
        <element api="P:System.Windows.Data.RelativeSource.TemplatedParent" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.RelativeSource.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Data.RelativeSource.#ctor" />
        <element api="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)" />
        <element api="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.RelativeSource.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.RelativeSource.#ctor" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.RelativeSource.#ctor" />
      <parameters>
        <parameter name="mode">
          <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.RelativeSource.#ctor" />
      <parameters>
        <parameter name="mode">
          <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
        </parameter>
        <parameter name="ancestorType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ancestorLevel">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.RelativeSource.AncestorLevel">
      <topicdata group="api" />
      <apidata name="AncestorLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AncestorLevel" />
      <setter name="set_AncestorLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.RelativeSource.AncestorType">
      <topicdata group="api" />
      <apidata name="AncestorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AncestorType" />
      <setter name="set_AncestorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.RelativeSource.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.RelativeSource.PreviousData">
      <topicdata group="api" />
      <apidata name="PreviousData" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PreviousData" />
      <returns>
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="ProvideValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.RelativeSource.Self">
      <topicdata group="api" />
      <apidata name="Self" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Self" />
      <returns>
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit">
      <topicdata group="api" eiiName="ISupportInitialize.BeginInit" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit">
      <topicdata group="api" eiiName="ISupportInitialize.EndInit" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.RelativeSource.TemplatedParent">
      <topicdata group="api" />
      <apidata name="TemplatedParent" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TemplatedParent" />
      <returns>
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSource" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.RelativeSourceMode">
      <topicdata group="api" />
      <apidata name="RelativeSourceMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Data.RelativeSourceMode.PreviousData" />
        <element api="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" />
        <element api="F:System.Windows.Data.RelativeSourceMode.Self" />
        <element api="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.RelativeSourceMode.FindAncestor">
      <topicdata group="api" notopic="" />
      <apidata name="FindAncestor" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.RelativeSourceMode.PreviousData">
      <topicdata group="api" notopic="" />
      <apidata name="PreviousData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.RelativeSourceMode.Self">
      <topicdata group="api" notopic="" />
      <apidata name="Self" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
      <topicdata group="api" notopic="" />
      <apidata name="TemplatedParent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.RelativeSourceMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.UpdateSourceExceptionFilterCallback">
      <topicdata group="api" />
      <apidata name="UpdateSourceExceptionFilterCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="bindExpression">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.UpdateSourceTrigger">
      <topicdata group="api" />
      <apidata name="UpdateSourceTrigger" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Windows.Data.UpdateSourceTrigger.Default" />
        <element api="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />
        <element api="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />
        <element api="F:System.Windows.Data.UpdateSourceTrigger.Explicit" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.UpdateSourceTrigger.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
      <topicdata group="api" notopic="" />
      <apidata name="Explicit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.UpdateSourceTrigger.LostFocus">
      <topicdata group="api" notopic="" />
      <apidata name="LostFocus" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </containers>
    </api>
    <api id="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged">
      <topicdata group="api" notopic="" />
      <apidata name="PropertyChanged" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.UpdateSourceTrigger" ref="false" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.ValueConversionAttribute">
      <topicdata group="api" />
      <apidata name="ValueConversionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)" />
        <element api="M:System.Windows.Data.ValueConversionAttribute.GetHashCode" />
        <element api="P:System.Windows.Data.ValueConversionAttribute.ParameterType" />
        <element api="P:System.Windows.Data.ValueConversionAttribute.SourceType" />
        <element api="P:System.Windows.Data.ValueConversionAttribute.TargetType" />
        <element api="P:System.Windows.Data.ValueConversionAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Data.ValueConversionAttribute">
      <topicdata name="ValueConversionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.ValueConversionAttribute" />
      <apidata name="ValueConversionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.ValueConversionAttribute.GetHashCode" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueConversionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.ValueConversionAttribute">
      <topicdata name="ValueConversionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.ValueConversionAttribute" />
      <apidata name="ValueConversionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Windows.Data.ValueConversionAttribute.ParameterType" />
        <element api="P:System.Windows.Data.ValueConversionAttribute.SourceType" />
        <element api="P:System.Windows.Data.ValueConversionAttribute.TargetType" />
        <element api="P:System.Windows.Data.ValueConversionAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueConversionAttribute" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ValueConversionAttribute.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Attribute.GetHashCode">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ValueConversionAttribute.ParameterType">
      <topicdata group="api" />
      <apidata name="ParameterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterType" />
      <setter name="set_ParameterType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ValueConversionAttribute.SourceType">
      <topicdata group="api" />
      <apidata name="SourceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ValueConversionAttribute.TargetType">
      <topicdata group="api" />
      <apidata name="TargetType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.ValueConversionAttribute.TypeId">
      <topicdata group="api" />
      <apidata name="TypeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Attribute.TypeId">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TypeId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.ValueUnavailableException">
      <topicdata group="api" />
      <apidata name="ValueUnavailableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Windows.Data.ValueUnavailableException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Windows.Data.ValueUnavailableException.#ctor">
          <element api="M:System.Windows.Data.ValueUnavailableException.#ctor" />
          <element api="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String)" />
          <element api="M:System.Windows.Data.ValueUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.ValueUnavailableException">
      <topicdata name="ValueUnavailableException" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.ValueUnavailableException" />
      <apidata name="ValueUnavailableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Windows.Data.ValueUnavailableException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueUnavailableException" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.ValueUnavailableException">
      <topicdata name="ValueUnavailableException" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.ValueUnavailableException" />
      <apidata name="ValueUnavailableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Windows.Data.ValueUnavailableException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueUnavailableException" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.ValueUnavailableException">
      <topicdata name="ValueUnavailableException" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.ValueUnavailableException" />
      <apidata name="ValueUnavailableException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Windows.Data.ValueUnavailableException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueUnavailableException" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.ValueUnavailableException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Data.ValueUnavailableException.#ctor" />
        <element api="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String)" />
        <element api="M:System.Windows.Data.ValueUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueUnavailableException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ValueUnavailableException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.ValueUnavailableException.#ctor" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueUnavailableException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ValueUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Windows.Data.ValueUnavailableException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueUnavailableException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.ValueUnavailableException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueUnavailableException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.ValueUnavailableException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.ValueUnavailableException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.ValueUnavailableException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.XmlDataProvider">
      <topicdata group="api" />
      <apidata name="XmlDataProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlDataProvider.#ctor" contentProperty="P:System.Windows.Data.XmlDataProvider.XmlSerializer" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IUriContext" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Windows.Data.DataSourceProvider.DataChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataSourceProvider.BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.InitialLoad" />
        <element api="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="Overload:System.Windows.Data.XmlDataProvider.OnQueryFinished">
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)" />
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)" />
        </element>
        <element api="M:System.Windows.Data.DataSourceProvider.Refresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit" />
        <element api="M:System.Windows.Data.XmlDataProvider.#ctor" />
        <element api="M:System.Windows.Data.XmlDataProvider.BeginQuery" />
        <element api="M:System.Windows.Data.XmlDataProvider.EndInit" />
        <element api="P:System.Windows.Data.DataSourceProvider.Data" />
        <element api="P:System.Windows.Data.DataSourceProvider.Dispatcher" />
        <element api="P:System.Windows.Data.DataSourceProvider.Error" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred" />
        <element api="P:System.Windows.Data.XmlDataProvider.BaseUri" />
        <element api="P:System.Windows.Data.XmlDataProvider.Document" />
        <element api="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <element api="P:System.Windows.Data.XmlDataProvider.Source" />
        <element api="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri" />
        <element api="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager" />
        <element api="P:System.Windows.Data.XmlDataProvider.XPath" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.LocalizabilityAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.LocalizationCategory" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
          <assignment name="Readability">
            <type api="T:System.Windows.Readability" ref="false" />
            <enumValue>
              <field name="Unreadable" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>XmlSerializer</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Data.XmlDataProvider">
      <topicdata name="XmlDataProvider" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.XmlDataProvider" />
      <apidata name="XmlDataProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlDataProvider.#ctor" contentProperty="P:System.Windows.Data.XmlDataProvider.XmlSerializer" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.DataSourceProvider.BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.InitialLoad" />
        <element api="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="Overload:System.Windows.Data.XmlDataProvider.OnQueryFinished">
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)" />
          <element api="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)" />
        </element>
        <element api="M:System.Windows.Data.DataSourceProvider.Refresh" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit" />
        <element api="M:System.Windows.Data.XmlDataProvider.BeginQuery" />
        <element api="M:System.Windows.Data.XmlDataProvider.EndInit" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.XmlDataProvider">
      <topicdata name="XmlDataProvider" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.XmlDataProvider" />
      <apidata name="XmlDataProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlDataProvider.#ctor" contentProperty="P:System.Windows.Data.XmlDataProvider.XmlSerializer" />
      <elements>
        <element api="P:System.Windows.Data.DataSourceProvider.Data" />
        <element api="P:System.Windows.Data.DataSourceProvider.Dispatcher" />
        <element api="P:System.Windows.Data.DataSourceProvider.Error" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
        <element api="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred" />
        <element api="P:System.Windows.Data.XmlDataProvider.BaseUri" />
        <element api="P:System.Windows.Data.XmlDataProvider.Document" />
        <element api="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <element api="P:System.Windows.Data.XmlDataProvider.Source" />
        <element api="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri" />
        <element api="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager" />
        <element api="P:System.Windows.Data.XmlDataProvider.XPath" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" />
      </containers>
    </api>
    <api id="Events.T:System.Windows.Data.XmlDataProvider">
      <topicdata name="XmlDataProvider" group="list" subgroup="Events" typeTopicId="T:System.Windows.Data.XmlDataProvider" />
      <apidata name="XmlDataProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlDataProvider.#ctor" contentProperty="P:System.Windows.Data.XmlDataProvider.XmlSerializer" />
      <elements>
        <element api="E:System.Windows.Data.DataSourceProvider.DataChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />
        <element api="E:System.Windows.Data.DataSourceProvider.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlDataProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.XmlDataProvider.BaseUri">
      <topicdata group="api" />
      <apidata name="BaseUri" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BaseUri" />
      <setter name="set_BaseUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlDataProvider.BeginQuery">
      <topicdata group="api" />
      <apidata name="BeginQuery" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.DataSourceProvider.BeginQuery">
          <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.XmlDataProvider.Document">
      <topicdata group="api" />
      <apidata name="Document" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Document" />
      <setter name="set_Document" />
      <returns>
        <type api="T:System.Xml.XmlDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Windows.Data.XmlDataProvider.EndInit">
      <topicdata group="api" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Data.DataSourceProvider.EndInit">
          <type api="T:System.Windows.Data.DataSourceProvider" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.XmlDataProvider.IsAsynchronous">
      <topicdata group="api" />
      <apidata name="IsAsynchronous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsAsynchronous" />
      <setter name="set_IsAsynchronous" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.XmlDataProvider.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Source" />
      <setter name="set_Source" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.XmlDataProvider.System#Windows#Markup#IUriContext#BaseUri">
      <topicdata group="api" eiiName="IUriContext.BaseUri" />
      <apidata name="BaseUri" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Windows.Markup.IUriContext.BaseUri" />
      <setter name="set_System.Windows.Markup.IUriContext.BaseUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Markup.IUriContext.BaseUri">
          <type api="T:System.Windows.Markup.IUriContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager">
      <topicdata group="api" />
      <apidata name="XmlNamespaceManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XmlNamespaceManager" />
      <setter name="set_XmlNamespaceManager" />
      <returns>
        <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Windows.Data.XmlDataProvider.XPath">
      <topicdata group="api" />
      <apidata name="XPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_XPath" />
      <setter name="set_XPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlDataProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.XmlNamespaceMapping">
      <topicdata group="api" />
      <apidata name="XmlNamespaceMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlNamespaceMapping.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Windows.Data.XmlNamespaceMapping.#ctor">
          <element api="M:System.Windows.Data.XmlNamespaceMapping.#ctor" />
          <element api="M:System.Windows.Data.XmlNamespaceMapping.#ctor(System.String,System.Uri)" />
        </element>
        <element api="M:System.Windows.Data.XmlNamespaceMapping.Equals(System.Object)" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.GetHashCode" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.op_Equality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.op_Inequality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#EndInit" />
        <element api="P:System.Windows.Data.XmlNamespaceMapping.Prefix" />
        <element api="P:System.Windows.Data.XmlNamespaceMapping.Uri" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
    </api>
    <api id="Methods.T:System.Windows.Data.XmlNamespaceMapping">
      <topicdata name="XmlNamespaceMapping" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.XmlNamespaceMapping" />
      <apidata name="XmlNamespaceMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlNamespaceMapping.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.Equals(System.Object)" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.GetHashCode" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#BeginInit" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#EndInit" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" />
      </containers>
    </api>
    <api id="Operators.T:System.Windows.Data.XmlNamespaceMapping">
      <topicdata name="XmlNamespaceMapping" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Windows.Data.XmlNamespaceMapping" />
      <apidata name="XmlNamespaceMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlNamespaceMapping.#ctor" />
      <elements>
        <element api="M:System.Windows.Data.XmlNamespaceMapping.op_Equality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.op_Inequality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.XmlNamespaceMapping">
      <topicdata name="XmlNamespaceMapping" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.XmlNamespaceMapping" />
      <apidata name="XmlNamespaceMapping" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlNamespaceMapping.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.XmlNamespaceMapping.Prefix" />
        <element api="P:System.Windows.Data.XmlNamespaceMapping.Uri" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" />
      </containers>
    </api>
    <api id="Overload:System.Windows.Data.XmlNamespaceMapping.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Windows.Data.XmlNamespaceMapping.#ctor" />
        <element api="M:System.Windows.Data.XmlNamespaceMapping.#ctor(System.String,System.Uri)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMapping.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.XmlNamespaceMapping.#ctor" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMapping.#ctor(System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Windows.Data.XmlNamespaceMapping.#ctor" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMapping.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMapping.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMapping.op_Equality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mappingA">
          <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
        </parameter>
        <parameter name="mappingB">
          <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMapping.op_Inequality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mappingA">
          <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
        </parameter>
        <parameter name="mappingB">
          <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.XmlNamespaceMapping.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prefix" />
      <setter name="set_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#BeginInit">
      <topicdata group="api" eiiName="ISupportInitialize.BeginInit" />
      <apidata name="BeginInit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.BeginInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMapping.System#ComponentModel#ISupportInitialize#EndInit">
      <topicdata group="api" eiiName="ISupportInitialize.EndInit" />
      <apidata name="EndInit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.ISupportInitialize.EndInit">
          <type api="T:System.ComponentModel.ISupportInitialize" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.XmlNamespaceMapping.Uri">
      <topicdata group="api" />
      <apidata name="Uri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Uri" />
      <setter name="set_Uri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
      </containers>
    </api>
    <api id="T:System.Windows.Data.XmlNamespaceMappingCollection">
      <topicdata group="api" />
      <apidata name="XmlNamespaceMappingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Windows.Markup.IAddChild" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.Add(System.Windows.Data.XmlNamespaceMapping)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.AddChild(System.Object)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.AddText(System.String)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.Clear" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.Contains(System.Windows.Data.XmlNamespaceMapping)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.CopyTo(System.Windows.Data.XmlNamespaceMapping[],System.Int32)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.GetEnumerator" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.ProtectedGetEnumerator" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.Remove(System.Windows.Data.XmlNamespaceMapping)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Collections#Generic#IEnumerable{System#Windows#Data#XmlNamespaceMapping}#GetEnumerator" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddText(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
        <element api="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.PopScope" />
        <element api="M:System.Xml.XmlNamespaceManager.PushScope" />
        <element api="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
        <element api="P:System.Windows.Data.XmlNamespaceMappingCollection.Count" />
        <element api="P:System.Windows.Data.XmlNamespaceMappingCollection.IsReadOnly" />
        <element api="P:System.Xml.XmlNamespaceManager.DefaultNamespace" />
        <element api="P:System.Xml.XmlNamespaceManager.NameTable" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.LocalizabilityAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.LocalizationCategory" ref="false" />
            <enumValue>
              <field name="NeverLocalize" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Windows.Data.XmlNamespaceMappingCollection">
      <topicdata name="XmlNamespaceMappingCollection" group="list" subgroup="Methods" typeTopicId="T:System.Windows.Data.XmlNamespaceMappingCollection" />
      <apidata name="XmlNamespaceMappingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.Add(System.Windows.Data.XmlNamespaceMapping)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.AddChild(System.Object)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.AddText(System.String)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.Clear" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.Contains(System.Windows.Data.XmlNamespaceMapping)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.CopyTo(System.Windows.Data.XmlNamespaceMapping[],System.Int32)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.GetEnumerator" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.ProtectedGetEnumerator" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.Remove(System.Windows.Data.XmlNamespaceMapping)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Collections#Generic#IEnumerable{System#Windows#Data#XmlNamespaceMapping}#GetEnumerator" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
        <element api="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddText(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
        <element api="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.PopScope" />
        <element api="M:System.Xml.XmlNamespaceManager.PushScope" />
        <element api="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Windows.Data.XmlNamespaceMappingCollection">
      <topicdata name="XmlNamespaceMappingCollection" group="list" subgroup="Properties" typeTopicId="T:System.Windows.Data.XmlNamespaceMappingCollection" />
      <apidata name="XmlNamespaceMappingCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor" />
      <elements>
        <element api="P:System.Windows.Data.XmlNamespaceMappingCollection.Count" />
        <element api="P:System.Windows.Data.XmlNamespaceMappingCollection.IsReadOnly" />
        <element api="P:System.Xml.XmlNamespaceManager.DefaultNamespace" />
        <element api="P:System.Xml.XmlNamespaceManager.NameTable" />
      </elements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.Add(System.Windows.Data.XmlNamespaceMapping)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mapping">
          <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.AddChild(System.Object)">
      <topicdata group="api" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.AddText(System.String)">
      <topicdata group="api" />
      <apidata name="AddText" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.Contains(System.Windows.Data.XmlNamespaceMapping)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mapping">
          <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.CopyTo(System.Windows.Data.XmlNamespaceMapping[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.XmlNamespaceMappingCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlNamespaceManager.GetEnumerator">
          <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Windows.Data.XmlNamespaceMappingCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.ProtectedGetEnumerator">
      <topicdata group="api" />
      <apidata name="ProtectedGetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.Remove(System.Windows.Data.XmlNamespaceMapping)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="mapping">
          <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Collections#Generic#IEnumerable{System#Windows#Data#XmlNamespaceMapping}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable`1.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Windows.Data.XmlNamespaceMapping" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddChild(System.Object)">
      <topicdata group="api" eiiName="IAddChild.AddChild" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddChild(System.Object)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Windows.Data.XmlNamespaceMappingCollection.System#Windows#Markup#IAddChild#AddText(System.String)">
      <topicdata group="api" eiiName="IAddChild.AddText" />
      <apidata name="AddText" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddText(System.String)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="PresentationFramework" module="PresentationFramework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Windows.Data" />
        <type api="T:System.Windows.Data.XmlNamespaceMappingCollection" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>