<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ComponentModel.Composition.Registration">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.Registration.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.Registration.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.Registration.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ComponentModel.Composition.Registration">
      <topicdata group="api" />
      <apidata name="System.ComponentModel.Composition.Registration" group="namespace" />
      <elements>
        <element api="T:System.ComponentModel.Composition.Registration.ExportBuilder" />
        <element api="T:System.ComponentModel.Composition.Registration.ImportBuilder" />
        <element api="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder" />
        <element api="T:System.ComponentModel.Composition.Registration.PartBuilder" />
        <element api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
        <element api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" />
      </elements>
    </api>
    <api id="T:System.ComponentModel.Composition.Registration.ExportBuilder">
      <topicdata group="api" />
      <apidata name="ExportBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Registration.ExportBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.#ctor" />
        <element api="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata">
          <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
          <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName(System.String)" />
        <element api="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType">
          <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType``1" />
          <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.Inherited" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Registration.ExportBuilder">
      <topicdata name="ExportBuilder" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Registration.ExportBuilder" />
      <apidata name="ExportBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Registration.ExportBuilder.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata">
          <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
          <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName(System.String)" />
        <element api="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType">
          <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType``1" />
          <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.Inherited" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata">
      <topicdata name="AddMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
        <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType">
      <topicdata name="AsContractType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AsContractType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType``1" />
        <element api="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ExportBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})">
      <topicdata group="api" />
      <apidata name="AddMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemFunc">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="AddMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AddMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractName(System.String)">
      <topicdata group="api" />
      <apidata name="AsContractName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType``1">
      <topicdata group="api" />
      <apidata name="AsContractType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType(System.Type)">
      <topicdata group="api" />
      <apidata name="AsContractType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.ExportBuilder.AsContractType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ExportBuilder.Inherited">
      <topicdata group="api" />
      <apidata name="Inherited" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Composition.Registration.ImportBuilder">
      <topicdata group="api" />
      <apidata name="ImportBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Registration.ImportBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.#ctor" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(System.String)" />
        <element api="Overload:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType">
          <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType``1" />
          <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(System.Boolean)" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.Source(System.ComponentModel.Composition.ImportSource)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Registration.ImportBuilder">
      <topicdata name="ImportBuilder" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Registration.ImportBuilder" />
      <apidata name="ImportBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Registration.ImportBuilder.#ctor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(System.String)" />
        <element api="Overload:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType">
          <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType``1" />
          <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(System.Type)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(System.Boolean)" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.Source(System.ComponentModel.Composition.ImportSource)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType">
      <topicdata name="AsContractType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AsContractType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType``1" />
        <element api="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ImportBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowDefault">
      <topicdata group="api" />
      <apidata name="AllowDefault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AllowRecomposition">
      <topicdata group="api" />
      <apidata name="AllowRecomposition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractName(System.String)">
      <topicdata group="api" />
      <apidata name="AsContractName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType``1">
      <topicdata group="api" />
      <apidata name="AsContractType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType(System.Type)">
      <topicdata group="api" />
      <apidata name="AsContractType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.ImportBuilder.AsContractType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ImportBuilder.AsMany(System.Boolean)">
      <topicdata group="api" />
      <apidata name="AsMany" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="isMany" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ImportBuilder.RequiredCreationPolicy(System.ComponentModel.Composition.CreationPolicy)">
      <topicdata group="api" />
      <apidata name="RequiredCreationPolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requiredCreationPolicy">
          <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ImportBuilder.Source(System.ComponentModel.Composition.ImportSource)">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.ComponentModel.Composition.ImportSource" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder">
      <topicdata group="api" />
      <apidata name="ParameterImportBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.#ctor" />
        <element api="Overload:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import">
          <element api="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1" />
          <element api="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1(System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Registration.ParameterImportBuilder">
      <topicdata name="ParameterImportBuilder" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder" />
      <apidata name="ParameterImportBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import">
          <element api="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1" />
          <element api="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1(System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import">
      <topicdata name="Import" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Import" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1" />
        <element api="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1(System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1">
      <topicdata group="api" />
      <apidata name="Import" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1(System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})">
      <topicdata group="api" />
      <apidata name="Import" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="configure">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Registration.ParameterImportBuilder.Import``1(System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Composition.Registration.PartBuilder">
      <topicdata group="api" />
      <apidata name="PartBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.Export">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Registration.PartBuilder">
      <topicdata name="PartBuilder" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Registration.PartBuilder" />
      <apidata name="PartBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.Export">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata">
      <topicdata name="AddMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.PartBuilder.Export">
      <topicdata name="Export" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Export" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces">
      <topicdata name="ExportInterfaces" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExportInterfaces" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties">
      <topicdata name="ExportProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExportProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties">
      <topicdata name="ImportProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor">
      <topicdata name="SelectConstructor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SelectConstructor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})">
      <topicdata group="api" />
      <apidata name="AddMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="itemFunc">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="AddMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.Export">
      <topicdata group="api" />
      <apidata name="Export" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1">
      <topicdata group="api" />
      <apidata name="Export" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})">
      <topicdata group="api" />
      <apidata name="Export" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exportConfiguration">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.Export``1(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})">
      <topicdata group="api" />
      <apidata name="Export" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="exportConfiguration">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces">
      <topicdata group="api" />
      <apidata name="ExportInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})">
      <topicdata group="api" />
      <apidata name="ExportInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="interfaceFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})">
      <topicdata group="api" />
      <apidata name="ExportInterfaces" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="interfaceFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="exportConfiguration">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})">
      <topicdata group="api" />
      <apidata name="ExportProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
      <topicdata group="api" />
      <apidata name="ExportProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})">
      <topicdata group="api" />
      <apidata name="ExportProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="exportConfiguration">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
              <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})">
      <topicdata group="api" />
      <apidata name="ExportProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="exportConfiguration">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
              <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})">
      <topicdata group="api" />
      <apidata name="ImportProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo})">
      <topicdata group="api" />
      <apidata name="ImportProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})">
      <topicdata group="api" />
      <apidata name="ImportProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="importConfiguration">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
              <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties``1(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})">
      <topicdata group="api" />
      <apidata name="ImportProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="importConfiguration">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Reflection.PropertyInfo" ref="true" />
              <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})">
      <topicdata group="api" />
      <apidata name="SelectConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructorFilter">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Reflection.ConstructorInfo" ref="true" />
              </arrayOf>
              <type api="T:System.Reflection.ConstructorInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})">
      <topicdata group="api" />
      <apidata name="SelectConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructorFilter">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Reflection.ConstructorInfo" ref="true" />
              </arrayOf>
              <type api="T:System.Reflection.ConstructorInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="importConfiguration">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Reflection.ParameterInfo" ref="true" />
              <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)">
      <topicdata group="api" />
      <apidata name="SetCreationPolicy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="creationPolicy">
          <type api="T:System.ComponentModel.Composition.CreationPolicy" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Composition.Registration.PartBuilder`1">
      <topicdata group="api" />
      <apidata name="PartBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.AddMetadata">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.Export">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportInterfaces">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperties">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperties">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Registration.PartBuilder`1">
      <topicdata name="PartBuilder" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
      <apidata name="PartBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.AddMetadata">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Func{System.Type,System.Object})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.AddMetadata(System.String,System.Object)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.Export">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.Export(System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportInterfaces">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportInterfaces(System.Predicate{System.Type},System.Action{System.Type,System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperties">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ExportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperties">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.ImportProperties(System.Predicate{System.Reflection.PropertyInfo},System.Action{System.Reflection.PropertyInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SetCreationPolicy(System.ComponentModel.Composition.CreationPolicy)" />
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor">
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})" />
          <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty">
      <topicdata name="ExportProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ExportProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty">
      <topicdata name="ImportProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ImportProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor">
      <topicdata name="SelectConstructor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SelectConstructor" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo})" />
        <element api="M:System.ComponentModel.Composition.Registration.PartBuilder.SelectConstructor(System.Func{System.Reflection.ConstructorInfo[],System.Reflection.ConstructorInfo},System.Action{System.Reflection.ParameterInfo,System.ComponentModel.Composition.Registration.ImportBuilder})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <topicdata group="api" />
      <apidata name="ExportProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <topicdata group="api" />
      <apidata name="ExportProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TContract" />
      </templates>
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})">
      <topicdata group="api" />
      <apidata name="ExportProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="exportConfiguration">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ExportBuilder})">
      <topicdata group="api" />
      <apidata name="ExportProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ExportProperty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TContract" />
      </templates>
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="exportConfiguration">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Registration.ExportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <topicdata group="api" />
      <apidata name="ImportProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
      <topicdata group="api" />
      <apidata name="ImportProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TContract" />
      </templates>
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})">
      <topicdata group="api" />
      <apidata name="ImportProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="importConfiguration">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{System.ComponentModel.Composition.Registration.ImportBuilder})">
      <topicdata group="api" />
      <apidata name="ImportProperty" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.ImportProperty" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TContract" />
      </templates>
      <parameters>
        <parameter name="propertyFilter">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="importConfiguration">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Registration.ImportBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor(System.Linq.Expressions.Expression{System.Func{System.ComponentModel.Composition.Registration.ParameterImportBuilder,`0}})">
      <topicdata group="api" />
      <apidata name="SelectConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.PartBuilder`1.SelectConstructor" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructorFilter">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ComponentModel.Composition.Registration.ParameterImportBuilder" ref="true" />
                  <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.ComponentModel.Composition.Registration.RegistrationBuilder">
      <topicdata group="api" />
      <apidata name="RegistrationBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Reflection.Context.CustomReflectionContext" ref="true" />
          <type api="T:System.Reflection.ReflectionContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor" />
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType">
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1" />
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom">
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1" />
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching">
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})" />
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes">
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.CreateProperty">
          <element api="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
          <element api="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
        </element>
        <element api="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
        <element api="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
        <element api="M:System.Reflection.ReflectionContext.GetTypeForObject(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
      </containers>
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Registration.RegistrationBuilder">
      <topicdata name="RegistrationBuilder" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" />
      <apidata name="RegistrationBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor" />
      <elements>
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType">
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1" />
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom">
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1" />
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching">
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})" />
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes">
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
          <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
        <element api="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.CreateProperty">
          <element api="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
          <element api="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
        </element>
        <element api="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
        <element api="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
        <element api="M:System.Reflection.ReflectionContext.GetTypeForObject(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType">
      <topicdata name="ForType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ForType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1" />
        <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom">
      <topicdata name="ForTypesDerivedFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ForTypesDerivedFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1" />
        <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching">
      <topicdata name="ForTypesMatching" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ForTypesMatching" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})" />
        <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes">
      <topicdata name="GetCustomAttributes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetCustomAttributes" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
        <element api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1">
      <topicdata group="api" />
      <apidata name="ForType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType(System.Type)">
      <topicdata group="api" />
      <apidata name="ForType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1">
      <topicdata group="api" />
      <apidata name="ForTypesDerivedFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom(System.Type)">
      <topicdata group="api" />
      <apidata name="ForTypesDerivedFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesDerivedFrom" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})">
      <topicdata group="api" />
      <apidata name="ForTypesMatching" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="typeFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching``1(System.Predicate{System.Type})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching(System.Predicate{System.Type})">
      <topicdata group="api" />
      <apidata name="ForTypesMatching" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.ForTypesMatching" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="typeFilter">
          <type api="T:System.Predicate`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Registration.PartBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
      <topicdata group="api" />
      <apidata name="GetCustomAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <type api="T:System.Reflection.Context.CustomReflectionContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="member">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
        <parameter name="declaredAttributes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
      <topicdata group="api" />
      <apidata name="GetCustomAttributes" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Registration.RegistrationBuilder.GetCustomAttributes" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})">
          <type api="T:System.Reflection.Context.CustomReflectionContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Reflection.ParameterInfo" ref="true" />
        </parameter>
        <parameter name="declaredAttributes">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Registration" module="System.ComponentModel.Composition.Registration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Registration" />
        <type api="T:System.ComponentModel.Composition.Registration.RegistrationBuilder" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>