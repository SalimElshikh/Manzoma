<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel.Routing">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.Routing">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.Routing" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.Routing.IDuplexSessionRouter" />
        <element api="T:System.ServiceModel.Routing.IRequestReplyRouter" />
        <element api="T:System.ServiceModel.Routing.ISimplexDatagramRouter" />
        <element api="T:System.ServiceModel.Routing.ISimplexSessionRouter" />
        <element api="T:System.ServiceModel.Routing.RoutingBehavior" />
        <element api="T:System.ServiceModel.Routing.RoutingConfiguration" />
        <element api="T:System.ServiceModel.Routing.RoutingExtension" />
        <element api="T:System.ServiceModel.Routing.RoutingService" />
        <element api="T:System.ServiceModel.Routing.SoapProcessingBehavior" />
      </elements>
    </api>
    <api id="T:System.ServiceModel.Routing.IDuplexSessionRouter">
      <topicdata group="api" />
      <apidata name="IDuplexSessionRouter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.IDuplexSessionRouter">
      <topicdata name="IDuplexSessionRouter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.IDuplexSessionRouter" />
      <apidata name="IDuplexSessionRouter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.IDuplexSessionRouter" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.IDuplexSessionRouter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.IDuplexSessionRouter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.IRequestReplyRouter">
      <topicdata group="api" />
      <apidata name="IRequestReplyRouter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/netfx/2009/05/routing</value>
          </assignment>
          <assignment name="SessionMode">
            <type api="T:System.ServiceModel.SessionMode" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.IRequestReplyRouter">
      <topicdata name="IRequestReplyRouter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.IRequestReplyRouter" />
      <apidata name="IRequestReplyRouter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.IRequestReplyRouter" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.IRequestReplyRouter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
          <assignment name="ReplyAction">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.IRequestReplyRouter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.ISimplexDatagramRouter">
      <topicdata group="api" />
      <apidata name="ISimplexDatagramRouter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/netfx/2009/05/routing</value>
          </assignment>
          <assignment name="SessionMode">
            <type api="T:System.ServiceModel.SessionMode" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.ISimplexDatagramRouter">
      <topicdata name="ISimplexDatagramRouter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.ISimplexDatagramRouter" />
      <apidata name="ISimplexDatagramRouter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.ISimplexDatagramRouter" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.ISimplexDatagramRouter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.ISimplexDatagramRouter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.ISimplexSessionRouter">
      <topicdata group="api" />
      <apidata name="ISimplexSessionRouter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/netfx/2009/05/routing</value>
          </assignment>
          <assignment name="SessionMode">
            <type api="T:System.ServiceModel.SessionMode" ref="false" />
            <enumValue>
              <field name="Required" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.ISimplexSessionRouter">
      <topicdata name="ISimplexSessionRouter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.ISimplexSessionRouter" />
      <apidata name="ISimplexSessionRouter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.ISimplexSessionRouter" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.ISimplexSessionRouter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationContractAttribute" ref="true" />
          <assignment name="AsyncPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="IsOneWay">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Action">
            <type api="T:System.String" ref="true" />
            <value>*</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.ISimplexSessionRouter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.RoutingBehavior">
      <topicdata group="api" />
      <apidata name="RoutingBehavior" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.RoutingBehavior.#ctor(System.ServiceModel.Routing.RoutingConfiguration)" />
        <element api="M:System.ServiceModel.Routing.RoutingBehavior.GetContractForDescription(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.RoutingBehavior">
      <topicdata name="RoutingBehavior" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.RoutingBehavior" />
      <apidata name="RoutingBehavior" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.RoutingBehavior.GetContractForDescription(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingBehavior" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingBehavior.#ctor(System.ServiceModel.Routing.RoutingConfiguration)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="routingConfiguration">
          <type api="T:System.ServiceModel.Routing.RoutingConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingBehavior.GetContractForDescription(System.ServiceModel.Description.ContractDescription)">
      <topicdata group="api" />
      <apidata name="GetContractForDescription" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" eiiName="IServiceBehavior.AddBindingParameters" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceDescription">
          <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHostBase">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
        <parameter name="endpoints">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="bindingParameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IServiceBehavior.ApplyDispatchBehavior" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceDescription">
          <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHostBase">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IServiceBehavior.Validate" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceDescription">
          <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHostBase">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <type api="T:System.ServiceModel.Description.IServiceBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingBehavior" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.RoutingConfiguration">
      <topicdata group="api" />
      <apidata name="RoutingConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Routing.RoutingConfiguration.#ctor">
          <element api="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor" />
          <element api="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)" />
        </element>
        <element api="P:System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch" />
        <element api="P:System.ServiceModel.Routing.RoutingConfiguration.FilterTable" />
        <element api="P:System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly" />
        <element api="P:System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.RoutingConfiguration">
      <topicdata name="RoutingConfiguration" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.RoutingConfiguration" />
      <apidata name="RoutingConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingConfiguration" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.RoutingConfiguration">
      <topicdata name="RoutingConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.RoutingConfiguration" />
      <apidata name="RoutingConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch" />
        <element api="P:System.ServiceModel.Routing.RoutingConfiguration.FilterTable" />
        <element api="P:System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly" />
        <element api="P:System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingConfiguration" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Routing.RoutingConfiguration.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor" />
        <element api="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Routing.RoutingConfiguration.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingConfiguration.#ctor(System.ServiceModel.Dispatcher.MessageFilterTable{System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ServiceEndpoint}},System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Routing.RoutingConfiguration.#ctor" />
      <parameters>
        <parameter name="filterTable">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="routeOnHeadersOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.RoutingConfiguration.EnsureOrderedDispatch">
      <topicdata group="api" />
      <apidata name="EnsureOrderedDispatch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnsureOrderedDispatch" />
      <setter name="set_EnsureOrderedDispatch" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.RoutingConfiguration.FilterTable">
      <topicdata group="api" />
      <apidata name="FilterTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FilterTable" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.RoutingConfiguration.RouteOnHeadersOnly">
      <topicdata group="api" />
      <apidata name="RouteOnHeadersOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RouteOnHeadersOnly" />
      <setter name="set_RouteOnHeadersOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.RoutingConfiguration.SoapProcessingEnabled">
      <topicdata group="api" />
      <apidata name="SoapProcessingEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapProcessingEnabled" />
      <setter name="set_SoapProcessingEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.RoutingExtension">
      <topicdata group="api" />
      <apidata name="RoutingExtension" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.IExtension`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.RoutingExtension.ApplyConfiguration(System.ServiceModel.Routing.RoutingConfiguration)" />
        <element api="M:System.ServiceModel.Routing.RoutingExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Routing.RoutingExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.RoutingExtension">
      <topicdata name="RoutingExtension" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.RoutingExtension" />
      <apidata name="RoutingExtension" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.RoutingExtension.ApplyConfiguration(System.ServiceModel.Routing.RoutingConfiguration)" />
        <element api="M:System.ServiceModel.Routing.RoutingExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Routing.RoutingExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingExtension" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingExtension.ApplyConfiguration(System.ServiceModel.Routing.RoutingConfiguration)">
      <topicdata group="api" />
      <apidata name="ApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="routingConfiguration">
          <type api="T:System.ServiceModel.Routing.RoutingConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Attach(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IExtension`1.Attach" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.IExtension`1.Attach(`0)">
          <type api="T:System.ServiceModel.IExtension`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingExtension" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingExtension.System#ServiceModel#IExtension{System#ServiceModel#ServiceHostBase}#Detach(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" eiiName="IExtension`1.Detach" />
      <apidata name="Detach" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.IExtension`1.Detach(`0)">
          <type api="T:System.ServiceModel.IExtension`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingExtension" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.RoutingService">
      <topicdata group="api" />
      <apidata name="RoutingService" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Routing.ISimplexDatagramRouter" ref="true" />
        <type api="T:System.ServiceModel.Routing.ISimplexSessionRouter" ref="true" />
        <type api="T:System.ServiceModel.Routing.IRequestReplyRouter" ref="true" />
        <type api="T:System.ServiceModel.Routing.IDuplexSessionRouter" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.ServiceBehaviorAttribute" ref="true" />
          <assignment name="AddressFilterMode">
            <type api="T:System.ServiceModel.AddressFilterMode" ref="false" />
            <enumValue>
              <field name="Any" />
            </enumValue>
          </assignment>
          <assignment name="InstanceContextMode">
            <type api="T:System.ServiceModel.InstanceContextMode" ref="false" />
            <enumValue>
              <field name="PerSession" />
            </enumValue>
          </assignment>
          <assignment name="UseSynchronizationContext">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="ValidateMustUnderstand">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute" ref="true" />
          <assignment name="RequirementsMode">
            <type api="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.RoutingService">
      <topicdata name="RoutingService" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.RoutingService" />
      <apidata name="RoutingService" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IDuplexSessionRouter.BeginProcessMessage" />
      <apidata name="BeginProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Routing.IDuplexSessionRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
          <assignment name="Impersonation">
            <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
      <topicdata group="api" eiiName="IDuplexSessionRouter.EndProcessMessage" />
      <apidata name="EndProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Routing.IDuplexSessionRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="IRequestReplyRouter.BeginProcessRequest" />
      <apidata name="BeginProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Routing.IRequestReplyRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
          <assignment name="Impersonation">
            <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)">
      <topicdata group="api" eiiName="IRequestReplyRouter.EndProcessRequest" />
      <apidata name="EndProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Routing.IRequestReplyRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ISimplexDatagramRouter.BeginProcessMessage" />
      <apidata name="BeginProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Routing.ISimplexDatagramRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
          <assignment name="Impersonation">
            <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)">
      <topicdata group="api" eiiName="ISimplexDatagramRouter.EndProcessMessage" />
      <apidata name="EndProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Routing.ISimplexDatagramRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
      <topicdata group="api" eiiName="ISimplexSessionRouter.BeginProcessMessage" />
      <apidata name="BeginProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Routing.ISimplexSessionRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ServiceModel.OperationBehaviorAttribute" ref="true" />
          <assignment name="Impersonation">
            <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
            <enumValue>
              <field name="Allowed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)">
      <topicdata group="api" eiiName="ISimplexSessionRouter.EndProcessMessage" />
      <apidata name="EndProcessMessage" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Routing.ISimplexSessionRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.RoutingService" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Routing.SoapProcessingBehavior">
      <topicdata group="api" />
      <apidata name="SoapProcessingBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.SoapProcessingBehavior.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.SoapProcessingBehavior.#ctor" />
        <element api="M:System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
        <element api="M:System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="P:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.SoapProcessingBehavior">
      <topicdata name="SoapProcessingBehavior" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.SoapProcessingBehavior" />
      <apidata name="SoapProcessingBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.SoapProcessingBehavior.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" />
        <element api="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" />
        <element api="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" />
        <element api="M:System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.SoapProcessingBehavior" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.SoapProcessingBehavior">
      <topicdata name="SoapProcessingBehavior" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.SoapProcessingBehavior" />
      <apidata name="SoapProcessingBehavior" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.SoapProcessingBehavior.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.SoapProcessingBehavior" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.SoapProcessingBehavior.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.SoapProcessingBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.SoapProcessingBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <topicdata group="api" />
      <apidata name="AddBindingParameters" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="bindingParameters">
          <type api="T:System.ServiceModel.Channels.BindingParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.SoapProcessingBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <topicdata group="api" />
      <apidata name="ApplyClientBehavior" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="clientRuntime">
          <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.SoapProcessingBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.SoapProcessingBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <topicdata group="api" />
      <apidata name="ApplyDispatchBehavior" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="endpointDispatcher">
          <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.SoapProcessingBehavior" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Routing.SoapProcessingBehavior.ProcessMessages">
      <topicdata group="api" />
      <apidata name="ProcessMessages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProcessMessages" />
      <setter name="set_ProcessMessages" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.SoapProcessingBehavior" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Routing.SoapProcessingBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.Description.IEndpointBehavior" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing" />
        <type api="T:System.ServiceModel.Routing.SoapProcessingBehavior" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>